// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module solve_NTRU_FFT_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vla1_address0,
        vla1_ce0,
        vla1_we0,
        vla1_d0,
        vla1_q0,
        vla1_address1,
        vla1_ce1,
        vla1_we1,
        vla1_d1,
        vla1_q1,
        f,
        logn,
        fpr_gm_tab_address0,
        fpr_gm_tab_ce0,
        fpr_gm_tab_q0,
        fpr_gm_tab_address1,
        fpr_gm_tab_ce1,
        fpr_gm_tab_q1
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] vla1_address0;
output   vla1_ce0;
output  [3:0] vla1_we0;
output  [31:0] vla1_d0;
input  [31:0] vla1_q0;
output  [11:0] vla1_address1;
output   vla1_ce1;
output  [3:0] vla1_we1;
output  [31:0] vla1_d1;
input  [31:0] vla1_q1;
input  [13:0] f;
input  [31:0] logn;
output  [10:0] fpr_gm_tab_address0;
output   fpr_gm_tab_ce0;
input  [63:0] fpr_gm_tab_q0;
output  [10:0] fpr_gm_tab_address1;
output   fpr_gm_tab_ce1;
input  [63:0] fpr_gm_tab_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] vla1_address0;
reg vla1_ce0;
reg[3:0] vla1_we0;
reg[31:0] vla1_d0;
reg[11:0] vla1_address1;
reg vla1_ce1;
reg[3:0] vla1_we1;
reg[31:0] vla1_d1;
reg fpr_gm_tab_ce0;
reg fpr_gm_tab_ce1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_255_p2;
reg   [63:0] reg_281;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
reg   [10:0] trunc_ln32_reg_815;
wire   [62:0] zext_ln957_fu_350_p1;
reg   [62:0] zext_ln957_reg_827;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln953_fu_335_p2;
wire   [63:0] zext_ln955_fu_354_p1;
reg   [62:0] trunc_ln33_reg_837;
wire   [9:0] trunc_ln965_fu_368_p1;
reg   [9:0] trunc_ln965_reg_842;
reg   [10:0] trunc_ln34_reg_847;
wire   [62:0] i1_2_fu_387_p2;
reg   [62:0] i1_2_reg_855;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln959_fu_382_p2;
reg   [63:0] s_re_reg_870;
wire    ap_CS_fsm_state4;
reg   [63:0] s_im_reg_876;
reg   [11:0] trunc_ln35_reg_885;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln968_fu_451_p2;
reg   [11:0] trunc_ln973_2_reg_891;
reg   [11:0] vla1_addr_356_reg_897;
reg   [11:0] vla1_addr_357_reg_903;
reg   [11:0] trunc_ln36_reg_908;
wire   [63:0] j_9_fu_584_p2;
reg   [63:0] j_9_reg_914;
wire   [63:0] j1_fu_594_p2;
wire   [63:0] add_ln959_fu_600_p2;
reg   [31:0] vla1_load_236_reg_929;
wire    ap_CS_fsm_state6;
reg   [31:0] vla1_load_237_reg_934;
reg   [11:0] vla1_addr_358_reg_939;
reg   [11:0] vla1_addr_359_reg_945;
wire   [63:0] y_re_1_fu_626_p1;
wire    ap_CS_fsm_state7;
wire   [63:0] y_im_1_fu_640_p1;
wire   [63:0] grp_fu_259_p2;
reg   [63:0] test1_reg_962;
wire    ap_CS_fsm_state10;
wire   [63:0] grp_fu_263_p2;
reg   [63:0] test2_reg_967;
wire   [63:0] grp_fu_267_p2;
reg   [63:0] test1_6_reg_972;
wire   [63:0] grp_fu_271_p2;
reg   [63:0] test2_6_reg_977;
reg   [11:0] vla1_addr_reg_982;
reg   [11:0] vla1_addr_353_reg_988;
wire   [63:0] grp_fu_251_p2;
reg   [63:0] fpct_d_re_reg_993;
wire   [63:0] x_re_fu_668_p1;
wire    ap_CS_fsm_state14;
reg   [11:0] vla1_addr_354_reg_1005;
reg   [11:0] vla1_addr_355_reg_1011;
wire   [63:0] x_im_fu_696_p1;
wire    ap_CS_fsm_state15;
reg   [63:0] fpct_re_3_reg_1022;
wire    ap_CS_fsm_state16;
reg   [63:0] indvars_iv_reg_208;
reg   [63:0] j1_4_reg_218;
reg   [62:0] i1_reg_230;
reg   [63:0] j_02_reg_241;
wire    ap_CS_fsm_state19;
wire   [63:0] zext_ln965_fu_410_p1;
wire   [63:0] zext_ln966_fu_421_p1;
wire   [63:0] zext_ln974_fu_540_p1;
wire   [63:0] zext_ln974_1_fu_551_p1;
wire   [63:0] zext_ln975_fu_606_p1;
wire   [63:0] zext_ln975_1_fu_615_p1;
wire   [63:0] zext_ln972_fu_646_p1;
wire   [63:0] zext_ln972_1_fu_655_p1;
wire   [63:0] zext_ln973_fu_674_p1;
wire   [63:0] zext_ln973_1_fu_683_p1;
reg   [63:0] m_fu_86;
wire   [63:0] m_9_fu_431_p2;
reg   [62:0] t_fu_90;
reg   [31:0] u_010_fu_94;
wire   [31:0] u_fu_426_p2;
wire   [31:0] trunc_ln12_fu_706_p1;
wire   [31:0] trunc_ln13_fu_726_p1;
wire    ap_CS_fsm_state18;
wire   [31:0] trunc_ln32_2_fu_745_p1;
wire   [31:0] trunc_ln33_2_fu_765_p1;
reg   [63:0] grp_fu_251_p0;
reg   [63:0] grp_fu_251_p1;
wire    ap_CS_fsm_state11;
reg   [63:0] grp_fu_255_p0;
reg   [63:0] grp_fu_255_p1;
wire   [63:0] zext_ln949_fu_287_p1;
wire   [63:0] n_fu_291_p2;
wire   [61:0] ht_fu_340_p4;
wire   [9:0] trunc_ln965_1_fu_393_p1;
wire   [9:0] add_ln965_fu_397_p2;
wire   [10:0] shl_ln_fu_402_p3;
wire   [10:0] or_ln966_fu_415_p2;
wire   [10:0] trunc_ln972_fu_457_p1;
wire   [13:0] shl_ln112_fu_461_p3;
wire   [13:0] add_ln972_fu_469_p2;
wire   [10:0] add_ln973_fu_484_p2;
wire   [13:0] shl_ln113_fu_489_p3;
wire   [13:0] add_ln973_1_fu_497_p2;
wire   [10:0] add_ln974_fu_512_p2;
wire   [13:0] shl_ln114_fu_517_p3;
wire   [13:0] add_ln974_1_fu_525_p2;
wire   [11:0] trunc_ln974_1_fu_530_p4;
wire   [11:0] add_ln974_2_fu_545_p2;
wire   [10:0] add_ln975_fu_556_p2;
wire   [13:0] shl_ln115_fu_561_p3;
wire   [13:0] add_ln975_1_fu_569_p2;
wire   [63:0] zext_ln953_fu_590_p1;
wire   [11:0] add_ln975_2_fu_610_p2;
wire   [63:0] tmp_87_fu_620_p3;
wire   [63:0] tmp_88_fu_632_p3;
wire   [11:0] add_ln972_1_fu_650_p2;
wire   [63:0] tmp_fu_660_p3;
wire   [11:0] add_ln973_2_fu_678_p2;
wire   [63:0] tmp_s_fu_688_p3;
wire   [63:0] bitcast_ln12_fu_702_p1;
wire   [63:0] bitcast_ln13_fu_722_p1;
wire   [63:0] bitcast_ln32_fu_742_p1;
wire   [63:0] bitcast_ln33_fu_761_p1;
reg   [1:0] grp_fu_251_opcode;
reg   [1:0] grp_fu_255_opcode;
reg   [18:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
end

solve_NTRU_dadddsub_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_3_full_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_251_p0),
    .din1(grp_fu_251_p1),
    .opcode(grp_fu_251_opcode),
    .ce(1'b1),
    .dout(grp_fu_251_p2)
);

solve_NTRU_dadddsub_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_3_full_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_255_p0),
    .din1(grp_fu_255_p1),
    .opcode(grp_fu_255_opcode),
    .ce(1'b1),
    .dout(grp_fu_255_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_re_1_fu_626_p1),
    .din1(s_re_reg_870),
    .ce(1'b1),
    .dout(grp_fu_259_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_im_1_fu_640_p1),
    .din1(s_im_reg_876),
    .ce(1'b1),
    .dout(grp_fu_263_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_re_1_fu_626_p1),
    .din1(s_im_reg_876),
    .ce(1'b1),
    .dout(grp_fu_267_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_im_1_fu_640_p1),
    .din1(s_re_reg_870),
    .ce(1'b1),
    .dout(grp_fu_271_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln953_fu_335_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_reg_230 <= 63'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln968_fu_451_p2 == 1'd0))) begin
        i1_reg_230 <= i1_2_reg_855;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln953_fu_335_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvars_iv_reg_208 <= zext_ln955_fu_354_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln968_fu_451_p2 == 1'd0))) begin
        indvars_iv_reg_208 <= add_ln959_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln953_fu_335_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j1_4_reg_218 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln968_fu_451_p2 == 1'd0))) begin
        j1_4_reg_218 <= j1_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_02_reg_241 <= j_9_reg_914;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_02_reg_241 <= j1_4_reg_218;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                m_fu_86[1] <= 1'b1;
        m_fu_86[2] <= 1'b0;
        m_fu_86[3] <= 1'b0;
        m_fu_86[4] <= 1'b0;
        m_fu_86[5] <= 1'b0;
        m_fu_86[6] <= 1'b0;
        m_fu_86[7] <= 1'b0;
        m_fu_86[8] <= 1'b0;
        m_fu_86[9] <= 1'b0;
        m_fu_86[10] <= 1'b0;
        m_fu_86[11] <= 1'b0;
        m_fu_86[12] <= 1'b0;
        m_fu_86[13] <= 1'b0;
        m_fu_86[14] <= 1'b0;
        m_fu_86[15] <= 1'b0;
        m_fu_86[16] <= 1'b0;
        m_fu_86[17] <= 1'b0;
        m_fu_86[18] <= 1'b0;
        m_fu_86[19] <= 1'b0;
        m_fu_86[20] <= 1'b0;
        m_fu_86[21] <= 1'b0;
        m_fu_86[22] <= 1'b0;
        m_fu_86[23] <= 1'b0;
        m_fu_86[24] <= 1'b0;
        m_fu_86[25] <= 1'b0;
        m_fu_86[26] <= 1'b0;
        m_fu_86[27] <= 1'b0;
        m_fu_86[28] <= 1'b0;
        m_fu_86[29] <= 1'b0;
        m_fu_86[30] <= 1'b0;
        m_fu_86[31] <= 1'b0;
        m_fu_86[32] <= 1'b0;
        m_fu_86[33] <= 1'b0;
        m_fu_86[34] <= 1'b0;
        m_fu_86[35] <= 1'b0;
        m_fu_86[36] <= 1'b0;
        m_fu_86[37] <= 1'b0;
        m_fu_86[38] <= 1'b0;
        m_fu_86[39] <= 1'b0;
        m_fu_86[40] <= 1'b0;
        m_fu_86[41] <= 1'b0;
        m_fu_86[42] <= 1'b0;
        m_fu_86[43] <= 1'b0;
        m_fu_86[44] <= 1'b0;
        m_fu_86[45] <= 1'b0;
        m_fu_86[46] <= 1'b0;
        m_fu_86[47] <= 1'b0;
        m_fu_86[48] <= 1'b0;
        m_fu_86[49] <= 1'b0;
        m_fu_86[50] <= 1'b0;
        m_fu_86[51] <= 1'b0;
        m_fu_86[52] <= 1'b0;
        m_fu_86[53] <= 1'b0;
        m_fu_86[54] <= 1'b0;
        m_fu_86[55] <= 1'b0;
        m_fu_86[56] <= 1'b0;
        m_fu_86[57] <= 1'b0;
        m_fu_86[58] <= 1'b0;
        m_fu_86[59] <= 1'b0;
        m_fu_86[60] <= 1'b0;
        m_fu_86[61] <= 1'b0;
        m_fu_86[62] <= 1'b0;
        m_fu_86[63] <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln959_fu_382_p2 == 1'd1))) begin
                m_fu_86[63 : 1] <= m_9_fu_431_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_fu_90 <= {{n_fu_291_p2[63:1]}};
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln959_fu_382_p2 == 1'd1))) begin
        t_fu_90 <= zext_ln957_reg_827;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        u_010_fu_94 <= 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln959_fu_382_p2 == 1'd1))) begin
        u_010_fu_94 <= u_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fpct_d_re_reg_993 <= grp_fu_251_p2;
        vla1_addr_353_reg_988 <= zext_ln972_1_fu_655_p1;
        vla1_addr_reg_982 <= zext_ln972_fu_646_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fpct_re_3_reg_1022 <= grp_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_2_reg_855 <= i1_2_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln968_fu_451_p2 == 1'd1))) begin
        j_9_reg_914 <= j_9_fu_584_p2;
        trunc_ln35_reg_885 <= {{add_ln972_fu_469_p2[13:2]}};
        trunc_ln36_reg_908 <= {{add_ln975_1_fu_569_p2[13:2]}};
        trunc_ln973_2_reg_891 <= {{add_ln973_1_fu_497_p2[13:2]}};
        vla1_addr_356_reg_897 <= zext_ln974_fu_540_p1;
        vla1_addr_357_reg_903 <= zext_ln974_1_fu_551_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_281 <= grp_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_im_reg_876 <= fpr_gm_tab_q0;
        s_re_reg_870 <= fpr_gm_tab_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        test1_6_reg_972 <= grp_fu_267_p2;
        test1_reg_962 <= grp_fu_259_p2;
        test2_6_reg_977 <= grp_fu_271_p2;
        test2_reg_967 <= grp_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln32_reg_815 <= {{n_fu_291_p2[11:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln953_fu_335_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln33_reg_837 <= {{m_fu_86[63:1]}};
        trunc_ln34_reg_847 <= {{t_fu_90[11:1]}};
        trunc_ln965_reg_842[9 : 1] <= trunc_ln965_fu_368_p1[9 : 1];
        zext_ln957_reg_827[61 : 0] <= zext_ln957_fu_350_p1[61 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_addr_354_reg_1005 <= zext_ln973_fu_674_p1;
        vla1_addr_355_reg_1011 <= zext_ln973_1_fu_683_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        vla1_addr_358_reg_939 <= zext_ln975_fu_606_p1;
        vla1_addr_359_reg_945 <= zext_ln975_1_fu_615_p1;
        vla1_load_236_reg_929 <= vla1_q1;
        vla1_load_237_reg_934 <= vla1_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln953_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln953_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fpr_gm_tab_ce0 = 1'b1;
    end else begin
        fpr_gm_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fpr_gm_tab_ce1 = 1'b1;
    end else begin
        fpr_gm_tab_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_251_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_251_opcode = 2'd0;
    end else begin
        grp_fu_251_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_251_p0 = x_im_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_251_p0 = x_re_fu_668_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_251_p0 = test1_reg_962;
    end else begin
        grp_fu_251_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_251_p1 = reg_281;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_251_p1 = fpct_d_re_reg_993;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_251_p1 = test2_reg_967;
    end else begin
        grp_fu_251_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_255_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_255_opcode = 2'd0;
    end else begin
        grp_fu_255_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_255_p0 = x_im_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_255_p0 = x_re_fu_668_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_255_p0 = test1_6_reg_972;
    end else begin
        grp_fu_255_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_255_p1 = reg_281;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_255_p1 = fpct_d_re_reg_993;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_255_p1 = test2_6_reg_977;
    end else begin
        grp_fu_255_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_address0 = vla1_addr_359_reg_945;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_address0 = vla1_addr_357_reg_903;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        vla1_address0 = vla1_addr_355_reg_1011;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla1_address0 = vla1_addr_353_reg_988;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_address0 = zext_ln973_1_fu_683_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        vla1_address0 = zext_ln972_1_fu_655_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        vla1_address0 = zext_ln975_1_fu_615_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vla1_address0 = zext_ln974_1_fu_551_p1;
    end else begin
        vla1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_address1 = vla1_addr_358_reg_939;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_address1 = vla1_addr_356_reg_897;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        vla1_address1 = vla1_addr_354_reg_1005;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla1_address1 = vla1_addr_reg_982;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_address1 = zext_ln973_fu_674_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        vla1_address1 = zext_ln972_fu_646_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        vla1_address1 = zext_ln975_fu_606_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vla1_address1 = zext_ln974_fu_540_p1;
    end else begin
        vla1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        vla1_ce0 = 1'b1;
    end else begin
        vla1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        vla1_ce1 = 1'b1;
    end else begin
        vla1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_d0 = {{bitcast_ln33_fu_761_p1[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_d0 = {{bitcast_ln32_fu_742_p1[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        vla1_d0 = {{bitcast_ln13_fu_722_p1[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla1_d0 = {{bitcast_ln12_fu_702_p1[63:32]}};
    end else begin
        vla1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_d1 = trunc_ln33_2_fu_765_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_d1 = trunc_ln32_2_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        vla1_d1 = trunc_ln13_fu_726_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla1_d1 = trunc_ln12_fu_706_p1;
    end else begin
        vla1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16))) begin
        vla1_we0 = 4'd15;
    end else begin
        vla1_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16))) begin
        vla1_we1 = 4'd15;
    end else begin
        vla1_we1 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln953_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln959_fu_382_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln968_fu_451_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln959_fu_600_p2 = (zext_ln953_fu_590_p1 + indvars_iv_reg_208);

assign add_ln965_fu_397_p2 = (trunc_ln965_1_fu_393_p1 + trunc_ln965_reg_842);

assign add_ln972_1_fu_650_p2 = (trunc_ln35_reg_885 + 12'd1);

assign add_ln972_fu_469_p2 = (shl_ln112_fu_461_p3 + f);

assign add_ln973_1_fu_497_p2 = (shl_ln113_fu_489_p3 + f);

assign add_ln973_2_fu_678_p2 = (trunc_ln973_2_reg_891 + 12'd1);

assign add_ln973_fu_484_p2 = (trunc_ln972_fu_457_p1 + trunc_ln32_reg_815);

assign add_ln974_1_fu_525_p2 = (shl_ln114_fu_517_p3 + f);

assign add_ln974_2_fu_545_p2 = (trunc_ln974_1_fu_530_p4 + 12'd1);

assign add_ln974_fu_512_p2 = (trunc_ln972_fu_457_p1 + trunc_ln34_reg_847);

assign add_ln975_1_fu_569_p2 = (shl_ln115_fu_561_p3 + f);

assign add_ln975_2_fu_610_p2 = (trunc_ln36_reg_908 + 12'd1);

assign add_ln975_fu_556_p2 = (add_ln974_fu_512_p2 + trunc_ln32_reg_815);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign bitcast_ln12_fu_702_p1 = grp_fu_251_p2;

assign bitcast_ln13_fu_722_p1 = grp_fu_251_p2;

assign bitcast_ln32_fu_742_p1 = fpct_re_3_reg_1022;

assign bitcast_ln33_fu_761_p1 = reg_281;

assign fpr_gm_tab_address0 = zext_ln966_fu_421_p1;

assign fpr_gm_tab_address1 = zext_ln965_fu_410_p1;

assign ht_fu_340_p4 = {{t_fu_90[62:1]}};

assign i1_2_fu_387_p2 = (i1_reg_230 + 63'd1);

assign icmp_ln953_fu_335_p2 = ((u_010_fu_94 < logn) ? 1'b1 : 1'b0);

assign icmp_ln959_fu_382_p2 = ((i1_reg_230 == trunc_ln33_reg_837) ? 1'b1 : 1'b0);

assign icmp_ln968_fu_451_p2 = ((j_02_reg_241 < indvars_iv_reg_208) ? 1'b1 : 1'b0);

assign j1_fu_594_p2 = (zext_ln953_fu_590_p1 + j1_4_reg_218);

assign j_9_fu_584_p2 = (j_02_reg_241 + 64'd1);

assign m_9_fu_431_p2 = m_fu_86 << 64'd1;

assign n_fu_291_p2 = 64'd1 << zext_ln949_fu_287_p1;

assign or_ln966_fu_415_p2 = (shl_ln_fu_402_p3 | 11'd1);

assign shl_ln112_fu_461_p3 = {{trunc_ln972_fu_457_p1}, {3'd0}};

assign shl_ln113_fu_489_p3 = {{add_ln973_fu_484_p2}, {3'd0}};

assign shl_ln114_fu_517_p3 = {{add_ln974_fu_512_p2}, {3'd0}};

assign shl_ln115_fu_561_p3 = {{add_ln975_fu_556_p2}, {3'd0}};

assign shl_ln_fu_402_p3 = {{add_ln965_fu_397_p2}, {1'd0}};

assign tmp_87_fu_620_p3 = {{vla1_load_237_reg_934}, {vla1_load_236_reg_929}};

assign tmp_88_fu_632_p3 = {{vla1_q0}, {vla1_q1}};

assign tmp_fu_660_p3 = {{vla1_q0}, {vla1_q1}};

assign tmp_s_fu_688_p3 = {{vla1_q0}, {vla1_q1}};

assign trunc_ln12_fu_706_p1 = bitcast_ln12_fu_702_p1[31:0];

assign trunc_ln13_fu_726_p1 = bitcast_ln13_fu_722_p1[31:0];

assign trunc_ln32_2_fu_745_p1 = bitcast_ln32_fu_742_p1[31:0];

assign trunc_ln33_2_fu_765_p1 = bitcast_ln33_fu_761_p1[31:0];

assign trunc_ln965_1_fu_393_p1 = i1_reg_230[9:0];

assign trunc_ln965_fu_368_p1 = m_fu_86[9:0];

assign trunc_ln972_fu_457_p1 = j_02_reg_241[10:0];

assign trunc_ln974_1_fu_530_p4 = {{add_ln974_1_fu_525_p2[13:2]}};

assign u_fu_426_p2 = (u_010_fu_94 + 32'd1);

assign x_im_fu_696_p1 = tmp_s_fu_688_p3;

assign x_re_fu_668_p1 = tmp_fu_660_p3;

assign y_im_1_fu_640_p1 = tmp_88_fu_632_p3;

assign y_re_1_fu_626_p1 = tmp_87_fu_620_p3;

assign zext_ln949_fu_287_p1 = logn;

assign zext_ln953_fu_590_p1 = t_fu_90;

assign zext_ln955_fu_354_p1 = ht_fu_340_p4;

assign zext_ln957_fu_350_p1 = ht_fu_340_p4;

assign zext_ln965_fu_410_p1 = shl_ln_fu_402_p3;

assign zext_ln966_fu_421_p1 = or_ln966_fu_415_p2;

assign zext_ln972_1_fu_655_p1 = add_ln972_1_fu_650_p2;

assign zext_ln972_fu_646_p1 = trunc_ln35_reg_885;

assign zext_ln973_1_fu_683_p1 = add_ln973_2_fu_678_p2;

assign zext_ln973_fu_674_p1 = trunc_ln973_2_reg_891;

assign zext_ln974_1_fu_551_p1 = add_ln974_2_fu_545_p2;

assign zext_ln974_fu_540_p1 = trunc_ln974_1_fu_530_p4;

assign zext_ln975_1_fu_615_p1 = add_ln975_2_fu_610_p2;

assign zext_ln975_fu_606_p1 = trunc_ln36_reg_908;

always @ (posedge ap_clk) begin
    zext_ln957_reg_827[62] <= 1'b0;
    trunc_ln965_reg_842[0] <= 1'b0;
    m_fu_86[0] <= 1'b0;
end

endmodule //solve_NTRU_FFT_1
