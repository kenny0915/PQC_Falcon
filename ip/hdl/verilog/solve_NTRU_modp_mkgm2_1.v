// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module solve_NTRU_modp_mkgm2_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vla1_address0,
        vla1_ce0,
        vla1_we0,
        vla1_d0,
        gm,
        igm,
        logn,
        g,
        p,
        p0i
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] vla1_address0;
output   vla1_ce0;
output  [3:0] vla1_we0;
output  [31:0] vla1_d0;
input  [13:0] gm;
input  [13:0] igm;
input  [31:0] logn;
input  [30:0] g;
input  [24:0] p;
input  [30:0] p0i;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] vla1_address0;
reg vla1_ce0;
reg[3:0] vla1_we0;
reg[31:0] vla1_d0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] REV10_address0;
reg    REV10_ce0;
wire   [9:0] REV10_q0;
wire   [31:0] grp_modp_montymul_fu_184_ap_return;
reg   [31:0] reg_211;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_173_fu_404_p3;
wire    ap_CS_fsm_state10;
wire   [31:0] p0i_cast_fu_218_p1;
reg   [31:0] p0i_cast_reg_597;
wire   [31:0] p_cast_cast_cast_cast_fu_227_p1;
reg   [31:0] p_cast_cast_cast_cast_reg_603;
wire   [31:0] z_90_fu_232_p2;
reg   [31:0] z_90_reg_610;
reg   [30:0] z_91_reg_617;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [63:0] n_fu_338_p2;
reg   [63:0] n_reg_637;
wire   [31:0] zext_ln757_10_fu_344_p1;
reg   [31:0] zext_ln757_10_reg_642;
wire   [31:0] e_fu_383_p2;
reg   [31:0] e_reg_664;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln954_fu_361_p2;
wire  signed [31:0] sext_ln808_fu_400_p1;
reg  signed [31:0] sext_ln808_reg_669;
wire   [63:0] sh_prom9_fu_480_p1;
reg   [63:0] sh_prom9_reg_698;
reg   [31:0] x1_02_load_reg_706;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln962_fu_487_p2;
reg   [31:0] x2_load_reg_711;
reg   [11:0] lshr_ln34_reg_721;
wire    ap_CS_fsm_state12;
wire    grp_modp_montymul_fu_184_ap_ready;
reg   [31:0] grp_modp_montymul_fu_184_a;
reg   [31:0] grp_modp_montymul_fu_184_b;
reg   [31:0] grp_modp_montymul_fu_184_p;
reg   [31:0] grp_modp_montymul_fu_184_p0i;
wire    x2_3_modp_montymul_fu_193_ap_ready;
wire   [31:0] x2_3_modp_montymul_fu_193_ap_return;
wire   [31:0] z_fu_280_p2;
wire   [31:0] g_cast_fu_329_p1;
wire    ap_CS_fsm_state9;
wire   [63:0] shl_ln966_fu_506_p2;
wire   [63:0] zext_ln967_2_fu_554_p1;
wire   [63:0] zext_ln968_fu_574_p1;
wire    ap_CS_fsm_state13;
reg   [31:0] g_assign_9_fu_88;
reg   [31:0] k_06_fu_92;
wire   [31:0] k_fu_367_p2;
reg   [31:0] z_78_fu_96;
wire   [31:0] z_89_fu_464_p2;
reg   [5:0] i_fu_100;
wire   [5:0] i_14_fu_412_p2;
reg   [63:0] u_01_fu_104;
wire   [63:0] u_199_fu_492_p2;
reg   [31:0] x1_02_fu_108;
reg   [31:0] x2_fu_112;
wire  signed [24:0] p_cast_cast_cast_fu_223_p0;
wire  signed [30:0] p_cast_cast_cast_fu_223_p1;
wire   [31:0] shl_ln685_fu_238_p2;
wire   [31:0] sub_ln685_fu_244_p2;
wire   [0:0] tmp_fu_250_p3;
wire   [24:0] select_ln685_fu_258_p3;
wire  signed [24:0] and_ln685_fu_266_p1;
wire   [24:0] and_ln685_fu_266_p2;
wire  signed [30:0] sext_ln685_fu_272_p1;
wire   [31:0] zext_ln685_fu_276_p1;
wire   [0:0] trunc_ln735_fu_288_p1;
wire   [24:0] select_ln757_fu_292_p3;
wire  signed [24:0] and_ln757_fu_300_p1;
wire   [24:0] and_ln757_fu_300_p2;
wire  signed [30:0] sext_ln757_fu_305_p1;
wire   [31:0] zext_ln757_fu_309_p1;
wire   [31:0] add_ln757_fu_313_p2;
wire   [63:0] zext_ln946_fu_334_p1;
wire  signed [5:0] sext_ln808_fu_400_p0;
wire  signed [5:0] tmp_173_fu_404_p1;
wire  signed [5:0] i_14_fu_412_p0;
wire   [31:0] lshr_ln813_fu_442_p2;
wire   [0:0] trunc_ln813_fu_446_p1;
wire   [31:0] xor_ln813_fu_436_p2;
wire   [31:0] select_ln813_fu_450_p3;
wire   [31:0] and_ln813_fu_458_p2;
wire   [31:0] k_12_fu_475_p2;
wire   [11:0] shl_ln_fu_527_p3;
wire   [13:0] zext_ln967_fu_535_p1;
wire   [13:0] add_ln967_fu_539_p2;
wire   [11:0] lshr_ln_fu_544_p4;
wire   [13:0] add_ln968_fu_559_p2;
reg   [12:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
end

solve_NTRU_modp_mkgm2_1_REV10_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
REV10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(REV10_address0),
    .ce0(REV10_ce0),
    .q0(REV10_q0)
);

solve_NTRU_modp_montymul grp_modp_montymul_fu_184(
    .ap_ready(grp_modp_montymul_fu_184_ap_ready),
    .a(grp_modp_montymul_fu_184_a),
    .b(grp_modp_montymul_fu_184_b),
    .p(grp_modp_montymul_fu_184_p),
    .p0i(grp_modp_montymul_fu_184_p0i),
    .ap_return(grp_modp_montymul_fu_184_ap_return)
);

solve_NTRU_modp_montymul x2_3_modp_montymul_fu_193(
    .ap_ready(x2_3_modp_montymul_fu_193_ap_ready),
    .a(x2_fu_112),
    .b(reg_211),
    .p(p_cast_cast_cast_cast_reg_603),
    .p0i(p0i_cast_reg_597),
    .ap_return(x2_3_modp_montymul_fu_193_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd0))) begin
        i_fu_100 <= 6'd30;
    end else if (((tmp_173_fu_404_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i_fu_100 <= i_14_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k_06_fu_92 <= logn;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd1))) begin
        k_06_fu_92 <= k_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        u_01_fu_104 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0))) begin
        u_01_fu_104 <= u_199_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        x1_02_fu_108 <= z_90_reg_610;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0))) begin
        x1_02_fu_108 <= grp_modp_montymul_fu_184_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        x2_fu_112 <= z_90_reg_610;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0))) begin
        x2_fu_112 <= x2_3_modp_montymul_fu_193_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd0))) begin
        z_78_fu_96 <= z_90_reg_610;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        z_78_fu_96 <= z_89_fu_464_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd0))) begin
        e_reg_664 <= e_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd1)))) begin
        g_assign_9_fu_88 <= grp_modp_montymul_fu_184_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        lshr_ln34_reg_721 <= {{add_ln968_fu_559_p2[13:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        n_reg_637 <= n_fu_338_p2;
        zext_ln757_10_reg_642[30 : 0] <= zext_ln757_10_fu_344_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p0i_cast_reg_597[30 : 0] <= p0i_cast_fu_218_p1[30 : 0];
        p_cast_cast_cast_cast_reg_603[30 : 0] <= p_cast_cast_cast_cast_fu_227_p1[30 : 0];
        z_90_reg_610 <= z_90_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_173_fu_404_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        reg_211 <= grp_modp_montymul_fu_184_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sext_ln808_reg_669 <= sext_ln808_fu_400_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sh_prom9_reg_698[31 : 0] <= sh_prom9_fu_480_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0))) begin
        x1_02_load_reg_706 <= x1_02_fu_108;
        x2_load_reg_711 <= x2_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        z_91_reg_617 <= {{add_ln757_fu_313_p2[31:1]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        REV10_ce0 = 1'b1;
    end else begin
        REV10_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0))) begin
        grp_modp_montymul_fu_184_a = x1_02_fu_108;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_modp_montymul_fu_184_a = zext_ln757_10_reg_642;
    end else if ((((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_173_fu_404_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_modp_montymul_fu_184_a = z_78_fu_96;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd1))) begin
        grp_modp_montymul_fu_184_a = g_assign_9_fu_88;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_modp_montymul_fu_184_a = g_cast_fu_329_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_modp_montymul_fu_184_a = reg_211;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_modp_montymul_fu_184_a = z_fu_280_p2;
    end else begin
        grp_modp_montymul_fu_184_a = 'bx;
    end
end

always @ (*) begin
    if (((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_modp_montymul_fu_184_b = 32'd1;
    end else if (((tmp_173_fu_404_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_modp_montymul_fu_184_b = z_78_fu_96;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd1)))) begin
        grp_modp_montymul_fu_184_b = g_assign_9_fu_88;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_modp_montymul_fu_184_b = zext_ln757_10_fu_344_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_modp_montymul_fu_184_b = reg_211;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_modp_montymul_fu_184_b = z_fu_280_p2;
    end else begin
        grp_modp_montymul_fu_184_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_173_fu_404_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd1)))) begin
        grp_modp_montymul_fu_184_p = p_cast_cast_cast_cast_reg_603;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_modp_montymul_fu_184_p = p_cast_cast_cast_cast_fu_227_p1;
    end else begin
        grp_modp_montymul_fu_184_p = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_173_fu_404_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd1)))) begin
        grp_modp_montymul_fu_184_p0i = p0i_cast_reg_597;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_modp_montymul_fu_184_p0i = p0i_cast_fu_218_p1;
    end else begin
        grp_modp_montymul_fu_184_p0i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        vla1_address0 = zext_ln968_fu_574_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla1_address0 = zext_ln967_2_fu_554_p1;
    end else begin
        vla1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        vla1_ce0 = 1'b1;
    end else begin
        vla1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        vla1_d0 = x2_load_reg_711;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla1_d0 = x1_02_load_reg_706;
    end else begin
        vla1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        vla1_we0 = 4'd15;
    end else begin
        vla1_we0 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln954_fu_361_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_173_fu_404_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln962_fu_487_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign REV10_address0 = shl_ln966_fu_506_p2;

assign add_ln757_fu_313_p2 = (zext_ln757_fu_309_p1 + grp_modp_montymul_fu_184_ap_return);

assign add_ln967_fu_539_p2 = (zext_ln967_fu_535_p1 + gm);

assign add_ln968_fu_559_p2 = (zext_ln967_fu_535_p1 + igm);

assign and_ln685_fu_266_p1 = p;

assign and_ln685_fu_266_p2 = (select_ln685_fu_258_p3 & and_ln685_fu_266_p1);

assign and_ln757_fu_300_p1 = p;

assign and_ln757_fu_300_p2 = (select_ln757_fu_292_p3 & and_ln757_fu_300_p1);

assign and_ln813_fu_458_p2 = (xor_ln813_fu_436_p2 & select_ln813_fu_450_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign e_fu_383_p2 = ($signed(p_cast_cast_cast_cast_reg_603) + $signed(32'd4294967294));

assign g_cast_fu_329_p1 = g;

assign i_14_fu_412_p0 = i_fu_100;

assign i_14_fu_412_p2 = ($signed(i_14_fu_412_p0) + $signed(6'd63));

assign icmp_ln954_fu_361_p2 = ((k_06_fu_92 < 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln962_fu_487_p2 = ((u_01_fu_104 == n_reg_637) ? 1'b1 : 1'b0);

assign k_12_fu_475_p2 = (32'd10 - logn);

assign k_fu_367_p2 = (k_06_fu_92 + 32'd1);

assign lshr_ln813_fu_442_p2 = e_reg_664 >> sext_ln808_reg_669;

assign lshr_ln_fu_544_p4 = {{add_ln967_fu_539_p2[13:2]}};

assign n_fu_338_p2 = 64'd1 << zext_ln946_fu_334_p1;

assign p0i_cast_fu_218_p1 = p0i;

assign p_cast_cast_cast_cast_fu_227_p1 = $unsigned(p_cast_cast_cast_fu_223_p1);

assign p_cast_cast_cast_fu_223_p0 = p;

assign p_cast_cast_cast_fu_223_p1 = p_cast_cast_cast_fu_223_p0;

assign select_ln685_fu_258_p3 = ((tmp_fu_250_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln757_fu_292_p3 = ((trunc_ln735_fu_288_p1[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln813_fu_450_p3 = ((trunc_ln813_fu_446_p1[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign sext_ln685_fu_272_p1 = $signed(and_ln685_fu_266_p2);

assign sext_ln757_fu_305_p1 = $signed(and_ln757_fu_300_p2);

assign sext_ln808_fu_400_p0 = i_fu_100;

assign sext_ln808_fu_400_p1 = sext_ln808_fu_400_p0;

assign sh_prom9_fu_480_p1 = k_12_fu_475_p2;

assign shl_ln685_fu_238_p2 = z_90_fu_232_p2 << 32'd1;

assign shl_ln966_fu_506_p2 = u_01_fu_104 << sh_prom9_reg_698;

assign shl_ln_fu_527_p3 = {{REV10_q0}, {2'd0}};

assign sub_ln685_fu_244_p2 = (shl_ln685_fu_238_p2 - p_cast_cast_cast_cast_fu_227_p1);

assign tmp_173_fu_404_p1 = i_fu_100;

assign tmp_173_fu_404_p3 = tmp_173_fu_404_p1[32'd5];

assign tmp_fu_250_p3 = sub_ln685_fu_244_p2[32'd31];

assign trunc_ln735_fu_288_p1 = grp_modp_montymul_fu_184_ap_return[0:0];

assign trunc_ln813_fu_446_p1 = lshr_ln813_fu_442_p2[0:0];

assign u_199_fu_492_p2 = (u_01_fu_104 + 64'd1);

assign xor_ln813_fu_436_p2 = (reg_211 ^ grp_modp_montymul_fu_184_ap_return);

assign z_89_fu_464_p2 = (reg_211 ^ and_ln813_fu_458_p2);

assign z_90_fu_232_p2 = ($signed(32'd2147483648) - $signed(p_cast_cast_cast_cast_fu_227_p1));

assign z_fu_280_p2 = (zext_ln685_fu_276_p1 + sub_ln685_fu_244_p2);

assign zext_ln685_fu_276_p1 = $unsigned(sext_ln685_fu_272_p1);

assign zext_ln757_10_fu_344_p1 = z_91_reg_617;

assign zext_ln757_fu_309_p1 = $unsigned(sext_ln757_fu_305_p1);

assign zext_ln946_fu_334_p1 = logn;

assign zext_ln967_2_fu_554_p1 = lshr_ln_fu_544_p4;

assign zext_ln967_fu_535_p1 = shl_ln_fu_527_p3;

assign zext_ln968_fu_574_p1 = lshr_ln34_reg_721;

always @ (posedge ap_clk) begin
    p0i_cast_reg_597[31] <= 1'b0;
    p_cast_cast_cast_cast_reg_603[31] <= 1'b0;
    zext_ln757_10_reg_642[31] <= 1'b0;
    sh_prom9_reg_698[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //solve_NTRU_modp_mkgm2_1
