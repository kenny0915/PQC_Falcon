// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module solve_NTRU_zint_rebuild_CRT_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vla1_address0,
        vla1_ce0,
        vla1_we0,
        vla1_d0,
        vla1_q0,
        vla1_address1,
        vla1_ce1,
        vla1_we1,
        vla1_d1,
        vla1_q1,
        xx,
        xlen,
        xstride,
        num,
        normalize_signed,
        tmp
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] vla1_address0;
output   vla1_ce0;
output  [3:0] vla1_we0;
output  [31:0] vla1_d0;
input  [31:0] vla1_q0;
output  [11:0] vla1_address1;
output   vla1_ce1;
output  [3:0] vla1_we1;
output  [31:0] vla1_d1;
input  [31:0] vla1_q1;
input  [13:0] xx;
input  [8:0] xlen;
input  [8:0] xstride;
input  [63:0] num;
input  [0:0] normalize_signed;
input  [13:0] tmp;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] vla1_address0;
reg vla1_ce0;
reg[3:0] vla1_we0;
reg[31:0] vla1_d0;
reg[11:0] vla1_address1;
reg vla1_ce1;
reg[3:0] vla1_we1;
reg[31:0] vla1_d1;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] PRIMES_p_address0;
reg    PRIMES_p_ce0;
wire   [24:0] PRIMES_p_q0;
wire   [9:0] PRIMES_s_address0;
reg    PRIMES_s_ce0;
wire   [30:0] PRIMES_s_q0;
wire   [31:0] grp_modp_montymul_fu_442_ap_return;
reg   [31:0] reg_454;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [0:0] normalize_signed_read_read_fu_146_p2;
wire   [63:0] xstride_cast_fu_460_p1;
reg   [63:0] xstride_cast_reg_1629;
wire   [9:0] xlen_cast_fu_464_p1;
reg   [9:0] xlen_cast_reg_1635;
wire   [63:0] zext_ln1723_fu_491_p1;
reg   [63:0] zext_ln1723_reg_1643;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1723_fu_496_p2;
reg  signed [24:0] p_reg_1671;
wire    ap_CS_fsm_state3;
wire   [23:0] trunc_ln1734_fu_511_p1;
reg   [23:0] trunc_ln1734_reg_1680;
wire  signed [30:0] sext_ln1734_fu_515_p1;
reg  signed [30:0] sext_ln1734_reg_1685;
wire  signed [30:0] y_2_fu_559_p2;
reg  signed [30:0] y_2_reg_1693;
wire   [30:0] p0i_fu_597_p2;
reg   [30:0] p0i_reg_1699;
wire    ap_CS_fsm_state4;
wire   [31:0] zext_ln1734_fu_603_p1;
reg   [31:0] zext_ln1734_reg_1704;
wire   [31:0] zext_ln1734_2_fu_607_p1;
reg   [31:0] zext_ln1734_2_reg_1711;
wire   [31:0] zext_ln1734_1_fu_671_p1;
reg   [31:0] zext_ln1734_1_reg_1721;
wire    ap_CS_fsm_state9;
wire   [31:0] zext_ln757_1_fu_716_p1;
reg   [31:0] zext_ln757_1_reg_1726;
wire   [11:0] zext_ln1742_fu_720_p1;
reg   [11:0] zext_ln1742_reg_1731;
wire   [63:0] v_1_fu_728_p2;
reg   [63:0] v_1_reg_1739;
wire    ap_CS_fsm_state10;
wire   [11:0] trunc_ln1750_fu_734_p1;
reg   [11:0] trunc_ln1750_reg_1744;
wire   [0:0] icmp_ln1742_fu_723_p2;
reg   [11:0] vla1_addr_1_reg_1750;
wire   [62:0] zext_ln1564_fu_771_p1;
reg   [62:0] zext_ln1564_reg_1755;
reg   [31:0] xp_reg_1760;
wire    ap_CS_fsm_state11;
wire   [11:0] add_ln1601_fu_774_p2;
reg   [11:0] add_ln1601_reg_1765;
wire   [63:0] u_13_fu_783_p2;
reg   [63:0] u_13_reg_1770;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln1597_fu_822_p2;
reg   [0:0] icmp_ln1597_reg_1780;
wire   [31:0] x_3_fu_908_p2;
wire    ap_CS_fsm_state13;
wire   [31:0] add_ln697_fu_948_p2;
reg   [31:0] add_ln697_reg_1789;
wire   [62:0] zext_ln1637_fu_954_p1;
reg   [62:0] zext_ln1637_reg_1794;
wire    ap_CS_fsm_state14;
wire   [8:0] u_18_fu_963_p2;
reg   [8:0] u_18_reg_1802;
wire    ap_CS_fsm_state15;
reg   [11:0] vla1_addr_7_reg_1807;
wire   [0:0] icmp_ln1637_fu_958_p2;
wire   [63:0] add_ln1742_1_fu_1038_p2;
wire    ap_CS_fsm_state16;
wire   [8:0] u_16_fu_1100_p2;
reg   [8:0] u_16_reg_1831;
wire    ap_CS_fsm_state17;
reg   [11:0] vla1_addr_4_reg_1836;
wire   [0:0] icmp_ln1564_fu_1095_p2;
wire    ap_CS_fsm_state18;
wire   [63:0] u_19_fu_1225_p2;
reg   [63:0] u_19_reg_1850;
wire    ap_CS_fsm_state19;
wire   [11:0] trunc_ln1675_fu_1231_p1;
reg   [11:0] trunc_ln1675_reg_1855;
wire   [0:0] icmp_ln1770_fu_1220_p2;
wire   [11:0] add_ln1675_fu_1235_p2;
reg   [11:0] add_ln1675_reg_1860;
wire   [9:0] u_fu_1245_p2;
reg   [9:0] u_reg_1865;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln1668_fu_1316_p2;
reg   [0:0] icmp_ln1668_reg_1880;
wire   [0:0] bb_1_fu_1326_p1;
wire    ap_CS_fsm_state21;
wire   [31:0] r_1_fu_1422_p2;
wire   [31:0] select_ln1541_fu_1436_p3;
reg   [31:0] select_ln1541_reg_1894;
wire   [8:0] u_21_fu_1449_p2;
reg   [8:0] u_21_reg_1902;
wire    ap_CS_fsm_state22;
reg   [11:0] vla1_addr_9_reg_1907;
wire   [0:0] icmp_ln1542_fu_1444_p2;
wire    ap_CS_fsm_state23;
wire    grp_modp_montymul_fu_442_ap_ready;
reg   [31:0] grp_modp_montymul_fu_442_a;
reg   [31:0] grp_modp_montymul_fu_442_b;
reg   [31:0] grp_modp_montymul_fu_442_p;
reg   [31:0] grp_modp_montymul_fu_442_p0i;
reg   [63:0] v_reg_297;
reg   [63:0] idx_reg_308;
reg   [63:0] dec4_i_in_reg_320;
reg   [31:0] x_reg_329;
reg   [31:0] cc_4_reg_340;
reg   [8:0] u_17_reg_353;
reg   [31:0] cc_reg_364;
reg   [8:0] u_4_reg_377;
reg  signed [9:0] phi_ln1657_reg_388;
reg   [0:0] bb_reg_397;
reg   [31:0] r_reg_408;
reg   [0:0] cc_6_reg_419;
reg   [8:0] u_20_reg_431;
wire   [31:0] z_fu_663_p2;
wire   [63:0] zext_ln1722_fu_478_p1;
wire   [63:0] zext_ln1750_fu_766_p1;
wire   [63:0] zext_ln1601_fu_817_p1;
wire   [63:0] zext_ln1641_1_fu_1001_p1;
wire   [63:0] zext_ln1642_1_fu_1033_p1;
wire   [63:0] zext_ln1567_1_fu_1133_p1;
wire   [63:0] zext_ln1763_1_fu_1164_p1;
wire   [63:0] zext_ln1675_fu_1279_p1;
wire   [63:0] zext_ln1676_fu_1311_p1;
wire   [63:0] zext_ln1545_1_fu_1487_p1;
wire   [63:0] zext_ln1546_1_fu_1519_p1;
reg   [8:0] u_1_fu_128;
wire   [8:0] u_15_fu_1169_p2;
reg   [63:0] idx71_fu_132;
wire   [63:0] add_ln1770_1_fu_1524_p2;
reg   [63:0] u_2_fu_136;
wire   [31:0] zext_ln1644_fu_1080_p1;
wire   [31:0] zext_ln1568_fu_1202_p1;
wire   [31:0] aw_1_fu_1581_p2;
wire   [11:0] lshr_ln_fu_468_p4;
wire  signed [24:0] trunc_ln1734_fu_511_p0;
wire  signed [24:0] sext_ln1734_fu_515_p0;
wire   [23:0] y_fu_519_p2;
wire  signed [24:0] mul_ln656_fu_529_p0;
wire   [23:0] mul_ln656_fu_529_p1;
wire   [30:0] zext_ln656_fu_525_p1;
wire   [30:0] mul_ln656_fu_529_p2;
wire  signed [30:0] y_1_fu_541_p0;
wire   [23:0] y_1_fu_541_p1;
wire  signed [24:0] mul_ln657_fu_547_p0;
wire  signed [30:0] y_1_fu_541_p2;
wire   [30:0] mul_ln657_fu_547_p2;
wire  signed [30:0] y_2_fu_559_p0;
wire  signed [24:0] mul_ln658_fu_565_p0;
wire   [30:0] mul_ln658_fu_565_p2;
wire  signed [30:0] y_3_fu_575_p0;
wire  signed [24:0] mul_ln659_fu_580_p0;
wire  signed [30:0] y_3_fu_575_p2;
wire   [30:0] mul_ln659_fu_580_p2;
wire  signed [30:0] p0i_fu_597_p0;
wire  signed [30:0] p0i_fu_597_p1;
wire   [23:0] sub_ln685_1_fu_611_p2;
wire   [24:0] shl_ln_fu_616_p3;
wire   [31:0] zext_ln685_fu_624_p1;
wire   [31:0] sub_ln685_fu_628_p2;
wire   [0:0] tmp_1_fu_634_p3;
wire   [24:0] select_ln685_fu_642_p3;
wire   [24:0] and_ln685_fu_650_p2;
wire  signed [30:0] sext_ln685_fu_655_p1;
wire   [31:0] zext_ln685_1_fu_659_p1;
wire   [0:0] trunc_ln735_fu_675_p1;
wire   [24:0] select_ln757_fu_679_p3;
wire   [24:0] and_ln757_fu_687_p2;
wire  signed [30:0] sext_ln757_fu_692_p1;
wire   [31:0] zext_ln757_fu_696_p1;
wire   [31:0] add_ln757_fu_700_p2;
wire   [30:0] z_9_fu_706_p4;
wire   [11:0] add_ln1750_fu_738_p2;
wire   [13:0] shl_ln1_fu_743_p3;
wire   [13:0] add_ln1750_1_fu_751_p2;
wire   [11:0] lshr_ln1_fu_756_p4;
wire   [11:0] trunc_ln1587_fu_779_p1;
wire   [11:0] add_ln1601_2_fu_789_p2;
wire   [13:0] shl_ln2_fu_794_p3;
wire   [13:0] add_ln1601_1_fu_802_p2;
wire   [11:0] lshr_ln2_fu_807_p4;
wire   [31:0] w_fu_828_p2;
wire   [0:0] tmp_2_fu_833_p3;
wire   [24:0] select_ln1602_fu_841_p3;
wire   [24:0] and_ln1602_fu_849_p2;
wire  signed [30:0] sext_ln1598_fu_854_p1;
wire   [31:0] zext_ln1598_fu_858_p1;
wire   [31:0] add_ln685_fu_867_p2;
wire   [31:0] w_3_fu_862_p2;
wire   [31:0] add_ln685_1_fu_873_p2;
wire   [0:0] tmp_3_fu_879_p3;
wire   [24:0] select_ln685_1_fu_887_p3;
wire   [24:0] and_ln685_1_fu_895_p2;
wire  signed [30:0] sext_ln685_1_fu_900_p1;
wire   [31:0] zext_ln685_2_fu_904_p1;
wire   [31:0] sub_ln697_fu_914_p2;
wire   [0:0] tmp_4_fu_919_p3;
wire   [24:0] select_ln697_fu_927_p3;
wire   [24:0] and_ln697_fu_935_p2;
wire  signed [30:0] sext_ln697_fu_940_p1;
wire   [31:0] zext_ln697_fu_944_p1;
wire   [11:0] zext_ln1641_fu_969_p1;
wire   [11:0] add_ln1641_fu_973_p2;
wire   [13:0] shl_ln7_fu_978_p3;
wire   [13:0] add_ln1641_1_fu_986_p2;
wire   [11:0] lshr_ln6_fu_991_p4;
wire   [10:0] shl_ln8_fu_1006_p3;
wire   [13:0] zext_ln1642_fu_1014_p1;
wire   [13:0] add_ln1642_fu_1018_p2;
wire   [11:0] lshr_ln7_fu_1023_p4;
wire   [31:0] mul_ln1643_fu_1047_p0;
wire   [31:0] mul_ln1643_fu_1047_p1;
wire   [32:0] zext_ln1643_1_fu_1052_p1;
wire   [32:0] zext_ln1643_2_fu_1056_p1;
wire   [32:0] add_ln1643_fu_1060_p2;
wire   [62:0] zext_ln1643_3_fu_1066_p1;
wire   [62:0] mul_ln1643_fu_1047_p2;
wire   [62:0] z_8_fu_1070_p2;
wire   [30:0] trunc_ln1644_fu_1076_p1;
wire   [10:0] shl_ln4_fu_1106_p3;
wire   [13:0] zext_ln1567_fu_1114_p1;
wire   [13:0] add_ln1567_fu_1118_p2;
wire   [11:0] lshr_ln4_fu_1123_p4;
wire   [10:0] shl_ln3_fu_1138_p3;
wire   [13:0] zext_ln1763_fu_1145_p1;
wire   [13:0] add_ln1763_fu_1149_p2;
wire   [11:0] lshr_ln3_fu_1154_p4;
wire   [31:0] mul_ln1567_fu_1183_p0;
wire   [30:0] mul_ln1567_fu_1183_p1;
wire   [62:0] mul_ln1567_fu_1183_p2;
wire   [62:0] zext_ln1567_3_fu_1188_p1;
wire   [62:0] z_7_fu_1192_p2;
wire   [30:0] trunc_ln1568_fu_1198_p1;
wire  signed [11:0] sext_ln1657_fu_1241_p1;
wire   [11:0] add_ln1675_2_fu_1251_p2;
wire   [13:0] shl_ln5_fu_1256_p3;
wire   [13:0] add_ln1675_1_fu_1264_p2;
wire   [11:0] lshr_ln5_fu_1269_p4;
wire   [11:0] shl_ln1676_1_fu_1284_p3;
wire  signed [13:0] sext_ln1676_fu_1292_p1;
wire   [13:0] add_ln1676_fu_1296_p2;
wire   [11:0] lshr_ln1676_1_fu_1301_p4;
wire   [30:0] trunc_ln1676_1_fu_1330_p4;
wire   [30:0] shl_ln6_fu_1340_p3;
wire   [30:0] wp_fu_1348_p2;
wire   [31:0] zext_ln1669_fu_1354_p1;
wire   [31:0] cc_2_fu_1358_p2;
wire   [31:0] sub_ln1684_fu_1364_p2;
wire   [0:0] tmp_5_fu_1370_p3;
wire   [0:0] tmp_6_fu_1382_p3;
wire   [1:0] zext_ln1684_fu_1378_p1;
wire   [0:0] trunc_ln1657_fu_1322_p1;
wire   [0:0] xor_ln1690_fu_1398_p2;
wire   [1:0] cc_3_fu_1390_p3;
wire   [1:0] select_ln1690_fu_1404_p3;
wire   [1:0] and_ln1690_fu_1412_p2;
wire  signed [31:0] sext_ln1690_fu_1418_p1;
wire   [0:0] m_fu_1428_p3;
wire   [11:0] zext_ln1545_fu_1455_p1;
wire   [11:0] add_ln1545_fu_1459_p2;
wire   [13:0] shl_ln9_fu_1464_p3;
wire   [13:0] add_ln1545_1_fu_1472_p2;
wire   [11:0] lshr_ln8_fu_1477_p4;
wire   [10:0] shl_ln10_fu_1492_p3;
wire   [13:0] zext_ln1546_fu_1500_p1;
wire   [13:0] add_ln1546_fu_1504_p2;
wire   [11:0] lshr_ln9_fu_1509_p4;
wire   [31:0] sub_ln1546_fu_1538_p2;
wire   [31:0] zext_ln1542_fu_1544_p1;
wire   [31:0] w_2_fu_1548_p2;
wire   [30:0] trunc_ln1543_fu_1554_p1;
wire   [31:0] zext_ln1548_fu_1566_p1;
wire   [31:0] xor_ln1548_fu_1570_p2;
wire   [31:0] and_ln1548_fu_1576_p2;
reg   [22:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire   [62:0] mul_ln1567_fu_1183_p00;
wire   [62:0] mul_ln1643_fu_1047_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
end

solve_NTRU_zint_rebuild_CRT_1_PRIMES_p_ROM_AUTO_1R #(
    .DataWidth( 25 ),
    .AddressRange( 522 ),
    .AddressWidth( 10 ))
PRIMES_p_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PRIMES_p_address0),
    .ce0(PRIMES_p_ce0),
    .q0(PRIMES_p_q0)
);

solve_NTRU_zint_rebuild_CRT_1_PRIMES_s_ROM_AUTO_1R #(
    .DataWidth( 31 ),
    .AddressRange( 522 ),
    .AddressWidth( 10 ))
PRIMES_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PRIMES_s_address0),
    .ce0(PRIMES_s_ce0),
    .q0(PRIMES_s_q0)
);

solve_NTRU_modp_montymul grp_modp_montymul_fu_442(
    .ap_ready(grp_modp_montymul_fu_442_ap_ready),
    .a(grp_modp_montymul_fu_442_a),
    .b(grp_modp_montymul_fu_442_b),
    .p(grp_modp_montymul_fu_442_p),
    .p0i(grp_modp_montymul_fu_442_p0i),
    .ap_return(grp_modp_montymul_fu_442_ap_return)
);

solve_NTRU_mul_25s_24ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 31 ))
mul_25s_24ns_31_1_1_U77(
    .din0(mul_ln656_fu_529_p0),
    .din1(mul_ln656_fu_529_p1),
    .dout(mul_ln656_fu_529_p2)
);

solve_NTRU_mul_31s_24ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 31 ))
mul_31s_24ns_31_1_1_U78(
    .din0(y_1_fu_541_p0),
    .din1(y_1_fu_541_p1),
    .dout(y_1_fu_541_p2)
);

solve_NTRU_mul_25s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_25s_31s_31_1_1_U79(
    .din0(mul_ln657_fu_547_p0),
    .din1(y_1_fu_541_p2),
    .dout(mul_ln657_fu_547_p2)
);

solve_NTRU_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U80(
    .din0(y_2_fu_559_p0),
    .din1(y_1_fu_541_p2),
    .dout(y_2_fu_559_p2)
);

solve_NTRU_mul_25s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_25s_31s_31_1_1_U81(
    .din0(mul_ln658_fu_565_p0),
    .din1(y_2_reg_1693),
    .dout(mul_ln658_fu_565_p2)
);

solve_NTRU_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U82(
    .din0(y_3_fu_575_p0),
    .din1(y_2_reg_1693),
    .dout(y_3_fu_575_p2)
);

solve_NTRU_mul_25s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_25s_31s_31_1_1_U83(
    .din0(mul_ln659_fu_580_p0),
    .din1(y_3_fu_575_p2),
    .dout(mul_ln659_fu_580_p2)
);

solve_NTRU_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U84(
    .din0(p0i_fu_597_p0),
    .din1(p0i_fu_597_p1),
    .dout(p0i_fu_597_p2)
);

solve_NTRU_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U85(
    .din0(mul_ln1643_fu_1047_p0),
    .din1(mul_ln1643_fu_1047_p1),
    .dout(mul_ln1643_fu_1047_p2)
);

solve_NTRU_mul_32ns_31ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 63 ))
mul_32ns_31ns_63_1_1_U86(
    .din0(mul_ln1567_fu_1183_p0),
    .din1(mul_ln1567_fu_1183_p1),
    .dout(mul_ln1567_fu_1183_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1770_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19) & (normalize_signed_read_read_fu_146_p2 == 1'd1))) begin
        bb_reg_397 <= 1'd0;
    end else if (((icmp_ln1668_reg_1880 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        bb_reg_397 <= bb_1_fu_1326_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        cc_4_reg_340 <= {{z_8_fu_1070_p2[62:31]}};
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        cc_4_reg_340 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        cc_6_reg_419 <= w_2_fu_1548_p2[32'd31];
    end else if (((icmp_ln1668_reg_1880 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        cc_6_reg_419 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        cc_reg_364 <= {{z_7_fu_1192_p2[62:31]}};
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1742_fu_723_p2 == 1'd1))) begin
        cc_reg_364 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1597_reg_1780 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        dec4_i_in_reg_320 <= u_13_reg_1770;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dec4_i_in_reg_320 <= zext_ln1723_reg_1643;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1723_fu_496_p2 == 1'd0) & (normalize_signed_read_read_fu_146_p2 == 1'd1))) begin
        idx71_fu_132 <= 64'd0;
    end else if (((icmp_ln1542_fu_1444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        idx71_fu_132 <= add_ln1770_1_fu_1524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1637_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        idx_reg_308 <= add_ln1742_1_fu_1038_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        idx_reg_308 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1770_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19) & (normalize_signed_read_read_fu_146_p2 == 1'd1))) begin
        phi_ln1657_reg_388 <= xlen_cast_reg_1635;
    end else if (((icmp_ln1668_reg_1880 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        phi_ln1657_reg_388 <= u_reg_1865;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1770_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19) & (normalize_signed_read_read_fu_146_p2 == 1'd1))) begin
        r_reg_408 <= 32'd0;
    end else if (((icmp_ln1668_reg_1880 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        r_reg_408 <= r_1_fu_1422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        u_17_reg_353 <= u_18_reg_1802;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        u_17_reg_353 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        u_1_fu_128 <= 9'd1;
    end else if (((icmp_ln1564_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        u_1_fu_128 <= u_15_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        u_20_reg_431 <= u_21_reg_1902;
    end else if (((icmp_ln1668_reg_1880 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        u_20_reg_431 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1723_fu_496_p2 == 1'd0) & (normalize_signed_read_read_fu_146_p2 == 1'd1))) begin
        u_2_fu_136 <= 64'd0;
    end else if (((icmp_ln1542_fu_1444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        u_2_fu_136 <= u_19_reg_1850;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        u_4_reg_377 <= u_16_reg_1831;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1742_fu_723_p2 == 1'd1))) begin
        u_4_reg_377 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1637_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        v_reg_297 <= v_1_reg_1739;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        v_reg_297 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1597_reg_1780 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        x_reg_329 <= x_3_fu_908_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x_reg_329 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln1601_reg_1765 <= add_ln1601_fu_774_p2;
        xp_reg_1760 <= vla1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1770_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19) & (normalize_signed_read_read_fu_146_p2 == 1'd1))) begin
        add_ln1675_reg_1860 <= add_ln1675_fu_1235_p2;
        trunc_ln1675_reg_1855 <= trunc_ln1675_fu_1231_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1597_reg_1780 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln697_reg_1789 <= add_ln697_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln1597_reg_1780 <= icmp_ln1597_fu_822_p2;
        u_13_reg_1770 <= u_13_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        icmp_ln1668_reg_1880 <= icmp_ln1668_fu_1316_p2;
        u_reg_1865 <= u_fu_1245_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p0i_reg_1699 <= p0i_fu_597_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_reg_1671 <= PRIMES_p_q0;
        sext_ln1734_reg_1685 <= sext_ln1734_fu_515_p1;
        trunc_ln1734_reg_1680 <= trunc_ln1734_fu_511_p1;
        y_2_reg_1693 <= y_2_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_454 <= grp_modp_montymul_fu_442_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1668_reg_1880 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        select_ln1541_reg_1894 <= select_ln1541_fu_1436_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1742_fu_723_p2 == 1'd0))) begin
        trunc_ln1750_reg_1744 <= trunc_ln1750_fu_734_p1;
        vla1_addr_1_reg_1750 <= zext_ln1750_fu_766_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        u_16_reg_1831 <= u_16_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        u_18_reg_1802 <= u_18_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (normalize_signed_read_read_fu_146_p2 == 1'd1))) begin
        u_19_reg_1850 <= u_19_fu_1225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        u_21_reg_1902 <= u_21_fu_1449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_1_reg_1739 <= v_1_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1564_fu_1095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        vla1_addr_4_reg_1836 <= zext_ln1567_1_fu_1133_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1637_fu_958_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        vla1_addr_7_reg_1807 <= zext_ln1641_1_fu_1001_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1542_fu_1444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        vla1_addr_9_reg_1907 <= zext_ln1545_1_fu_1487_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        xlen_cast_reg_1635[8 : 0] <= xlen_cast_fu_464_p1[8 : 0];
        xstride_cast_reg_1629[8 : 0] <= xstride_cast_fu_460_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1742_fu_723_p2 == 1'd1))) begin
        zext_ln1564_reg_1755[30 : 0] <= zext_ln1564_fu_771_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        zext_ln1637_reg_1794[31 : 0] <= zext_ln1637_fu_954_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln1723_reg_1643[8 : 0] <= zext_ln1723_fu_491_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        zext_ln1734_1_reg_1721[30 : 0] <= zext_ln1734_1_fu_671_p1[30 : 0];
        zext_ln1742_reg_1731[8 : 0] <= zext_ln1742_fu_720_p1[8 : 0];
        zext_ln757_1_reg_1726[30 : 0] <= zext_ln757_1_fu_716_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        zext_ln1734_2_reg_1711[30 : 0] <= zext_ln1734_2_fu_607_p1[30 : 0];
        zext_ln1734_reg_1704[30 : 0] <= zext_ln1734_fu_603_p1[30 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        PRIMES_p_ce0 = 1'b1;
    end else begin
        PRIMES_p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        PRIMES_s_ce0 = 1'b1;
    end else begin
        PRIMES_s_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state19) & ((icmp_ln1770_fu_1220_p2 == 1'd1) | (normalize_signed_read_read_fu_146_p2 == 1'd0))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & ((icmp_ln1770_fu_1220_p2 == 1'd1) | (normalize_signed_read_read_fu_146_p2 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_modp_montymul_fu_442_a = zext_ln1734_1_reg_1721;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_modp_montymul_fu_442_a = x_reg_329;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_modp_montymul_fu_442_a = reg_454;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_modp_montymul_fu_442_a = z_fu_663_p2;
    end else begin
        grp_modp_montymul_fu_442_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_modp_montymul_fu_442_b = add_ln697_reg_1789;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_modp_montymul_fu_442_b = zext_ln757_1_reg_1726;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_modp_montymul_fu_442_b = reg_454;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_modp_montymul_fu_442_b = z_fu_663_p2;
    end else begin
        grp_modp_montymul_fu_442_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_modp_montymul_fu_442_p = zext_ln1734_reg_1704;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_modp_montymul_fu_442_p = zext_ln1734_fu_603_p1;
    end else begin
        grp_modp_montymul_fu_442_p = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_modp_montymul_fu_442_p0i = zext_ln1734_2_reg_1711;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_modp_montymul_fu_442_p0i = zext_ln1734_2_fu_607_p1;
    end else begin
        grp_modp_montymul_fu_442_p0i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        vla1_address0 = vla1_addr_9_reg_1907;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        vla1_address0 = zext_ln1546_1_fu_1519_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        vla1_address0 = zext_ln1676_fu_1311_p1;
    end else if (((icmp_ln1637_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        vla1_address0 = vla1_addr_1_reg_1750;
    end else if (((icmp_ln1637_fu_958_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        vla1_address0 = zext_ln1642_1_fu_1033_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla1_address0 = zext_ln1601_fu_817_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        vla1_address0 = zext_ln1750_fu_766_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        vla1_address0 = zext_ln1722_fu_478_p1;
    end else begin
        vla1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        vla1_address1 = zext_ln1545_1_fu_1487_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        vla1_address1 = zext_ln1675_fu_1279_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_address1 = vla1_addr_4_reg_1836;
    end else if (((icmp_ln1564_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        vla1_address1 = zext_ln1763_1_fu_1164_p1;
    end else if (((icmp_ln1564_fu_1095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        vla1_address1 = zext_ln1567_1_fu_1133_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla1_address1 = vla1_addr_7_reg_1807;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        vla1_address1 = zext_ln1641_1_fu_1001_p1;
    end else begin
        vla1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln1637_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln1637_fu_958_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        vla1_ce0 = 1'b1;
    end else begin
        vla1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln1564_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln1564_fu_1095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        vla1_ce1 = 1'b1;
    end else begin
        vla1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        vla1_d0 = aw_1_fu_1581_p2;
    end else if (((icmp_ln1637_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        vla1_d0 = cc_4_reg_340;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        vla1_d0 = 32'd2147473409;
    end else begin
        vla1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_d1 = zext_ln1568_fu_1202_p1;
    end else if (((icmp_ln1564_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        vla1_d1 = cc_reg_364;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla1_d1 = zext_ln1644_fu_1080_p1;
    end else begin
        vla1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln1637_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        vla1_we0 = 4'd15;
    end else begin
        vla1_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | ((icmp_ln1564_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        vla1_we1 = 4'd15;
    end else begin
        vla1_we1 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1723_fu_496_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1742_fu_723_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln1597_reg_1780 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln1637_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln1564_fu_1095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & ((icmp_ln1770_fu_1220_p2 == 1'd1) | (normalize_signed_read_read_fu_146_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln1668_reg_1880 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln1542_fu_1444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PRIMES_p_address0 = zext_ln1723_fu_491_p1;

assign PRIMES_s_address0 = zext_ln1723_reg_1643;

assign add_ln1545_1_fu_1472_p2 = (shl_ln9_fu_1464_p3 + xx);

assign add_ln1545_fu_1459_p2 = (zext_ln1545_fu_1455_p1 + trunc_ln1675_reg_1855);

assign add_ln1546_fu_1504_p2 = (zext_ln1546_fu_1500_p1 + tmp);

assign add_ln1567_fu_1118_p2 = (zext_ln1567_fu_1114_p1 + tmp);

assign add_ln1601_1_fu_802_p2 = (shl_ln2_fu_794_p3 + xx);

assign add_ln1601_2_fu_789_p2 = (add_ln1601_reg_1765 + trunc_ln1587_fu_779_p1);

assign add_ln1601_fu_774_p2 = ($signed(trunc_ln1750_reg_1744) + $signed(12'd4095));

assign add_ln1641_1_fu_986_p2 = (shl_ln7_fu_978_p3 + xx);

assign add_ln1641_fu_973_p2 = (zext_ln1641_fu_969_p1 + trunc_ln1750_reg_1744);

assign add_ln1642_fu_1018_p2 = (zext_ln1642_fu_1014_p1 + tmp);

assign add_ln1643_fu_1060_p2 = (zext_ln1643_1_fu_1052_p1 + zext_ln1643_2_fu_1056_p1);

assign add_ln1675_1_fu_1264_p2 = (shl_ln5_fu_1256_p3 + xx);

assign add_ln1675_2_fu_1251_p2 = ($signed(add_ln1675_reg_1860) + $signed(sext_ln1657_fu_1241_p1));

assign add_ln1675_fu_1235_p2 = ($signed(trunc_ln1675_fu_1231_p1) + $signed(12'd4095));

assign add_ln1676_fu_1296_p2 = ($signed(sext_ln1676_fu_1292_p1) + $signed(tmp));

assign add_ln1742_1_fu_1038_p2 = (idx_reg_308 + xstride_cast_reg_1629);

assign add_ln1750_1_fu_751_p2 = (shl_ln1_fu_743_p3 + xx);

assign add_ln1750_fu_738_p2 = (trunc_ln1750_fu_734_p1 + zext_ln1742_reg_1731);

assign add_ln1763_fu_1149_p2 = (zext_ln1763_fu_1145_p1 + tmp);

assign add_ln1770_1_fu_1524_p2 = (idx71_fu_132 + xstride_cast_reg_1629);

assign add_ln685_1_fu_873_p2 = (add_ln685_fu_867_p2 + w_3_fu_862_p2);

assign add_ln685_fu_867_p2 = (w_fu_828_p2 + zext_ln1598_fu_858_p1);

assign add_ln697_fu_948_p2 = (zext_ln697_fu_944_p1 + sub_ln697_fu_914_p2);

assign add_ln757_fu_700_p2 = (zext_ln757_fu_696_p1 + grp_modp_montymul_fu_442_ap_return);

assign and_ln1548_fu_1576_p2 = (xor_ln1548_fu_1570_p2 & select_ln1541_reg_1894);

assign and_ln1602_fu_849_p2 = (select_ln1602_fu_841_p3 & p_reg_1671);

assign and_ln1690_fu_1412_p2 = (select_ln1690_fu_1404_p3 & cc_3_fu_1390_p3);

assign and_ln685_1_fu_895_p2 = (select_ln685_1_fu_887_p3 & p_reg_1671);

assign and_ln685_fu_650_p2 = (select_ln685_fu_642_p3 & p_reg_1671);

assign and_ln697_fu_935_p2 = (select_ln697_fu_927_p3 & p_reg_1671);

assign and_ln757_fu_687_p2 = (select_ln757_fu_679_p3 & p_reg_1671);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign aw_1_fu_1581_p2 = (vla1_q1 ^ and_ln1548_fu_1576_p2);

assign bb_1_fu_1326_p1 = vla1_q0[0:0];

assign cc_2_fu_1358_p2 = (zext_ln1669_fu_1354_p1 - vla1_q1);

assign cc_3_fu_1390_p3 = ((tmp_6_fu_1382_p3[0:0] == 1'b1) ? 2'd3 : zext_ln1684_fu_1378_p1);

assign icmp_ln1542_fu_1444_p2 = ((u_20_reg_431 == xlen) ? 1'b1 : 1'b0);

assign icmp_ln1564_fu_1095_p2 = ((u_4_reg_377 == u_1_fu_128) ? 1'b1 : 1'b0);

assign icmp_ln1597_fu_822_p2 = ((u_13_fu_783_p2 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln1637_fu_958_p2 = ((u_17_reg_353 == u_1_fu_128) ? 1'b1 : 1'b0);

assign icmp_ln1668_fu_1316_p2 = ((u_fu_1245_p2 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln1723_fu_496_p2 = ((u_1_fu_128 < xlen) ? 1'b1 : 1'b0);

assign icmp_ln1742_fu_723_p2 = ((v_reg_297 == num) ? 1'b1 : 1'b0);

assign icmp_ln1770_fu_1220_p2 = ((u_2_fu_136 == num) ? 1'b1 : 1'b0);

assign lshr_ln1676_1_fu_1301_p4 = {{add_ln1676_fu_1296_p2[13:2]}};

assign lshr_ln1_fu_756_p4 = {{add_ln1750_1_fu_751_p2[13:2]}};

assign lshr_ln2_fu_807_p4 = {{add_ln1601_1_fu_802_p2[13:2]}};

assign lshr_ln3_fu_1154_p4 = {{add_ln1763_fu_1149_p2[13:2]}};

assign lshr_ln4_fu_1123_p4 = {{add_ln1567_fu_1118_p2[13:2]}};

assign lshr_ln5_fu_1269_p4 = {{add_ln1675_1_fu_1264_p2[13:2]}};

assign lshr_ln6_fu_991_p4 = {{add_ln1641_1_fu_986_p2[13:2]}};

assign lshr_ln7_fu_1023_p4 = {{add_ln1642_fu_1018_p2[13:2]}};

assign lshr_ln8_fu_1477_p4 = {{add_ln1545_1_fu_1472_p2[13:2]}};

assign lshr_ln9_fu_1509_p4 = {{add_ln1546_fu_1504_p2[13:2]}};

assign lshr_ln_fu_468_p4 = {{tmp[13:2]}};

assign m_fu_1428_p3 = r_1_fu_1422_p2[32'd31];

assign mul_ln1567_fu_1183_p0 = mul_ln1567_fu_1183_p00;

assign mul_ln1567_fu_1183_p00 = vla1_q1;

assign mul_ln1567_fu_1183_p1 = zext_ln1564_reg_1755;

assign mul_ln1643_fu_1047_p0 = mul_ln1643_fu_1047_p00;

assign mul_ln1643_fu_1047_p00 = vla1_q0;

assign mul_ln1643_fu_1047_p1 = zext_ln1637_reg_1794;

assign mul_ln656_fu_529_p0 = sext_ln1734_fu_515_p1;

assign mul_ln656_fu_529_p1 = zext_ln656_fu_525_p1;

assign mul_ln657_fu_547_p0 = sext_ln1734_fu_515_p1;

assign mul_ln658_fu_565_p0 = sext_ln1734_reg_1685;

assign mul_ln659_fu_580_p0 = sext_ln1734_reg_1685;

assign normalize_signed_read_read_fu_146_p2 = normalize_signed;

assign p0i_fu_597_p0 = (31'd2 - mul_ln659_fu_580_p2);

assign p0i_fu_597_p1 = ($signed(31'd0) - $signed(y_3_fu_575_p2));

assign r_1_fu_1422_p2 = (sext_ln1690_fu_1418_p1 | r_reg_408);

assign select_ln1541_fu_1436_p3 = ((m_fu_1428_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln1602_fu_841_p3 = ((tmp_2_fu_833_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln1690_fu_1404_p3 = ((xor_ln1690_fu_1398_p2[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln685_1_fu_887_p3 = ((tmp_3_fu_879_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln685_fu_642_p3 = ((tmp_1_fu_634_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln697_fu_927_p3 = ((tmp_4_fu_919_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln757_fu_679_p3 = ((trunc_ln735_fu_675_p1[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign sext_ln1598_fu_854_p1 = $signed(and_ln1602_fu_849_p2);

assign sext_ln1657_fu_1241_p1 = phi_ln1657_reg_388;

assign sext_ln1676_fu_1292_p1 = $signed(shl_ln1676_1_fu_1284_p3);

assign sext_ln1690_fu_1418_p1 = $signed(and_ln1690_fu_1412_p2);

assign sext_ln1734_fu_515_p0 = PRIMES_p_q0;

assign sext_ln1734_fu_515_p1 = sext_ln1734_fu_515_p0;

assign sext_ln685_1_fu_900_p1 = $signed(and_ln685_1_fu_895_p2);

assign sext_ln685_fu_655_p1 = $signed(and_ln685_fu_650_p2);

assign sext_ln697_fu_940_p1 = $signed(and_ln697_fu_935_p2);

assign sext_ln757_fu_692_p1 = $signed(and_ln757_fu_687_p2);

assign shl_ln10_fu_1492_p3 = {{u_20_reg_431}, {2'd0}};

assign shl_ln1676_1_fu_1284_p3 = {{u_fu_1245_p2}, {2'd0}};

assign shl_ln1_fu_743_p3 = {{add_ln1750_fu_738_p2}, {2'd0}};

assign shl_ln2_fu_794_p3 = {{add_ln1601_2_fu_789_p2}, {2'd0}};

assign shl_ln3_fu_1138_p3 = {{u_1_fu_128}, {2'd0}};

assign shl_ln4_fu_1106_p3 = {{u_4_reg_377}, {2'd0}};

assign shl_ln5_fu_1256_p3 = {{add_ln1675_2_fu_1251_p2}, {2'd0}};

assign shl_ln6_fu_1340_p3 = {{bb_reg_397}, {30'd0}};

assign shl_ln7_fu_978_p3 = {{add_ln1641_fu_973_p2}, {2'd0}};

assign shl_ln8_fu_1006_p3 = {{u_17_reg_353}, {2'd0}};

assign shl_ln9_fu_1464_p3 = {{add_ln1545_fu_1459_p2}, {2'd0}};

assign shl_ln_fu_616_p3 = {{sub_ln685_1_fu_611_p2}, {1'd0}};

assign sub_ln1546_fu_1538_p2 = (vla1_q1 - vla1_q0);

assign sub_ln1684_fu_1364_p2 = (32'd0 - cc_2_fu_1358_p2);

assign sub_ln685_1_fu_611_p2 = (24'd0 - trunc_ln1734_reg_1680);

assign sub_ln685_fu_628_p2 = (zext_ln685_fu_624_p1 - zext_ln1734_fu_603_p1);

assign sub_ln697_fu_914_p2 = (xp_reg_1760 - x_3_fu_908_p2);

assign tmp_1_fu_634_p3 = sub_ln685_fu_628_p2[32'd31];

assign tmp_2_fu_833_p3 = w_fu_828_p2[32'd31];

assign tmp_3_fu_879_p3 = add_ln685_1_fu_873_p2[32'd31];

assign tmp_4_fu_919_p3 = sub_ln697_fu_914_p2[32'd31];

assign tmp_5_fu_1370_p3 = sub_ln1684_fu_1364_p2[32'd31];

assign tmp_6_fu_1382_p3 = cc_2_fu_1358_p2[32'd31];

assign trunc_ln1543_fu_1554_p1 = w_2_fu_1548_p2[30:0];

assign trunc_ln1568_fu_1198_p1 = z_7_fu_1192_p2[30:0];

assign trunc_ln1587_fu_779_p1 = dec4_i_in_reg_320[11:0];

assign trunc_ln1644_fu_1076_p1 = z_8_fu_1070_p2[30:0];

assign trunc_ln1657_fu_1322_p1 = r_reg_408[0:0];

assign trunc_ln1675_fu_1231_p1 = idx71_fu_132[11:0];

assign trunc_ln1676_1_fu_1330_p4 = {{vla1_q0[31:1]}};

assign trunc_ln1734_fu_511_p0 = PRIMES_p_q0;

assign trunc_ln1734_fu_511_p1 = trunc_ln1734_fu_511_p0[23:0];

assign trunc_ln1750_fu_734_p1 = idx_reg_308[11:0];

assign trunc_ln735_fu_675_p1 = grp_modp_montymul_fu_442_ap_return[0:0];

assign u_13_fu_783_p2 = ($signed(dec4_i_in_reg_320) + $signed(64'd18446744073709551615));

assign u_15_fu_1169_p2 = (u_1_fu_128 + 9'd1);

assign u_16_fu_1100_p2 = (u_4_reg_377 + 9'd1);

assign u_18_fu_963_p2 = (u_17_reg_353 + 9'd1);

assign u_19_fu_1225_p2 = (u_2_fu_136 + 64'd1);

assign u_21_fu_1449_p2 = (u_20_reg_431 + 9'd1);

assign u_fu_1245_p2 = ($signed(phi_ln1657_reg_388) + $signed(10'd1023));

assign v_1_fu_728_p2 = (v_reg_297 + 64'd1);

assign w_2_fu_1548_p2 = (sub_ln1546_fu_1538_p2 - zext_ln1542_fu_1544_p1);

assign w_3_fu_862_p2 = (grp_modp_montymul_fu_442_ap_return - zext_ln1734_reg_1704);

assign w_fu_828_p2 = (vla1_q0 - zext_ln1734_reg_1704);

assign wp_fu_1348_p2 = (trunc_ln1676_1_fu_1330_p4 | shl_ln6_fu_1340_p3);

assign x_3_fu_908_p2 = (zext_ln685_2_fu_904_p1 + add_ln685_1_fu_873_p2);

assign xlen_cast_fu_464_p1 = xlen;

assign xor_ln1548_fu_1570_p2 = (zext_ln1548_fu_1566_p1 ^ vla1_q1);

assign xor_ln1690_fu_1398_p2 = (trunc_ln1657_fu_1322_p1 ^ 1'd1);

assign xstride_cast_fu_460_p1 = xstride;

assign y_1_fu_541_p0 = (31'd2 - mul_ln656_fu_529_p2);

assign y_1_fu_541_p1 = zext_ln656_fu_525_p1;

assign y_2_fu_559_p0 = (31'd2 - mul_ln657_fu_547_p2);

assign y_3_fu_575_p0 = (31'd2 - mul_ln658_fu_565_p2);

assign y_fu_519_p2 = (24'd2 - trunc_ln1734_fu_511_p1);

assign z_7_fu_1192_p2 = (mul_ln1567_fu_1183_p2 + zext_ln1567_3_fu_1188_p1);

assign z_8_fu_1070_p2 = (zext_ln1643_3_fu_1066_p1 + mul_ln1643_fu_1047_p2);

assign z_9_fu_706_p4 = {{add_ln757_fu_700_p2[31:1]}};

assign z_fu_663_p2 = (zext_ln685_1_fu_659_p1 + sub_ln685_fu_628_p2);

assign zext_ln1542_fu_1544_p1 = cc_6_reg_419;

assign zext_ln1545_1_fu_1487_p1 = lshr_ln8_fu_1477_p4;

assign zext_ln1545_fu_1455_p1 = u_20_reg_431;

assign zext_ln1546_1_fu_1519_p1 = lshr_ln9_fu_1509_p4;

assign zext_ln1546_fu_1500_p1 = shl_ln10_fu_1492_p3;

assign zext_ln1548_fu_1566_p1 = trunc_ln1543_fu_1554_p1;

assign zext_ln1564_fu_771_p1 = $unsigned(sext_ln1734_reg_1685);

assign zext_ln1567_1_fu_1133_p1 = lshr_ln4_fu_1123_p4;

assign zext_ln1567_3_fu_1188_p1 = cc_reg_364;

assign zext_ln1567_fu_1114_p1 = shl_ln4_fu_1106_p3;

assign zext_ln1568_fu_1202_p1 = trunc_ln1568_fu_1198_p1;

assign zext_ln1598_fu_858_p1 = $unsigned(sext_ln1598_fu_854_p1);

assign zext_ln1601_fu_817_p1 = lshr_ln2_fu_807_p4;

assign zext_ln1637_fu_954_p1 = grp_modp_montymul_fu_442_ap_return;

assign zext_ln1641_1_fu_1001_p1 = lshr_ln6_fu_991_p4;

assign zext_ln1641_fu_969_p1 = u_17_reg_353;

assign zext_ln1642_1_fu_1033_p1 = lshr_ln7_fu_1023_p4;

assign zext_ln1642_fu_1014_p1 = shl_ln8_fu_1006_p3;

assign zext_ln1643_1_fu_1052_p1 = vla1_q1;

assign zext_ln1643_2_fu_1056_p1 = cc_4_reg_340;

assign zext_ln1643_3_fu_1066_p1 = add_ln1643_fu_1060_p2;

assign zext_ln1644_fu_1080_p1 = trunc_ln1644_fu_1076_p1;

assign zext_ln1669_fu_1354_p1 = wp_fu_1348_p2;

assign zext_ln1675_fu_1279_p1 = lshr_ln5_fu_1269_p4;

assign zext_ln1676_fu_1311_p1 = lshr_ln1676_1_fu_1301_p4;

assign zext_ln1684_fu_1378_p1 = tmp_5_fu_1370_p3;

assign zext_ln1722_fu_478_p1 = lshr_ln_fu_468_p4;

assign zext_ln1723_fu_491_p1 = u_1_fu_128;

assign zext_ln1734_1_fu_671_p1 = PRIMES_s_q0;

assign zext_ln1734_2_fu_607_p1 = p0i_reg_1699;

assign zext_ln1734_fu_603_p1 = $unsigned(sext_ln1734_reg_1685);

assign zext_ln1742_fu_720_p1 = u_1_fu_128;

assign zext_ln1750_fu_766_p1 = lshr_ln1_fu_756_p4;

assign zext_ln1763_1_fu_1164_p1 = lshr_ln3_fu_1154_p4;

assign zext_ln1763_fu_1145_p1 = shl_ln3_fu_1138_p3;

assign zext_ln656_fu_525_p1 = y_fu_519_p2;

assign zext_ln685_1_fu_659_p1 = $unsigned(sext_ln685_fu_655_p1);

assign zext_ln685_2_fu_904_p1 = $unsigned(sext_ln685_1_fu_900_p1);

assign zext_ln685_fu_624_p1 = shl_ln_fu_616_p3;

assign zext_ln697_fu_944_p1 = $unsigned(sext_ln697_fu_940_p1);

assign zext_ln757_1_fu_716_p1 = z_9_fu_706_p4;

assign zext_ln757_fu_696_p1 = $unsigned(sext_ln757_fu_692_p1);

always @ (posedge ap_clk) begin
    xstride_cast_reg_1629[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    xlen_cast_reg_1635[9] <= 1'b0;
    zext_ln1723_reg_1643[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln1734_reg_1704[31] <= 1'b0;
    zext_ln1734_2_reg_1711[31] <= 1'b0;
    zext_ln1734_1_reg_1721[31] <= 1'b0;
    zext_ln757_1_reg_1726[31] <= 1'b0;
    zext_ln1742_reg_1731[11:9] <= 3'b000;
    zext_ln1564_reg_1755[62:31] <= 32'b00000000000000000000000000000000;
    zext_ln1637_reg_1794[62:32] <= 31'b0000000000000000000000000000000;
end

endmodule //solve_NTRU_zint_rebuild_CRT_1
