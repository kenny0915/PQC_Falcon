// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="solve_NTRU_solve_NTRU,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=25.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=18.250000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=41,HLS_SYN_DSP=0,HLS_SYN_FF=54560,HLS_SYN_LUT=108341,HLS_VERSION=2022_1}" *)

module solve_NTRU (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        logn,
        lim,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 112'd1;
parameter    ap_ST_fsm_state2 = 112'd2;
parameter    ap_ST_fsm_state3 = 112'd4;
parameter    ap_ST_fsm_state4 = 112'd8;
parameter    ap_ST_fsm_state5 = 112'd16;
parameter    ap_ST_fsm_state6 = 112'd32;
parameter    ap_ST_fsm_state7 = 112'd64;
parameter    ap_ST_fsm_state8 = 112'd128;
parameter    ap_ST_fsm_state9 = 112'd256;
parameter    ap_ST_fsm_state10 = 112'd512;
parameter    ap_ST_fsm_state11 = 112'd1024;
parameter    ap_ST_fsm_state12 = 112'd2048;
parameter    ap_ST_fsm_state13 = 112'd4096;
parameter    ap_ST_fsm_state14 = 112'd8192;
parameter    ap_ST_fsm_state15 = 112'd16384;
parameter    ap_ST_fsm_state16 = 112'd32768;
parameter    ap_ST_fsm_state17 = 112'd65536;
parameter    ap_ST_fsm_state18 = 112'd131072;
parameter    ap_ST_fsm_state19 = 112'd262144;
parameter    ap_ST_fsm_state20 = 112'd524288;
parameter    ap_ST_fsm_state21 = 112'd1048576;
parameter    ap_ST_fsm_state22 = 112'd2097152;
parameter    ap_ST_fsm_state23 = 112'd4194304;
parameter    ap_ST_fsm_state24 = 112'd8388608;
parameter    ap_ST_fsm_state25 = 112'd16777216;
parameter    ap_ST_fsm_state26 = 112'd33554432;
parameter    ap_ST_fsm_state27 = 112'd67108864;
parameter    ap_ST_fsm_state28 = 112'd134217728;
parameter    ap_ST_fsm_state29 = 112'd268435456;
parameter    ap_ST_fsm_state30 = 112'd536870912;
parameter    ap_ST_fsm_state31 = 112'd1073741824;
parameter    ap_ST_fsm_state32 = 112'd2147483648;
parameter    ap_ST_fsm_state33 = 112'd4294967296;
parameter    ap_ST_fsm_state34 = 112'd8589934592;
parameter    ap_ST_fsm_state35 = 112'd17179869184;
parameter    ap_ST_fsm_state36 = 112'd34359738368;
parameter    ap_ST_fsm_state37 = 112'd68719476736;
parameter    ap_ST_fsm_state38 = 112'd137438953472;
parameter    ap_ST_fsm_state39 = 112'd274877906944;
parameter    ap_ST_fsm_state40 = 112'd549755813888;
parameter    ap_ST_fsm_state41 = 112'd1099511627776;
parameter    ap_ST_fsm_state42 = 112'd2199023255552;
parameter    ap_ST_fsm_state43 = 112'd4398046511104;
parameter    ap_ST_fsm_state44 = 112'd8796093022208;
parameter    ap_ST_fsm_state45 = 112'd17592186044416;
parameter    ap_ST_fsm_state46 = 112'd35184372088832;
parameter    ap_ST_fsm_state47 = 112'd70368744177664;
parameter    ap_ST_fsm_state48 = 112'd140737488355328;
parameter    ap_ST_fsm_state49 = 112'd281474976710656;
parameter    ap_ST_fsm_state50 = 112'd562949953421312;
parameter    ap_ST_fsm_state51 = 112'd1125899906842624;
parameter    ap_ST_fsm_state52 = 112'd2251799813685248;
parameter    ap_ST_fsm_state53 = 112'd4503599627370496;
parameter    ap_ST_fsm_state54 = 112'd9007199254740992;
parameter    ap_ST_fsm_state55 = 112'd18014398509481984;
parameter    ap_ST_fsm_state56 = 112'd36028797018963968;
parameter    ap_ST_fsm_state57 = 112'd72057594037927936;
parameter    ap_ST_fsm_state58 = 112'd144115188075855872;
parameter    ap_ST_fsm_state59 = 112'd288230376151711744;
parameter    ap_ST_fsm_state60 = 112'd576460752303423488;
parameter    ap_ST_fsm_state61 = 112'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 112'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 112'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 112'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 112'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 112'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 112'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 112'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 112'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 112'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 112'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 112'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 112'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 112'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 112'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 112'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 112'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 112'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 112'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 112'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 112'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 112'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 112'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 112'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 112'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 112'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 112'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 112'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 112'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 112'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 112'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 112'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 112'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 112'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 112'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 112'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 112'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 112'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 112'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 112'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 112'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 112'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 112'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 112'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 112'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 112'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 112'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 112'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 112'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 112'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 112'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 112'd2596148429267413814265248164610048;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
input  [31:0] logn;
input  [31:0] lim;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [111:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] F_upper;
wire   [63:0] G_upper;
wire   [63:0] f;
wire   [63:0] g;
wire   [63:0] tmp2;
reg   [9:0] REV10_address0;
reg    REV10_ce0;
wire   [9:0] REV10_q0;
wire   [31:0] ap_return;
reg    gmem0_blk_n_AW;
wire    ap_CS_fsm_state3;
reg    gmem0_blk_n_W;
wire    ap_CS_fsm_state4;
reg    gmem0_blk_n_B;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
reg   [0:0] tmp_s_reg_1916;
reg   [0:0] tmp_73_reg_1923;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state54;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state61;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state98;
reg   [0:0] tmp_reg_1896;
reg   [0:0] tmp_74_reg_1933;
reg   [0:0] icmp_ln2462_reg_1964;
reg   [0:0] icmp_ln2462_1_reg_2028;
reg   [0:0] icmp_ln4524_reg_2249;
wire   [31:0] grp_modp_montymul_fu_633_ap_return;
reg   [31:0] reg_652;
wire    ap_CS_fsm_state55;
wire   [0:0] tmp_160_fu_1156_p3;
wire    ap_CS_fsm_state57;
reg   [31:0] a_assign_9_reg_662;
wire    ap_CS_fsm_state90;
reg   [63:0] tmp2_read_reg_1862;
reg   [63:0] g_read_reg_1868;
reg   [63:0] f_read_reg_1875;
reg   [63:0] G_upper_read_reg_1882;
reg   [63:0] F_upper_read_reg_1889;
wire   [0:0] grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state22;
wire   [1:0] trunc_ln2469_fu_837_p1;
reg   [1:0] trunc_ln2469_reg_1944;
wire   [63:0] zext_ln2462_fu_859_p1;
reg   [63:0] zext_ln2462_reg_1959;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln2462_fu_864_p2;
wire   [9:0] u_175_fu_870_p2;
reg   [9:0] u_175_reg_1968;
wire   [1:0] trunc_ln2469_1_fu_876_p1;
reg   [1:0] trunc_ln2469_1_reg_1985;
wire   [7:0] trunc_ln2469_2_fu_918_p1;
reg   [7:0] trunc_ln2469_2_reg_1994;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln2466_fu_912_p2;
wire   [1:0] trunc_ln2469_3_fu_922_p1;
reg   [1:0] trunc_ln2469_3_reg_1999;
reg   [63:0] gmem0_addr_17_reg_2004;
wire   [3:0] shl_ln2469_fu_964_p2;
reg   [3:0] shl_ln2469_reg_2010;
wire   [31:0] shl_ln2469_2_fu_982_p2;
reg   [31:0] shl_ln2469_2_reg_2015;
wire   [63:0] zext_ln2462_1_fu_991_p1;
reg   [63:0] zext_ln2462_1_reg_2023;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln2462_1_fu_995_p2;
wire   [9:0] u_177_fu_1001_p2;
reg   [9:0] u_177_reg_2032;
wire   [7:0] trunc_ln2469_4_fu_1068_p1;
reg   [7:0] trunc_ln2469_4_reg_2059;
wire    ap_CS_fsm_state40;
wire   [0:0] icmp_ln2466_1_fu_1062_p2;
wire   [1:0] trunc_ln2469_6_fu_1072_p1;
reg   [1:0] trunc_ln2469_6_reg_2064;
reg   [63:0] gmem0_addr_18_reg_2069;
wire   [3:0] shl_ln2469_3_fu_1114_p2;
reg   [3:0] shl_ln2469_3_reg_2075;
wire   [31:0] shl_ln2469_5_fu_1132_p2;
reg   [31:0] shl_ln2469_5_reg_2080;
wire  signed [31:0] sext_ln808_fu_1152_p1;
reg  signed [31:0] sext_ln808_reg_2091;
reg   [31:0] x1_load_reg_2123;
wire    ap_CS_fsm_state58;
wire   [0:0] icmp_ln962_fu_1233_p2;
wire   [63:0] zext_ln4509_fu_1306_p1;
reg   [63:0] zext_ln4509_reg_2140;
wire    ap_CS_fsm_state60;
reg   [63:0] gmem0_addr_20_reg_2148;
wire   [0:0] icmp_ln4509_fu_1310_p2;
wire   [1:0] add_ln4510_1_fu_1351_p2;
reg   [1:0] add_ln4510_1_reg_2154;
wire   [1:0] trunc_ln4513_fu_1361_p1;
reg   [1:0] trunc_ln4513_reg_2166;
wire   [1:0] trunc_ln4514_fu_1364_p1;
reg   [1:0] trunc_ln4514_reg_2171;
reg   [31:0] gmem0_addr_20_read_reg_2176;
reg   [9:0] u_182_reg_2181;
wire    ap_CS_fsm_state70;
reg   [63:0] gmem0_addr_21_reg_2191;
wire   [0:0] icmp_ln4512_fu_1426_p2;
reg   [63:0] gmem0_addr_22_reg_2197;
reg   [63:0] gmem0_addr_23_reg_2203;
reg   [31:0] gmem0_addr_21_read_reg_2216;
wire   [8:0] trunc_ln4513_4_fu_1579_p1;
reg   [8:0] trunc_ln4513_4_reg_2221;
reg   [31:0] gmem0_addr_22_read_reg_2226;
wire   [1:0] add_ln4514_1_fu_1595_p2;
reg   [1:0] add_ln4514_1_reg_2231;
wire   [1:0] add_ln4515_1_fu_1600_p2;
reg   [1:0] add_ln4515_1_reg_2236;
reg   [31:0] gmem0_addr_23_read_reg_2241;
wire   [0:0] icmp_ln4524_fu_1733_p2;
wire    ap_CS_fsm_state89;
wire   [9:0] u_185_fu_1739_p2;
reg   [9:0] u_185_reg_2253;
wire   [8:0] trunc_ln4527_fu_1745_p1;
reg   [8:0] trunc_ln4527_reg_2258;
reg   [63:0] gmem0_addr_25_reg_2286;
wire    ap_CS_fsm_state91;
wire   [0:0] icmp_ln4529_fu_1816_p2;
reg   [11:0] vla1_address0;
reg    vla1_ce0;
reg   [3:0] vla1_we0;
reg   [31:0] vla1_d0;
wire   [31:0] vla1_q0;
reg   [11:0] vla1_address1;
reg    vla1_ce1;
reg   [3:0] vla1_we1;
reg   [31:0] vla1_d1;
wire   [31:0] vla1_q1;
wire    grp_modp_montymul_fu_633_ap_ready;
reg   [31:0] grp_modp_montymul_fu_633_a;
reg   [31:0] grp_modp_montymul_fu_633_b;
wire    grp_modp_NTT2_ext_1_fu_687_ap_start;
wire    grp_modp_NTT2_ext_1_fu_687_ap_done;
wire    grp_modp_NTT2_ext_1_fu_687_ap_idle;
wire    grp_modp_NTT2_ext_1_fu_687_ap_ready;
wire   [11:0] grp_modp_NTT2_ext_1_fu_687_vla1_address0;
wire    grp_modp_NTT2_ext_1_fu_687_vla1_ce0;
wire   [3:0] grp_modp_NTT2_ext_1_fu_687_vla1_we0;
wire   [31:0] grp_modp_NTT2_ext_1_fu_687_vla1_d0;
wire   [11:0] grp_modp_NTT2_ext_1_fu_687_vla1_address1;
wire    grp_modp_NTT2_ext_1_fu_687_vla1_ce1;
wire   [3:0] grp_modp_NTT2_ext_1_fu_687_vla1_we1;
wire   [31:0] grp_modp_NTT2_ext_1_fu_687_vla1_d1;
reg   [63:0] grp_modp_NTT2_ext_1_fu_687_a;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_ap_idle;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_ap_ready;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWVALID;
wire   [63:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWADDR;
wire   [0:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWID;
wire   [31:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWLEN;
wire   [2:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWBURST;
wire   [1:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWPROT;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWQOS;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWREGION;
wire   [0:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWUSER;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WVALID;
wire   [31:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WDATA;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WSTRB;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WLAST;
wire   [0:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WID;
wire   [0:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WUSER;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARVALID;
wire   [63:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARADDR;
wire   [0:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARID;
wire   [31:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARLEN;
wire   [2:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARBURST;
wire   [1:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARPROT;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARQOS;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARREGION;
wire   [0:0] grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARUSER;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_RREADY;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_BREADY;
reg   [31:0] grp_solve_NTRU_all_79_81_83_1_fu_739_depth;
wire   [11:0] grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_address0;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_ce0;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_we0;
wire   [31:0] grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_d0;
wire   [11:0] grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_address1;
wire    grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_ce1;
wire   [3:0] grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_we1;
wire   [31:0] grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_d1;
reg    gmem0_AWVALID;
wire    gmem0_AWREADY;
reg   [63:0] gmem0_AWADDR;
reg   [31:0] gmem0_AWLEN;
reg    gmem0_WVALID;
wire    gmem0_WREADY;
reg   [31:0] gmem0_WDATA;
reg   [3:0] gmem0_WSTRB;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [63:0] gmem0_ARADDR;
reg   [31:0] gmem0_ARLEN;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [31:0] gmem0_RDATA;
wire   [8:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
reg    gmem0_BREADY;
reg   [0:0] ap_phi_mux_retval_5_phi_fu_616_p10;
reg   [0:0] retval_5_reg_611;
reg    ap_predicate_op542_writeresp_state98;
reg    ap_block_state98;
reg    ap_predicate_op198_writeresp_state29;
reg    ap_block_state29;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state59;
reg    grp_modp_NTT2_ext_1_fu_687_ap_start_reg;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state88;
reg    grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state21;
wire   [63:0] zext_ln2387_fu_1019_p1;
wire   [63:0] zext_ln966_fu_1255_p1;
wire   [63:0] zext_ln967_fu_1293_p1;
wire   [63:0] zext_ln966_1_fu_1280_p1;
wire    ap_CS_fsm_state69;
wire   [63:0] zext_ln4513_2_fu_1590_p1;
wire   [63:0] zext_ln4514_2_fu_1659_p1;
wire   [63:0] zext_ln4515_1_fu_1720_p1;
wire    ap_CS_fsm_state81;
wire   [63:0] zext_ln4527_fu_1757_p1;
wire   [63:0] zext_ln4524_fu_1728_p1;
wire   [63:0] zext_ln4528_fu_1769_p1;
wire   [63:0] zext_ln4528_1_fu_1783_p1;
wire  signed [63:0] sext_ln4432_fu_796_p1;
wire  signed [63:0] sext_ln4462_fu_826_p1;
wire  signed [63:0] sext_ln4466_fu_845_p1;
wire  signed [63:0] sext_ln2469_fu_939_p1;
wire  signed [63:0] sext_ln2469_1_fu_1089_p1;
wire  signed [63:0] sext_ln4487_fu_1138_p1;
wire  signed [63:0] sext_ln4510_fu_1341_p1;
wire  signed [63:0] sext_ln4513_fu_1453_p1;
wire  signed [63:0] sext_ln4514_fu_1478_p1;
wire  signed [63:0] sext_ln4515_fu_1503_p1;
wire  signed [63:0] sext_ln4530_fu_1826_p1;
wire  signed [63:0] sext_ln4534_fu_1840_p1;
wire  signed [63:0] sext_ln4457_fu_1851_p1;
reg   [31:0] depth_fu_240;
wire   [31:0] depth_3_fu_811_p2;
wire   [0:0] icmp_ln4455_fu_816_p2;
reg   [9:0] u_fu_244;
reg   [9:0] u_103_fu_248;
reg   [31:0] z_47_fu_252;
wire   [31:0] z_64_fu_1219_p2;
reg   [5:0] i_fu_256;
wire   [5:0] i_9_fu_1164_p2;
reg   [9:0] u_105_fu_260;
wire   [9:0] u_179_fu_1239_p2;
reg   [31:0] x1_fu_264;
reg   [31:0] x2_fu_268;
reg   [9:0] u_021_fu_272;
wire   [9:0] u_181_fu_1316_p2;
reg   [9:0] u_108_fu_276;
wire   [9:0] u_183_fu_1432_p2;
reg   [9:0] u_110_fu_280;
wire   [31:0] w_43_fu_1412_p2;
wire   [31:0] w_45_fu_1572_p2;
wire   [31:0] w_47_fu_1645_p2;
wire   [31:0] w_49_fu_1704_p2;
wire   [61:0] grp_fu_777_p4;
wire   [0:0] tmp_158_fu_884_p3;
wire   [31:0] and_ln_fu_892_p3;
wire   [31:0] w_50_fu_900_p2;
wire   [31:0] add_ln2466_fu_906_p2;
wire   [63:0] add_ln2469_fu_925_p2;
wire   [61:0] trunc_ln2469_5_fu_929_p4;
wire   [1:0] add_ln2469_2_fu_956_p2;
wire   [3:0] zext_ln2469_1_fu_960_p1;
wire   [4:0] shl_ln2469_1_fu_970_p3;
wire   [31:0] zext_ln2469_fu_953_p1;
wire   [31:0] zext_ln2469_2_fu_978_p1;
wire   [8:0] trunc_ln2465_fu_1007_p1;
wire   [9:0] zext_ln_fu_1011_p3;
wire   [0:0] tmp_159_fu_1034_p3;
wire   [31:0] and_ln2388_2_fu_1042_p3;
wire   [31:0] w_51_fu_1050_p2;
wire   [31:0] add_ln2466_1_fu_1056_p2;
wire   [63:0] add_ln2469_1_fu_1075_p2;
wire   [61:0] trunc_ln2469_7_fu_1079_p4;
wire   [1:0] add_ln2469_3_fu_1106_p2;
wire   [3:0] zext_ln2469_4_fu_1110_p1;
wire   [4:0] shl_ln2469_4_fu_1120_p3;
wire   [31:0] zext_ln2469_3_fu_1103_p1;
wire   [31:0] zext_ln2469_5_fu_1128_p1;
wire  signed [5:0] sext_ln808_fu_1152_p0;
wire  signed [5:0] tmp_160_fu_1156_p1;
wire  signed [5:0] i_9_fu_1164_p0;
wire   [31:0] lshr_ln813_fu_1196_p2;
wire   [0:0] trunc_ln813_fu_1201_p1;
wire   [31:0] xor_ln813_fu_1190_p2;
wire   [31:0] select_ln813_fu_1205_p3;
wire   [31:0] and_ln813_fu_1213_p2;
wire   [9:0] shl_ln966_fu_1249_p2;
wire   [11:0] zext_ln967_cast_fu_1285_p3;
wire   [63:0] add_ln4510_fu_1326_p2;
wire   [61:0] trunc_ln4510_2_fu_1331_p4;
wire   [1:0] trunc_ln4510_fu_1322_p1;
wire   [4:0] shl_ln_fu_1372_p3;
wire   [31:0] zext_ln4510_fu_1379_p1;
wire   [31:0] lshr_ln4510_fu_1383_p2;
wire   [7:0] w_42_fu_1388_p1;
wire   [0:0] tmp_161_fu_1396_p3;
wire   [31:0] select_ln635_fu_1404_p3;
wire  signed [31:0] sext_ln4510_1_fu_1392_p1;
wire   [63:0] zext_ln4512_fu_1422_p1;
wire   [63:0] add_ln4513_fu_1438_p2;
wire   [61:0] trunc_ln4513_3_fu_1443_p4;
wire   [63:0] add_ln4514_fu_1463_p2;
wire   [61:0] trunc_ln4514_2_fu_1468_p4;
wire   [63:0] add_ln4515_fu_1488_p2;
wire   [61:0] trunc_ln19_fu_1493_p4;
wire   [1:0] trunc_ln4513_1_fu_1523_p1;
wire   [1:0] add_ln4513_1_fu_1526_p2;
wire   [4:0] shl_ln53_fu_1531_p3;
wire   [31:0] zext_ln4513_fu_1539_p1;
wire   [31:0] lshr_ln4513_fu_1543_p2;
wire   [7:0] w_44_fu_1548_p1;
wire   [0:0] tmp_162_fu_1556_p3;
wire   [31:0] select_ln635_15_fu_1564_p3;
wire  signed [31:0] sext_ln4513_1_fu_1552_p1;
wire   [9:0] zext_ln4513_1_fu_1582_p3;
wire   [4:0] shl_ln54_fu_1605_p3;
wire   [31:0] zext_ln4514_fu_1612_p1;
wire   [31:0] lshr_ln4514_fu_1616_p2;
wire   [7:0] w_46_fu_1621_p1;
wire   [0:0] tmp_163_fu_1629_p3;
wire   [31:0] select_ln635_16_fu_1637_p3;
wire  signed [31:0] sext_ln4514_1_fu_1625_p1;
wire   [10:0] zext_ln4514_1_fu_1652_p3;
wire   [4:0] shl_ln55_fu_1664_p3;
wire   [31:0] zext_ln4515_fu_1671_p1;
wire   [31:0] lshr_ln4515_fu_1675_p2;
wire   [7:0] w_48_fu_1680_p1;
wire   [0:0] tmp_164_fu_1688_p3;
wire   [31:0] select_ln635_17_fu_1696_p3;
wire  signed [31:0] sext_ln4515_1_fu_1684_p1;
wire   [9:0] or_ln4515_fu_1711_p2;
wire  signed [10:0] sext_ln4515_2_fu_1716_p1;
wire   [9:0] zext_ln41_fu_1749_p3;
wire   [10:0] zext_ln42_fu_1762_p3;
wire   [9:0] or_ln4528_fu_1774_p2;
wire  signed [10:0] sext_ln4528_fu_1779_p1;
wire   [31:0] sub_ln697_fu_1788_p2;
wire   [0:0] tmp_165_fu_1794_p3;
wire   [31:0] select_ln697_fu_1802_p3;
wire   [31:0] z_65_fu_1810_p2;
reg   [111:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
reg    ap_ST_fsm_state41_blk;
reg    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
reg    ap_ST_fsm_state47_blk;
reg    ap_ST_fsm_state48_blk;
reg    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
reg    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
reg    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
reg    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
reg    ap_ST_fsm_state71_blk;
reg    ap_ST_fsm_state72_blk;
reg    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
reg    ap_ST_fsm_state78_blk;
reg    ap_ST_fsm_state79_blk;
reg    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
reg    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
reg    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
reg    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
reg    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
reg    ap_ST_fsm_state92_blk;
reg    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
reg    ap_ST_fsm_state98_blk;
reg    ap_ST_fsm_state99_blk;
reg    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
reg    ap_ST_fsm_state105_blk;
reg    ap_ST_fsm_state106_blk;
reg    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
reg    ap_ST_fsm_state112_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 112'd1;
#0 grp_modp_NTT2_ext_1_fu_687_ap_start_reg = 1'b0;
#0 grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start_reg = 1'b0;
end

solve_NTRU_modp_mkgm2_1_REV10_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
REV10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(REV10_address0),
    .ce0(REV10_ce0),
    .q0(REV10_q0)
);

solve_NTRU_vla1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
vla1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vla1_address0),
    .ce0(vla1_ce0),
    .we0(vla1_we0),
    .d0(vla1_d0),
    .q0(vla1_q0),
    .address1(vla1_address1),
    .ce1(vla1_ce1),
    .we1(vla1_we1),
    .d1(vla1_d1),
    .q1(vla1_q1)
);

solve_NTRU_modp_montymul grp_modp_montymul_fu_633(
    .ap_ready(grp_modp_montymul_fu_633_ap_ready),
    .a(grp_modp_montymul_fu_633_a),
    .b(grp_modp_montymul_fu_633_b),
    .p(32'd2147473409),
    .p0i(32'd2042615807),
    .ap_return(grp_modp_montymul_fu_633_ap_return)
);

solve_NTRU_modp_NTT2_ext_1 grp_modp_NTT2_ext_1_fu_687(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_modp_NTT2_ext_1_fu_687_ap_start),
    .ap_done(grp_modp_NTT2_ext_1_fu_687_ap_done),
    .ap_idle(grp_modp_NTT2_ext_1_fu_687_ap_idle),
    .ap_ready(grp_modp_NTT2_ext_1_fu_687_ap_ready),
    .vla1_address0(grp_modp_NTT2_ext_1_fu_687_vla1_address0),
    .vla1_ce0(grp_modp_NTT2_ext_1_fu_687_vla1_ce0),
    .vla1_we0(grp_modp_NTT2_ext_1_fu_687_vla1_we0),
    .vla1_d0(grp_modp_NTT2_ext_1_fu_687_vla1_d0),
    .vla1_q0(vla1_q0),
    .vla1_address1(grp_modp_NTT2_ext_1_fu_687_vla1_address1),
    .vla1_ce1(grp_modp_NTT2_ext_1_fu_687_vla1_ce1),
    .vla1_we1(grp_modp_NTT2_ext_1_fu_687_vla1_we1),
    .vla1_d1(grp_modp_NTT2_ext_1_fu_687_vla1_d1),
    .vla1_q1(vla1_q1),
    .a(grp_modp_NTT2_ext_1_fu_687_a),
    .stride(64'd1),
    .gm(64'd8192),
    .logn(32'd9),
    .p(32'd2147473409),
    .p0i(32'd2042615807)
);

solve_NTRU_solve_NTRU_all_79_81_83_1 grp_solve_NTRU_all_79_81_83_1_fu_739(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start),
    .ap_done(grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done),
    .ap_idle(grp_solve_NTRU_all_79_81_83_1_fu_739_ap_idle),
    .ap_ready(grp_solve_NTRU_all_79_81_83_1_fu_739_ap_ready),
    .m_axi_gmem0_AWVALID(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(gmem0_AWREADY),
    .m_axi_gmem0_AWADDR(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(gmem0_WREADY),
    .m_axi_gmem0_WDATA(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(gmem0_RDATA),
    .m_axi_gmem0_RLAST(1'b0),
    .m_axi_gmem0_RID(1'd0),
    .m_axi_gmem0_RFIFONUM(gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(1'd0),
    .m_axi_gmem0_RRESP(2'd0),
    .m_axi_gmem0_BVALID(gmem0_BVALID),
    .m_axi_gmem0_BREADY(grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .f(f_read_reg_1875),
    .g(g_read_reg_1868),
    .depth(grp_solve_NTRU_all_79_81_83_1_fu_739_depth),
    .vla1_address0(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_address0),
    .vla1_ce0(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_ce0),
    .vla1_we0(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_we0),
    .vla1_d0(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_d0),
    .vla1_q0(vla1_q0),
    .vla1_address1(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_address1),
    .vla1_ce1(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_ce1),
    .vla1_we1(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_we1),
    .vla1_d1(grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_d1),
    .vla1_q1(vla1_q1),
    .tmp2(tmp2_read_reg_1862),
    .ap_return(grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return)
);

solve_NTRU_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(ap_return),
    .F_upper(F_upper),
    .G_upper(G_upper),
    .f(f),
    .g(g),
    .tmp2(tmp2)
);

solve_NTRU_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARLEN(gmem0_ARLEN),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(gmem0_AWVALID),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(gmem0_AWADDR),
    .I_AWLEN(gmem0_AWLEN),
    .I_WVALID(gmem0_WVALID),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(gmem0_WDATA),
    .I_WSTRB(gmem0_WSTRB),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(gmem0_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_modp_NTT2_ext_1_fu_687_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | ((icmp_ln4512_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70)))) begin
            grp_modp_NTT2_ext_1_fu_687_ap_start_reg <= 1'b1;
        end else if ((grp_modp_NTT2_ext_1_fu_687_ap_ready == 1'b1)) begin
            grp_modp_NTT2_ext_1_fu_687_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start_reg <= 1'b1;
        end else if ((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_ready == 1'b1)) begin
            grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1))) begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            depth_fu_240 <= 32'd8;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln4455_fu_816_p2 == 1'd1))) begin
            depth_fu_240 <= depth_3_fu_811_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2462_1_fu_995_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        i_fu_256 <= 6'd30;
    end else if (((tmp_160_fu_1156_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        i_fu_256 <= i_9_fu_1164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state105))) begin
        retval_5_reg_611 <= 1'd1;
    end else if (((~((ap_predicate_op198_writeresp_state29 == 1'b1) & (gmem0_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state29)) | (~((ap_predicate_op542_writeresp_state98 == 1'b1) & (gmem0_BVALID == 1'b0)) & (icmp_ln4524_reg_2249 == 1'd0) & (icmp_ln2462_1_reg_2028 == 1'd1) & (icmp_ln2462_reg_1964 == 1'd1) & (tmp_74_reg_1933 == 1'd1) & (tmp_reg_1896 == 1'd1) & (tmp_73_reg_1923 == 1'd1) & (tmp_s_reg_1916 == 1'd1) & (1'b1 == ap_CS_fsm_state98)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state54)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        retval_5_reg_611 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln962_fu_1233_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        u_021_fu_272 <= 10'd0;
    end else if (((icmp_ln4509_fu_1310_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
        u_021_fu_272 <= u_181_fu_1316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2462_fu_864_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        u_103_fu_248 <= 10'd0;
    end else if (((icmp_ln2466_1_fu_1062_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        u_103_fu_248 <= u_177_reg_2032;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_160_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        u_105_fu_260 <= 10'd0;
    end else if (((icmp_ln962_fu_1233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        u_105_fu_260 <= u_179_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4509_fu_1310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        u_108_fu_276 <= 10'd0;
    end else if (((icmp_ln4512_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        u_108_fu_276 <= u_183_fu_1432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4512_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        u_110_fu_280 <= 10'd0;
    end else if (((icmp_ln4529_fu_1816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state91))) begin
        u_110_fu_280 <= u_185_reg_2253;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        u_fu_244 <= 10'd0;
    end else if (((icmp_ln2466_fu_912_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        u_fu_244 <= u_175_reg_1968;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_160_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        x1_fu_264 <= 32'd10239;
    end else if (((icmp_ln962_fu_1233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        x1_fu_264 <= grp_modp_montymul_fu_633_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_160_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        x2_fu_268 <= 32'd10239;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        x2_fu_268 <= grp_modp_montymul_fu_633_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2462_1_fu_995_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        z_47_fu_252 <= 32'd10239;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        z_47_fu_252 <= z_64_fu_1219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        F_upper_read_reg_1889 <= F_upper;
        G_upper_read_reg_1882 <= G_upper;
        f_read_reg_1875 <= f;
        g_read_reg_1868 <= g;
        tmp2_read_reg_1862 <= tmp2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        a_assign_9_reg_662 <= grp_modp_montymul_fu_633_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4509_fu_1310_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
        add_ln4510_1_reg_2154 <= add_ln4510_1_fu_1351_p2;
        gmem0_addr_20_reg_2148 <= sext_ln4510_fu_1341_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        add_ln4514_1_reg_2231 <= add_ln4514_1_fu_1595_p2;
        add_ln4515_1_reg_2236 <= add_ln4515_1_fu_1600_p2;
        gmem0_addr_22_read_reg_2226 <= gmem0_RDATA;
        trunc_ln4513_4_reg_2221 <= trunc_ln4513_4_fu_1579_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2466_fu_912_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        gmem0_addr_17_reg_2004 <= sext_ln2469_fu_939_p1;
        trunc_ln2469_2_reg_1994 <= trunc_ln2469_2_fu_918_p1;
        trunc_ln2469_3_reg_1999 <= trunc_ln2469_3_fu_922_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2466_1_fu_1062_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        gmem0_addr_18_reg_2069 <= sext_ln2469_1_fu_1089_p1;
        trunc_ln2469_4_reg_2059 <= trunc_ln2469_4_fu_1068_p1;
        trunc_ln2469_6_reg_2064 <= trunc_ln2469_6_fu_1072_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        gmem0_addr_20_read_reg_2176 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        gmem0_addr_21_read_reg_2216 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4512_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        gmem0_addr_21_reg_2191 <= sext_ln4513_fu_1453_p1;
        gmem0_addr_22_reg_2197 <= sext_ln4514_fu_1478_p1;
        gmem0_addr_23_reg_2203 <= sext_ln4515_fu_1503_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        gmem0_addr_23_read_reg_2241 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4529_fu_1816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state91))) begin
        gmem0_addr_25_reg_2286 <= sext_ln4530_fu_1826_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        icmp_ln2462_1_reg_2028 <= icmp_ln2462_1_fu_995_p2;
        u_177_reg_2032 <= u_177_fu_1001_p2;
        zext_ln2462_1_reg_2023[9 : 0] <= zext_ln2462_1_fu_991_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        icmp_ln2462_reg_1964 <= icmp_ln2462_fu_864_p2;
        u_175_reg_1968 <= u_175_fu_870_p2;
        zext_ln2462_reg_1959[9 : 0] <= zext_ln2462_fu_859_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        icmp_ln4524_reg_2249 <= icmp_ln4524_fu_1733_p2;
        u_185_reg_2253 <= u_185_fu_1739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | ((tmp_160_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state55)) | ((tmp_160_fu_1156_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state55)))) begin
        reg_652 <= grp_modp_montymul_fu_633_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sext_ln808_reg_2091 <= sext_ln808_fu_1152_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        shl_ln2469_2_reg_2015 <= shl_ln2469_2_fu_982_p2;
        shl_ln2469_reg_2010 <= shl_ln2469_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        shl_ln2469_3_reg_2075 <= shl_ln2469_3_fu_1114_p2;
        shl_ln2469_5_reg_2080 <= shl_ln2469_5_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_73_reg_1923 <= grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_74_reg_1933 <= grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_reg_1896 <= grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_s_reg_1916 <= grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2462_fu_864_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        trunc_ln2469_1_reg_1985 <= trunc_ln2469_1_fu_876_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        trunc_ln2469_reg_1944 <= trunc_ln2469_fu_837_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4509_fu_1310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        trunc_ln4513_reg_2166 <= trunc_ln4513_fu_1361_p1;
        trunc_ln4514_reg_2171 <= trunc_ln4514_fu_1364_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln4524_fu_1733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state89))) begin
        trunc_ln4527_reg_2258 <= trunc_ln4527_fu_1745_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        u_182_reg_2181 <= u_108_fu_276;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln962_fu_1233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        x1_load_reg_2123 <= x1_fu_264;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        zext_ln4509_reg_2140[9 : 0] <= zext_ln4509_fu_1306_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        REV10_address0 = zext_ln966_fu_1255_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        REV10_address0 = 10'd0;
    end else begin
        REV10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        REV10_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        REV10_ce0 = 1'b0;
    end else begin
        REV10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state100_blk = 1'b1;
    end else begin
        ap_ST_fsm_state100_blk = 1'b0;
    end
end

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state105_blk = 1'b1;
    end else begin
        ap_ST_fsm_state105_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state106_blk = 1'b1;
    end else begin
        ap_ST_fsm_state106_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state107_blk = 1'b1;
    end else begin
        ap_ST_fsm_state107_blk = 1'b0;
    end
end

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state112_blk = 1'b1;
    end else begin
        ap_ST_fsm_state112_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if ((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

always @ (*) begin
    if (((ap_predicate_op198_writeresp_state29 == 1'b1) & (gmem0_BVALID == 1'b0))) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state41_blk = 1'b1;
    end else begin
        ap_ST_fsm_state41_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state42_blk = 1'b1;
    end else begin
        ap_ST_fsm_state42_blk = 1'b0;
    end
end

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state47_blk = 1'b1;
    end else begin
        ap_ST_fsm_state47_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state48_blk = 1'b1;
    end else begin
        ap_ST_fsm_state48_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state49_blk = 1'b1;
    end else begin
        ap_ST_fsm_state49_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state54_blk = 1'b1;
    end else begin
        ap_ST_fsm_state54_blk = 1'b0;
    end
end

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

always @ (*) begin
    if ((gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state61_blk = 1'b1;
    end else begin
        ap_ST_fsm_state61_blk = 1'b0;
    end
end

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

always @ (*) begin
    if ((gmem0_RVALID == 1'b0)) begin
        ap_ST_fsm_state68_blk = 1'b1;
    end else begin
        ap_ST_fsm_state68_blk = 1'b0;
    end
end

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

always @ (*) begin
    if ((gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state71_blk = 1'b1;
    end else begin
        ap_ST_fsm_state71_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state72_blk = 1'b1;
    end else begin
        ap_ST_fsm_state72_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state73_blk = 1'b1;
    end else begin
        ap_ST_fsm_state73_blk = 1'b0;
    end
end

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

always @ (*) begin
    if ((gmem0_RVALID == 1'b0)) begin
        ap_ST_fsm_state78_blk = 1'b1;
    end else begin
        ap_ST_fsm_state78_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_RVALID == 1'b0)) begin
        ap_ST_fsm_state79_blk = 1'b1;
    end else begin
        ap_ST_fsm_state79_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((gmem0_RVALID == 1'b0)) begin
        ap_ST_fsm_state80_blk = 1'b1;
    end else begin
        ap_ST_fsm_state80_blk = 1'b0;
    end
end

assign ap_ST_fsm_state81_blk = 1'b0;

always @ (*) begin
    if ((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b0)) begin
        ap_ST_fsm_state82_blk = 1'b1;
    end else begin
        ap_ST_fsm_state82_blk = 1'b0;
    end
end

assign ap_ST_fsm_state83_blk = 1'b0;

always @ (*) begin
    if ((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b0)) begin
        ap_ST_fsm_state84_blk = 1'b1;
    end else begin
        ap_ST_fsm_state84_blk = 1'b0;
    end
end

assign ap_ST_fsm_state85_blk = 1'b0;

always @ (*) begin
    if ((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b0)) begin
        ap_ST_fsm_state86_blk = 1'b1;
    end else begin
        ap_ST_fsm_state86_blk = 1'b0;
    end
end

assign ap_ST_fsm_state87_blk = 1'b0;

always @ (*) begin
    if ((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b0)) begin
        ap_ST_fsm_state88_blk = 1'b1;
    end else begin
        ap_ST_fsm_state88_blk = 1'b0;
    end
end

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state92_blk = 1'b1;
    end else begin
        ap_ST_fsm_state92_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state93_blk = 1'b1;
    end else begin
        ap_ST_fsm_state93_blk = 1'b0;
    end
end

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

always @ (*) begin
    if (((ap_predicate_op542_writeresp_state98 == 1'b1) & (gmem0_BVALID == 1'b0))) begin
        ap_ST_fsm_state98_blk = 1'b1;
    end else begin
        ap_ST_fsm_state98_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state99_blk = 1'b1;
    end else begin
        ap_ST_fsm_state99_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op542_writeresp_state98 == 1'b1) & (gmem0_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state98))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln4524_reg_2249 == 1'd0) & (icmp_ln2462_1_reg_2028 == 1'd1) & (icmp_ln2462_reg_1964 == 1'd1) & (tmp_74_reg_1933 == 1'd1) & (tmp_reg_1896 == 1'd1) & (tmp_73_reg_1923 == 1'd1) & (tmp_s_reg_1916 == 1'd1) & (1'b1 == ap_CS_fsm_state98))) begin
        ap_phi_mux_retval_5_phi_fu_616_p10 = 1'd0;
    end else begin
        ap_phi_mux_retval_5_phi_fu_616_p10 = retval_5_reg_611;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op542_writeresp_state98 == 1'b1) & (gmem0_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state98))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
        gmem0_ARADDR = gmem0_addr_23_reg_2203;
    end else if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        gmem0_ARADDR = gmem0_addr_22_reg_2197;
    end else if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        gmem0_ARADDR = gmem0_addr_21_reg_2191;
    end else if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
        gmem0_ARADDR = gmem0_addr_20_reg_2148;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_ARADDR = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARADDR;
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state73)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state71)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61)))) begin
        gmem0_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_ARLEN = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARLEN;
    end else begin
        gmem0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state73)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state71)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61)))) begin
        gmem0_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_ARVALID = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_ARVALID;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
        gmem0_AWADDR = sext_ln4457_fu_1851_p1;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state99))) begin
        gmem0_AWADDR = sext_ln4534_fu_1840_p1;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state92))) begin
        gmem0_AWADDR = gmem0_addr_25_reg_2286;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
        gmem0_AWADDR = sext_ln4487_fu_1138_p1;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        gmem0_AWADDR = gmem0_addr_18_reg_2069;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        gmem0_AWADDR = gmem0_addr_17_reg_2004;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        gmem0_AWADDR = sext_ln4466_fu_845_p1;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        gmem0_AWADDR = sext_ln4462_fu_826_p1;
    end else if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_AWADDR = sext_ln4432_fu_796_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_AWADDR = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWADDR;
    end else begin
        gmem0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state92)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state99)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem0_AWLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_AWLEN = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWLEN;
    end else begin
        gmem0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state92)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state99)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106)) | ((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem0_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_AWVALID = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_AWVALID;
    end else begin
        gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op198_writeresp_state29 == 1'b1) & (gmem0_BVALID == 1'b0)) & (ap_predicate_op198_writeresp_state29 == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | (~((ap_predicate_op542_writeresp_state98 == 1'b1) & (gmem0_BVALID == 1'b0)) & (ap_predicate_op542_writeresp_state98 == 1'b1) & (1'b1 == ap_CS_fsm_state98)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state105)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state54)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state47)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state112)) | ((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        gmem0_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_BREADY = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_BREADY;
    end else begin
        gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state80)) | ((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state79)) | ((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state78)) | ((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state68)))) begin
        gmem0_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_RREADY = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_RREADY;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        gmem0_WDATA = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        gmem0_WDATA = 32'd99;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        gmem0_WDATA = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        gmem0_WDATA = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        gmem0_WDATA = shl_ln2469_5_reg_2080;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        gmem0_WDATA = shl_ln2469_2_reg_2015;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        gmem0_WDATA = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        gmem0_WDATA = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        gmem0_WDATA = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_WDATA = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WDATA;
    end else begin
        gmem0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        gmem0_WSTRB = shl_ln2469_3_reg_2075;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        gmem0_WSTRB = shl_ln2469_reg_2010;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem0_WSTRB = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_WSTRB = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WSTRB;
    end else begin
        gmem0_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state93)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state100)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107)) | ((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        gmem0_WVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem0_WVALID = grp_solve_NTRU_all_79_81_83_1_fu_739_m_axi_gmem0_WVALID;
    end else begin
        gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state61))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_blk_n_AW = m_axi_gmem0_AWREADY;
    end else begin
        gmem0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state9) | ((icmp_ln4524_reg_2249 == 1'd0) & (icmp_ln2462_1_reg_2028 == 1'd1) & (icmp_ln2462_reg_1964 == 1'd1) & (tmp_74_reg_1933 == 1'd1) & (tmp_reg_1896 == 1'd1) & (tmp_73_reg_1923 == 1'd1) & (tmp_s_reg_1916 == 1'd1) & (1'b1 == ap_CS_fsm_state98)) | ((tmp_73_reg_1923 == 1'd1) & (tmp_s_reg_1916 == 1'd1) & (1'b1 == ap_CS_fsm_state29)))) begin
        gmem0_blk_n_B = m_axi_gmem0_BVALID;
    end else begin
        gmem0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state68))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem0_blk_n_W = m_axi_gmem0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_modp_NTT2_ext_1_fu_687_a = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_modp_NTT2_ext_1_fu_687_a = 64'd6144;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_modp_NTT2_ext_1_fu_687_a = 64'd4096;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_modp_NTT2_ext_1_fu_687_a = 64'd2048;
    end else begin
        grp_modp_NTT2_ext_1_fu_687_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_modp_montymul_fu_633_a = vla1_q1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_modp_montymul_fu_633_a = x2_fu_268;
    end else if (((icmp_ln962_fu_1233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        grp_modp_montymul_fu_633_a = x1_fu_264;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_modp_montymul_fu_633_a = 32'd104837121;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_modp_montymul_fu_633_a = reg_652;
    end else if ((((tmp_160_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state55)) | ((tmp_160_fu_1156_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state55)))) begin
        grp_modp_montymul_fu_633_a = z_47_fu_252;
    end else begin
        grp_modp_montymul_fu_633_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_modp_montymul_fu_633_b = vla1_q0;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_modp_montymul_fu_633_b = reg_652;
    end else if (((1'b1 == ap_CS_fsm_state56) | ((icmp_ln962_fu_1233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58)))) begin
        grp_modp_montymul_fu_633_b = 32'd1685737800;
    end else if (((tmp_160_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        grp_modp_montymul_fu_633_b = 32'd1;
    end else if (((tmp_160_fu_1156_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        grp_modp_montymul_fu_633_b = z_47_fu_252;
    end else begin
        grp_modp_montymul_fu_633_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_solve_NTRU_all_79_81_83_1_fu_739_depth = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_solve_NTRU_all_79_81_83_1_fu_739_depth = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_solve_NTRU_all_79_81_83_1_fu_739_depth = depth_fu_240;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_solve_NTRU_all_79_81_83_1_fu_739_depth = 32'd10;
    end else begin
        grp_solve_NTRU_all_79_81_83_1_fu_739_depth = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        vla1_address0 = zext_ln4528_1_fu_1783_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        vla1_address0 = zext_ln4524_fu_1728_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        vla1_address0 = zext_ln4514_2_fu_1659_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        vla1_address0 = zext_ln966_1_fu_1280_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        vla1_address0 = zext_ln2387_fu_1019_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        vla1_address0 = zext_ln2462_fu_859_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_address0 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_address0;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_address0 = grp_modp_NTT2_ext_1_fu_687_vla1_address0;
    end else begin
        vla1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        vla1_address1 = zext_ln4528_fu_1769_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        vla1_address1 = zext_ln4527_fu_1757_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        vla1_address1 = zext_ln4515_1_fu_1720_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        vla1_address1 = zext_ln4513_2_fu_1590_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        vla1_address1 = zext_ln4509_reg_2140;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        vla1_address1 = zext_ln967_fu_1293_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_address1 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_address1;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_address1 = grp_modp_NTT2_ext_1_fu_687_vla1_address1;
    end else begin
        vla1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state90) | ((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state80)))) begin
        vla1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_ce0 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_ce0 = grp_modp_NTT2_ext_1_fu_687_vla1_ce0;
    end else begin
        vla1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state69) | ((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state79)))) begin
        vla1_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_ce1 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_ce1;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_ce1 = grp_modp_NTT2_ext_1_fu_687_vla1_ce1;
    end else begin
        vla1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        vla1_d0 = w_47_fu_1645_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        vla1_d0 = x2_fu_268;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_d0 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_d0;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_d0 = grp_modp_NTT2_ext_1_fu_687_vla1_d0;
    end else begin
        vla1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        vla1_d1 = w_49_fu_1704_p2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        vla1_d1 = w_45_fu_1572_p2;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        vla1_d1 = w_43_fu_1412_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        vla1_d1 = x1_load_reg_2123;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_d1 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_d1;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_d1 = grp_modp_NTT2_ext_1_fu_687_vla1_d1;
    end else begin
        vla1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state80)))) begin
        vla1_we0 = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_we0 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_we0;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_we0 = grp_modp_NTT2_ext_1_fu_687_vla1_we0;
    end else begin
        vla1_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state69) | ((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state79)))) begin
        vla1_we1 = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        vla1_we1 = grp_solve_NTRU_all_79_81_83_1_fu_739_vla1_we1;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        vla1_we1 = grp_modp_NTT2_ext_1_fu_687_vla1_we1;
    end else begin
        vla1_we1 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln4455_fu_816_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln4455_fu_816_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else if (((grp_solve_NTRU_all_79_81_83_1_fu_739_ap_done == 1'b1) & (grp_solve_NTRU_all_79_81_83_1_fu_739_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if ((~((ap_predicate_op198_writeresp_state29 == 1'b1) & (gmem0_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln2462_fu_864_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln2466_fu_912_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln2462_1_fu_995_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((icmp_ln2466_1_fu_1062_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((tmp_160_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((icmp_ln962_fu_1233_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state60 : begin
            if (((icmp_ln4509_fu_1310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln4512_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            if (((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            if (((gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state82 : begin
            if (((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            if (((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((grp_modp_NTT2_ext_1_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            if (((icmp_ln4524_fu_1733_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state89))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            if (((icmp_ln4529_fu_1816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state91))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state92 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state93 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            if ((~((ap_predicate_op542_writeresp_state98 == 1'b1) & (gmem0_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state99 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_state100 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state100))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state105))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state106 : begin
            if (((gmem0_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state106))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end
        end
        ap_ST_fsm_state107 : begin
            if (((gmem0_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln2466_1_fu_1056_p2 = (w_51_fu_1050_p2 + 32'd127);

assign add_ln2466_fu_906_p2 = (w_50_fu_900_p2 + 32'd127);

assign add_ln2469_1_fu_1075_p2 = (zext_ln2462_1_reg_2023 + G_upper_read_reg_1882);

assign add_ln2469_2_fu_956_p2 = (trunc_ln2469_3_reg_1999 + trunc_ln2469_reg_1944);

assign add_ln2469_3_fu_1106_p2 = (trunc_ln2469_6_reg_2064 + trunc_ln2469_1_reg_1985);

assign add_ln2469_fu_925_p2 = (zext_ln2462_reg_1959 + F_upper_read_reg_1889);

assign add_ln4510_1_fu_1351_p2 = (trunc_ln4510_fu_1322_p1 + trunc_ln2469_1_reg_1985);

assign add_ln4510_fu_1326_p2 = (zext_ln4509_fu_1306_p1 + G_upper_read_reg_1882);

assign add_ln4513_1_fu_1526_p2 = (trunc_ln4513_1_fu_1523_p1 + trunc_ln4513_reg_2166);

assign add_ln4513_fu_1438_p2 = (zext_ln4512_fu_1422_p1 + f_read_reg_1875);

assign add_ln4514_1_fu_1595_p2 = (trunc_ln4513_1_fu_1523_p1 + trunc_ln4514_reg_2171);

assign add_ln4514_fu_1463_p2 = (zext_ln4512_fu_1422_p1 + g_read_reg_1868);

assign add_ln4515_1_fu_1600_p2 = (trunc_ln4513_1_fu_1523_p1 + trunc_ln2469_reg_1944);

assign add_ln4515_fu_1488_p2 = (zext_ln4512_fu_1422_p1 + F_upper_read_reg_1889);

assign and_ln2388_2_fu_1042_p3 = {{tmp_159_fu_1034_p3}, {31'd0}};

assign and_ln813_fu_1213_p2 = (xor_ln813_fu_1190_p2 & select_ln813_fu_1205_p3);

assign and_ln_fu_892_p3 = {{tmp_158_fu_884_p3}, {31'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state29 = ((ap_predicate_op198_writeresp_state29 == 1'b1) & (gmem0_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state98 = ((ap_predicate_op542_writeresp_state98 == 1'b1) & (gmem0_BVALID == 1'b0));
end

always @ (*) begin
    ap_predicate_op198_writeresp_state29 = ((tmp_73_reg_1923 == 1'd1) & (tmp_s_reg_1916 == 1'd1));
end

always @ (*) begin
    ap_predicate_op542_writeresp_state98 = ((icmp_ln4524_reg_2249 == 1'd0) & (icmp_ln2462_1_reg_2028 == 1'd1) & (icmp_ln2462_reg_1964 == 1'd1) & (tmp_74_reg_1933 == 1'd1) & (tmp_reg_1896 == 1'd1) & (tmp_73_reg_1923 == 1'd1) & (tmp_s_reg_1916 == 1'd1));
end

assign ap_return = ap_phi_mux_retval_5_phi_fu_616_p10;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign depth_3_fu_811_p2 = ($signed(depth_fu_240) + $signed(32'd4294967295));

assign grp_fu_777_p4 = {{tmp2_read_reg_1862[63:2]}};

assign grp_modp_NTT2_ext_1_fu_687_ap_start = grp_modp_NTT2_ext_1_fu_687_ap_start_reg;

assign grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start = grp_solve_NTRU_all_79_81_83_1_fu_739_ap_start_reg;

assign i_9_fu_1164_p0 = i_fu_256;

assign i_9_fu_1164_p2 = ($signed(i_9_fu_1164_p0) + $signed(6'd63));

assign icmp_ln2462_1_fu_995_p2 = ((u_103_fu_248 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln2462_fu_864_p2 = ((u_fu_244 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln2466_1_fu_1062_p2 = ((add_ln2466_1_fu_1056_p2 > 32'd254) ? 1'b1 : 1'b0);

assign icmp_ln2466_fu_912_p2 = ((add_ln2466_fu_906_p2 > 32'd254) ? 1'b1 : 1'b0);

assign icmp_ln4455_fu_816_p2 = ((depth_fu_240 > 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln4509_fu_1310_p2 = ((u_021_fu_272 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln4512_fu_1426_p2 = ((u_108_fu_276 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln4524_fu_1733_p2 = ((u_110_fu_280 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln4529_fu_1816_p2 = ((z_65_fu_1810_p2 == 32'd1916765260) ? 1'b1 : 1'b0);

assign icmp_ln962_fu_1233_p2 = ((u_105_fu_260 == 10'd512) ? 1'b1 : 1'b0);

assign lshr_ln4510_fu_1383_p2 = gmem0_addr_20_read_reg_2176 >> zext_ln4510_fu_1379_p1;

assign lshr_ln4513_fu_1543_p2 = gmem0_addr_21_read_reg_2216 >> zext_ln4513_fu_1539_p1;

assign lshr_ln4514_fu_1616_p2 = gmem0_addr_22_read_reg_2226 >> zext_ln4514_fu_1612_p1;

assign lshr_ln4515_fu_1675_p2 = gmem0_addr_23_read_reg_2241 >> zext_ln4515_fu_1671_p1;

assign lshr_ln813_fu_1196_p2 = 32'd2147473407 >> sext_ln808_reg_2091;

assign or_ln4515_fu_1711_p2 = (u_182_reg_2181 | 10'd512);

assign or_ln4528_fu_1774_p2 = (u_110_fu_280 | 10'd512);

assign select_ln635_15_fu_1564_p3 = ((tmp_162_fu_1556_p3[0:0] == 1'b1) ? 32'd2147473409 : 32'd0);

assign select_ln635_16_fu_1637_p3 = ((tmp_163_fu_1629_p3[0:0] == 1'b1) ? 32'd2147473409 : 32'd0);

assign select_ln635_17_fu_1696_p3 = ((tmp_164_fu_1688_p3[0:0] == 1'b1) ? 32'd2147473409 : 32'd0);

assign select_ln635_fu_1404_p3 = ((tmp_161_fu_1396_p3[0:0] == 1'b1) ? 32'd2147473409 : 32'd0);

assign select_ln697_fu_1802_p3 = ((tmp_165_fu_1794_p3[0:0] == 1'b1) ? 32'd2147473409 : 32'd0);

assign select_ln813_fu_1205_p3 = ((trunc_ln813_fu_1201_p1[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign sext_ln2469_1_fu_1089_p1 = $signed(trunc_ln2469_7_fu_1079_p4);

assign sext_ln2469_fu_939_p1 = $signed(trunc_ln2469_5_fu_929_p4);

assign sext_ln4432_fu_796_p1 = $signed(grp_fu_777_p4);

assign sext_ln4457_fu_1851_p1 = $signed(grp_fu_777_p4);

assign sext_ln4462_fu_826_p1 = $signed(grp_fu_777_p4);

assign sext_ln4466_fu_845_p1 = $signed(grp_fu_777_p4);

assign sext_ln4487_fu_1138_p1 = $signed(grp_fu_777_p4);

assign sext_ln4510_1_fu_1392_p1 = $signed(w_42_fu_1388_p1);

assign sext_ln4510_fu_1341_p1 = $signed(trunc_ln4510_2_fu_1331_p4);

assign sext_ln4513_1_fu_1552_p1 = $signed(w_44_fu_1548_p1);

assign sext_ln4513_fu_1453_p1 = $signed(trunc_ln4513_3_fu_1443_p4);

assign sext_ln4514_1_fu_1625_p1 = $signed(w_46_fu_1621_p1);

assign sext_ln4514_fu_1478_p1 = $signed(trunc_ln4514_2_fu_1468_p4);

assign sext_ln4515_1_fu_1684_p1 = $signed(w_48_fu_1680_p1);

assign sext_ln4515_2_fu_1716_p1 = $signed(or_ln4515_fu_1711_p2);

assign sext_ln4515_fu_1503_p1 = $signed(trunc_ln19_fu_1493_p4);

assign sext_ln4528_fu_1779_p1 = $signed(or_ln4528_fu_1774_p2);

assign sext_ln4530_fu_1826_p1 = $signed(grp_fu_777_p4);

assign sext_ln4534_fu_1840_p1 = $signed(grp_fu_777_p4);

assign sext_ln808_fu_1152_p0 = i_fu_256;

assign sext_ln808_fu_1152_p1 = sext_ln808_fu_1152_p0;

assign shl_ln2469_1_fu_970_p3 = {{add_ln2469_2_fu_956_p2}, {3'd0}};

assign shl_ln2469_2_fu_982_p2 = zext_ln2469_fu_953_p1 << zext_ln2469_2_fu_978_p1;

assign shl_ln2469_3_fu_1114_p2 = 4'd1 << zext_ln2469_4_fu_1110_p1;

assign shl_ln2469_4_fu_1120_p3 = {{add_ln2469_3_fu_1106_p2}, {3'd0}};

assign shl_ln2469_5_fu_1132_p2 = zext_ln2469_3_fu_1103_p1 << zext_ln2469_5_fu_1128_p1;

assign shl_ln2469_fu_964_p2 = 4'd1 << zext_ln2469_1_fu_960_p1;

assign shl_ln53_fu_1531_p3 = {{add_ln4513_1_fu_1526_p2}, {3'd0}};

assign shl_ln54_fu_1605_p3 = {{add_ln4514_1_reg_2231}, {3'd0}};

assign shl_ln55_fu_1664_p3 = {{add_ln4515_1_reg_2236}, {3'd0}};

assign shl_ln966_fu_1249_p2 = u_105_fu_260 << 10'd1;

assign shl_ln_fu_1372_p3 = {{add_ln4510_1_reg_2154}, {3'd0}};

assign sub_ln697_fu_1788_p2 = (a_assign_9_reg_662 - grp_modp_montymul_fu_633_ap_return);

assign tmp_158_fu_884_p3 = vla1_q0[32'd30];

assign tmp_159_fu_1034_p3 = vla1_q0[32'd30];

assign tmp_160_fu_1156_p1 = i_fu_256;

assign tmp_160_fu_1156_p3 = tmp_160_fu_1156_p1[32'd5];

assign tmp_161_fu_1396_p3 = lshr_ln4510_fu_1383_p2[32'd7];

assign tmp_162_fu_1556_p3 = lshr_ln4513_fu_1543_p2[32'd7];

assign tmp_163_fu_1629_p3 = lshr_ln4514_fu_1616_p2[32'd7];

assign tmp_164_fu_1688_p3 = lshr_ln4515_fu_1675_p2[32'd7];

assign tmp_165_fu_1794_p3 = sub_ln697_fu_1788_p2[32'd31];

assign trunc_ln19_fu_1493_p4 = {{add_ln4515_fu_1488_p2[63:2]}};

assign trunc_ln2465_fu_1007_p1 = u_103_fu_248[8:0];

assign trunc_ln2469_1_fu_876_p1 = G_upper_read_reg_1882[1:0];

assign trunc_ln2469_2_fu_918_p1 = vla1_q0[7:0];

assign trunc_ln2469_3_fu_922_p1 = u_fu_244[1:0];

assign trunc_ln2469_4_fu_1068_p1 = vla1_q0[7:0];

assign trunc_ln2469_5_fu_929_p4 = {{add_ln2469_fu_925_p2[63:2]}};

assign trunc_ln2469_6_fu_1072_p1 = u_103_fu_248[1:0];

assign trunc_ln2469_7_fu_1079_p4 = {{add_ln2469_1_fu_1075_p2[63:2]}};

assign trunc_ln2469_fu_837_p1 = F_upper_read_reg_1889[1:0];

assign trunc_ln4510_2_fu_1331_p4 = {{add_ln4510_fu_1326_p2[63:2]}};

assign trunc_ln4510_fu_1322_p1 = u_021_fu_272[1:0];

assign trunc_ln4513_1_fu_1523_p1 = u_182_reg_2181[1:0];

assign trunc_ln4513_3_fu_1443_p4 = {{add_ln4513_fu_1438_p2[63:2]}};

assign trunc_ln4513_4_fu_1579_p1 = u_182_reg_2181[8:0];

assign trunc_ln4513_fu_1361_p1 = f_read_reg_1875[1:0];

assign trunc_ln4514_2_fu_1468_p4 = {{add_ln4514_fu_1463_p2[63:2]}};

assign trunc_ln4514_fu_1364_p1 = g_read_reg_1868[1:0];

assign trunc_ln4527_fu_1745_p1 = u_110_fu_280[8:0];

assign trunc_ln813_fu_1201_p1 = lshr_ln813_fu_1196_p2[0:0];

assign u_175_fu_870_p2 = (u_fu_244 + 10'd1);

assign u_177_fu_1001_p2 = (u_103_fu_248 + 10'd1);

assign u_179_fu_1239_p2 = (u_105_fu_260 + 10'd1);

assign u_181_fu_1316_p2 = (u_021_fu_272 + 10'd1);

assign u_183_fu_1432_p2 = (u_108_fu_276 + 10'd1);

assign u_185_fu_1739_p2 = (u_110_fu_280 + 10'd1);

assign w_42_fu_1388_p1 = lshr_ln4510_fu_1383_p2[7:0];

assign w_43_fu_1412_p2 = ($signed(select_ln635_fu_1404_p3) + $signed(sext_ln4510_1_fu_1392_p1));

assign w_44_fu_1548_p1 = lshr_ln4513_fu_1543_p2[7:0];

assign w_45_fu_1572_p2 = ($signed(select_ln635_15_fu_1564_p3) + $signed(sext_ln4513_1_fu_1552_p1));

assign w_46_fu_1621_p1 = lshr_ln4514_fu_1616_p2[7:0];

assign w_47_fu_1645_p2 = ($signed(select_ln635_16_fu_1637_p3) + $signed(sext_ln4514_1_fu_1625_p1));

assign w_48_fu_1680_p1 = lshr_ln4515_fu_1675_p2[7:0];

assign w_49_fu_1704_p2 = ($signed(select_ln635_17_fu_1696_p3) + $signed(sext_ln4515_1_fu_1684_p1));

assign w_50_fu_900_p2 = (vla1_q0 | and_ln_fu_892_p3);

assign w_51_fu_1050_p2 = (vla1_q0 | and_ln2388_2_fu_1042_p3);

assign xor_ln813_fu_1190_p2 = (reg_652 ^ grp_modp_montymul_fu_633_ap_return);

assign z_64_fu_1219_p2 = (reg_652 ^ and_ln813_fu_1213_p2);

assign z_65_fu_1810_p2 = (select_ln697_fu_1802_p3 + sub_ln697_fu_1788_p2);

assign zext_ln2387_fu_1019_p1 = zext_ln_fu_1011_p3;

assign zext_ln2462_1_fu_991_p1 = u_103_fu_248;

assign zext_ln2462_fu_859_p1 = u_fu_244;

assign zext_ln2469_1_fu_960_p1 = add_ln2469_2_fu_956_p2;

assign zext_ln2469_2_fu_978_p1 = shl_ln2469_1_fu_970_p3;

assign zext_ln2469_3_fu_1103_p1 = trunc_ln2469_4_reg_2059;

assign zext_ln2469_4_fu_1110_p1 = add_ln2469_3_fu_1106_p2;

assign zext_ln2469_5_fu_1128_p1 = shl_ln2469_4_fu_1120_p3;

assign zext_ln2469_fu_953_p1 = trunc_ln2469_2_reg_1994;

assign zext_ln41_fu_1749_p3 = {{1'd1}, {trunc_ln4527_fu_1745_p1}};

assign zext_ln42_fu_1762_p3 = {{2'd2}, {trunc_ln4527_reg_2258}};

assign zext_ln4509_fu_1306_p1 = u_021_fu_272;

assign zext_ln4510_fu_1379_p1 = shl_ln_fu_1372_p3;

assign zext_ln4512_fu_1422_p1 = u_108_fu_276;

assign zext_ln4513_1_fu_1582_p3 = {{1'd1}, {trunc_ln4513_4_fu_1579_p1}};

assign zext_ln4513_2_fu_1590_p1 = zext_ln4513_1_fu_1582_p3;

assign zext_ln4513_fu_1539_p1 = shl_ln53_fu_1531_p3;

assign zext_ln4514_1_fu_1652_p3 = {{2'd2}, {trunc_ln4513_4_reg_2221}};

assign zext_ln4514_2_fu_1659_p1 = zext_ln4514_1_fu_1652_p3;

assign zext_ln4514_fu_1612_p1 = shl_ln54_fu_1605_p3;

assign zext_ln4515_1_fu_1720_p1 = $unsigned(sext_ln4515_2_fu_1716_p1);

assign zext_ln4515_fu_1671_p1 = shl_ln55_fu_1664_p3;

assign zext_ln4524_fu_1728_p1 = u_110_fu_280;

assign zext_ln4527_fu_1757_p1 = zext_ln41_fu_1749_p3;

assign zext_ln4528_1_fu_1783_p1 = $unsigned(sext_ln4528_fu_1779_p1);

assign zext_ln4528_fu_1769_p1 = zext_ln42_fu_1762_p3;

assign zext_ln966_1_fu_1280_p1 = REV10_q0;

assign zext_ln966_fu_1255_p1 = shl_ln966_fu_1249_p2;

assign zext_ln967_cast_fu_1285_p3 = {{2'd2}, {REV10_q0}};

assign zext_ln967_fu_1293_p1 = zext_ln967_cast_fu_1285_p3;

assign zext_ln_fu_1011_p3 = {{1'd1}, {trunc_ln2465_fu_1007_p1}};

always @ (posedge ap_clk) begin
    zext_ln2462_reg_1959[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln2462_1_reg_2023[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln4509_reg_2140[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //solve_NTRU
