// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module solve_NTRU_make_fg_80_82_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vla1_address0,
        vla1_ce0,
        vla1_we0,
        vla1_d0,
        vla1_q0,
        vla1_address1,
        vla1_ce1,
        vla1_we1,
        vla1_d1,
        vla1_q1,
        data,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        f,
        g,
        depth,
        out_ntt
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] vla1_address0;
output   vla1_ce0;
output  [3:0] vla1_we0;
output  [31:0] vla1_d0;
input  [31:0] vla1_q0;
output  [11:0] vla1_address1;
output   vla1_ce1;
output  [3:0] vla1_we1;
output  [31:0] vla1_d1;
input  [31:0] vla1_q1;
input  [63:0] data;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [63:0] f;
input  [63:0] g;
input  [31:0] depth;
input  [0:0] out_ntt;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] vla1_address0;
reg vla1_ce0;
reg[3:0] vla1_we0;
reg[31:0] vla1_d0;
reg[11:0] vla1_address1;
reg vla1_ce1;
reg[3:0] vla1_we1;
reg[31:0] vla1_d1;
reg m_axi_gmem0_ARVALID;
reg[63:0] m_axi_gmem0_ARADDR;
reg m_axi_gmem0_RREADY;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] REV10_address0;
reg    REV10_ce0;
wire   [9:0] REV10_q0;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_modp_montymul_fu_289_ap_return;
reg   [31:0] reg_323;
wire    ap_CS_fsm_state15;
wire   [0:0] tmp_187_fu_669_p3;
wire    ap_CS_fsm_state17;
wire   [13:0] empty_fu_329_p1;
reg   [13:0] empty_reg_896;
wire   [13:0] gt_fu_333_p2;
reg   [13:0] gt_reg_903;
wire   [63:0] zext_ln3086_fu_339_p1;
reg   [63:0] zext_ln3086_reg_908;
wire   [1:0] trunc_ln3086_fu_343_p1;
reg   [1:0] trunc_ln3086_reg_913;
wire   [1:0] trunc_ln3087_fu_347_p1;
reg   [1:0] trunc_ln3087_reg_918;
reg   [63:0] gmem0_addr_reg_926;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln3085_fu_363_p2;
wire   [1:0] add_ln3086_2_fu_404_p2;
reg   [1:0] add_ln3086_2_reg_932;
wire   [8:0] trunc_ln3086_4_fu_409_p1;
reg   [8:0] trunc_ln3086_4_reg_937;
reg   [63:0] gmem0_addr_26_reg_942;
wire   [1:0] add_ln3087_3_fu_438_p2;
reg   [1:0] add_ln3087_3_reg_948;
wire   [0:0] and_ln3090_fu_453_p2;
reg   [0:0] and_ln3090_reg_953;
reg   [11:0] lshr_ln3086_2_reg_973;
wire    ap_CS_fsm_state6;
reg   [11:0] lshr_ln3087_2_reg_978;
reg   [31:0] gmem0_addr_read_reg_983;
reg   [31:0] gmem0_addr_26_read_reg_988;
wire   [3:0] trunc_ln3107_fu_616_p1;
reg   [3:0] trunc_ln3107_reg_993;
wire    ap_CS_fsm_state13;
wire   [31:0] sub_ln3106_fu_632_p2;
reg   [31:0] sub_ln3106_reg_1001;
wire   [0:0] icmp_ln3107_fu_621_p2;
wire   [0:0] icmp_ln3107_1_fu_639_p2;
reg   [0:0] icmp_ln3107_1_reg_1006;
wire   [0:0] or_ln3107_fu_651_p2;
reg   [0:0] or_ln3107_reg_1011;
wire  signed [31:0] sext_ln808_fu_665_p1;
reg  signed [31:0] sext_ln808_reg_1016;
wire   [13:0] gm_fu_743_p2;
reg   [13:0] gm_reg_1045;
wire   [63:0] zext_ln962_fu_748_p1;
reg   [63:0] zext_ln962_reg_1050;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln962_fu_755_p2;
reg   [11:0] lshr_ln56_reg_1063;
wire    ap_CS_fsm_state19;
wire    grp_make_fg_step_1_fu_268_ap_start;
wire    grp_make_fg_step_1_fu_268_ap_done;
wire    grp_make_fg_step_1_fu_268_ap_idle;
wire    grp_make_fg_step_1_fu_268_ap_ready;
wire   [11:0] grp_make_fg_step_1_fu_268_vla1_address0;
wire    grp_make_fg_step_1_fu_268_vla1_ce0;
wire   [3:0] grp_make_fg_step_1_fu_268_vla1_we0;
wire   [31:0] grp_make_fg_step_1_fu_268_vla1_d0;
wire   [11:0] grp_make_fg_step_1_fu_268_vla1_address1;
wire    grp_make_fg_step_1_fu_268_vla1_ce1;
wire   [3:0] grp_make_fg_step_1_fu_268_vla1_we1;
wire   [31:0] grp_make_fg_step_1_fu_268_vla1_d1;
wire   [31:0] grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din1;
wire   [31:0] grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din2;
wire   [31:0] grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din3;
wire   [31:0] grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din4;
wire    grp_modp_montymul_fu_289_ap_ready;
reg   [31:0] grp_modp_montymul_fu_289_a;
reg   [31:0] grp_modp_montymul_fu_289_b;
reg   [31:0] grp_modp_montymul_fu_289_p;
reg   [31:0] grp_modp_montymul_fu_289_p0i;
wire    grp_modp_NTT2_ext_1_fu_302_ap_start;
wire    grp_modp_NTT2_ext_1_fu_302_ap_done;
wire    grp_modp_NTT2_ext_1_fu_302_ap_idle;
wire    grp_modp_NTT2_ext_1_fu_302_ap_ready;
wire   [11:0] grp_modp_NTT2_ext_1_fu_302_vla1_address0;
wire    grp_modp_NTT2_ext_1_fu_302_vla1_ce0;
wire   [3:0] grp_modp_NTT2_ext_1_fu_302_vla1_we0;
wire   [31:0] grp_modp_NTT2_ext_1_fu_302_vla1_d0;
wire   [11:0] grp_modp_NTT2_ext_1_fu_302_vla1_address1;
wire    grp_modp_NTT2_ext_1_fu_302_vla1_ce1;
wire   [3:0] grp_modp_NTT2_ext_1_fu_302_vla1_we1;
wire   [31:0] grp_modp_NTT2_ext_1_fu_302_vla1_d1;
reg   [63:0] grp_modp_NTT2_ext_1_fu_302_a;
reg    grp_make_fg_step_1_fu_268_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state20;
reg    grp_modp_NTT2_ext_1_fu_302_ap_start_reg;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln3086_3_fu_561_p1;
wire   [63:0] zext_ln3087_1_fu_612_p1;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln966_fu_773_p1;
wire   [63:0] zext_ln967_3_fu_815_p1;
wire   [63:0] zext_ln968_fu_851_p1;
wire  signed [63:0] sext_ln3086_fu_394_p1;
wire  signed [63:0] sext_ln3087_fu_428_p1;
reg   [9:0] u_03_fu_144;
wire   [9:0] u_209_fu_369_p2;
reg   [31:0] d_fu_148;
wire   [31:0] z_119_fu_732_p2;
wire   [31:0] d_3_fu_626_p2;
reg   [5:0] i_fu_152;
wire   [5:0] i_17_fu_677_p2;
reg   [9:0] u_132_fu_156;
wire   [9:0] u_211_fu_761_p2;
reg   [31:0] x1_fu_160;
reg   [31:0] x2_fu_164;
wire   [31:0] w_64_fu_554_p2;
wire   [31:0] w_66_fu_605_p2;
wire   [63:0] zext_ln3085_fu_359_p1;
wire   [63:0] add_ln3086_fu_379_p2;
wire   [61:0] trunc_ln3086_3_fu_384_p4;
wire   [1:0] trunc_ln3086_1_fu_375_p1;
wire   [63:0] add_ln3087_1_fu_413_p2;
wire   [61:0] trunc_ln3087_2_fu_418_p4;
wire   [0:0] icmp_ln3090_fu_448_p2;
wire   [10:0] shl_ln3086_1_fu_473_p3;
wire   [13:0] zext_ln3086_2_fu_480_p1;
wire   [13:0] add_ln3086_1_fu_484_p2;
wire   [13:0] add_ln3087_2_fu_499_p2;
wire   [4:0] shl_ln_fu_514_p3;
wire   [31:0] zext_ln3086_1_fu_521_p1;
wire   [31:0] lshr_ln3086_fu_525_p2;
wire   [7:0] w_fu_530_p1;
wire   [0:0] tmp_fu_538_p3;
wire   [31:0] select_ln635_fu_546_p3;
wire  signed [31:0] sext_ln3086_1_fu_534_p1;
wire   [4:0] shl_ln105_fu_565_p3;
wire   [31:0] zext_ln3087_fu_572_p1;
wire   [31:0] lshr_ln3087_fu_576_p2;
wire   [7:0] w_65_fu_581_p1;
wire   [0:0] tmp_186_fu_589_p3;
wire   [31:0] select_ln635_18_fu_597_p3;
wire  signed [31:0] sext_ln3087_1_fu_585_p1;
wire   [0:0] icmp_ln3107_2_fu_646_p2;
wire  signed [5:0] sext_ln808_fu_665_p0;
wire  signed [5:0] tmp_187_fu_669_p1;
wire  signed [5:0] i_17_fu_677_p0;
wire   [31:0] lshr_ln813_fu_709_p2;
wire   [0:0] trunc_ln813_fu_714_p1;
wire   [31:0] xor_ln813_fu_703_p2;
wire   [31:0] select_ln813_fu_718_p3;
wire   [31:0] and_ln813_fu_726_p2;
wire   [9:0] shl_ln966_fu_767_p2;
wire   [11:0] shl_ln106_fu_788_p3;
wire   [13:0] zext_ln967_fu_796_p1;
wire   [13:0] add_ln967_1_fu_800_p2;
wire   [11:0] lshr_ln_fu_805_p4;
wire   [13:0] add_ln968_fu_820_p2;
wire   [13:0] add_ln968_2_fu_826_p2;
reg    ap_block_state23_on_subcall_done;
reg   [22:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 grp_make_fg_step_1_fu_268_ap_start_reg = 1'b0;
#0 grp_modp_NTT2_ext_1_fu_302_ap_start_reg = 1'b0;
end

solve_NTRU_modp_mkgm2_1_REV10_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
REV10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(REV10_address0),
    .ce0(REV10_ce0),
    .q0(REV10_q0)
);

solve_NTRU_make_fg_step_1 grp_make_fg_step_1_fu_268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_make_fg_step_1_fu_268_ap_start),
    .ap_done(grp_make_fg_step_1_fu_268_ap_done),
    .ap_idle(grp_make_fg_step_1_fu_268_ap_idle),
    .ap_ready(grp_make_fg_step_1_fu_268_ap_ready),
    .vla1_address0(grp_make_fg_step_1_fu_268_vla1_address0),
    .vla1_ce0(grp_make_fg_step_1_fu_268_vla1_ce0),
    .vla1_we0(grp_make_fg_step_1_fu_268_vla1_we0),
    .vla1_d0(grp_make_fg_step_1_fu_268_vla1_d0),
    .vla1_q0(vla1_q0),
    .vla1_address1(grp_make_fg_step_1_fu_268_vla1_address1),
    .vla1_ce1(grp_make_fg_step_1_fu_268_vla1_ce1),
    .vla1_we1(grp_make_fg_step_1_fu_268_vla1_we1),
    .vla1_d1(grp_make_fg_step_1_fu_268_vla1_d1),
    .vla1_q1(vla1_q1),
    .data(data),
    .logn(sub_ln3106_reg_1001),
    .depth(trunc_ln3107_reg_993),
    .in_ntt(icmp_ln3107_1_reg_1006),
    .out_ntt(or_ln3107_reg_1011),
    .grp_modp_montymul_fu_289_p_din1(grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din1),
    .grp_modp_montymul_fu_289_p_din2(grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din2),
    .grp_modp_montymul_fu_289_p_din3(grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din3),
    .grp_modp_montymul_fu_289_p_din4(grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din4),
    .grp_modp_montymul_fu_289_p_dout0(grp_modp_montymul_fu_289_ap_return),
    .grp_modp_montymul_fu_289_p_ready(grp_modp_montymul_fu_289_ap_ready)
);

solve_NTRU_modp_montymul grp_modp_montymul_fu_289(
    .ap_ready(grp_modp_montymul_fu_289_ap_ready),
    .a(grp_modp_montymul_fu_289_a),
    .b(grp_modp_montymul_fu_289_b),
    .p(grp_modp_montymul_fu_289_p),
    .p0i(grp_modp_montymul_fu_289_p0i),
    .ap_return(grp_modp_montymul_fu_289_ap_return)
);

solve_NTRU_modp_NTT2_ext_1 grp_modp_NTT2_ext_1_fu_302(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_modp_NTT2_ext_1_fu_302_ap_start),
    .ap_done(grp_modp_NTT2_ext_1_fu_302_ap_done),
    .ap_idle(grp_modp_NTT2_ext_1_fu_302_ap_idle),
    .ap_ready(grp_modp_NTT2_ext_1_fu_302_ap_ready),
    .vla1_address0(grp_modp_NTT2_ext_1_fu_302_vla1_address0),
    .vla1_ce0(grp_modp_NTT2_ext_1_fu_302_vla1_ce0),
    .vla1_we0(grp_modp_NTT2_ext_1_fu_302_vla1_we0),
    .vla1_d0(grp_modp_NTT2_ext_1_fu_302_vla1_d0),
    .vla1_q0(vla1_q0),
    .vla1_address1(grp_modp_NTT2_ext_1_fu_302_vla1_address1),
    .vla1_ce1(grp_modp_NTT2_ext_1_fu_302_vla1_ce1),
    .vla1_we1(grp_modp_NTT2_ext_1_fu_302_vla1_we1),
    .vla1_d1(grp_modp_NTT2_ext_1_fu_302_vla1_d1),
    .vla1_q1(vla1_q1),
    .a(grp_modp_NTT2_ext_1_fu_302_a),
    .stride(64'd1),
    .gm(zext_ln962_reg_1050),
    .logn(32'd9),
    .p(32'd2147473409),
    .p0i(32'd2042615807)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_make_fg_step_1_fu_268_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln3107_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_make_fg_step_1_fu_268_ap_start_reg <= 1'b1;
        end else if ((grp_make_fg_step_1_fu_268_ap_ready == 1'b1)) begin
            grp_make_fg_step_1_fu_268_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_modp_NTT2_ext_1_fu_302_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state22) | ((icmp_ln962_fu_755_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
            grp_modp_NTT2_ext_1_fu_302_ap_start_reg <= 1'b1;
        end else if ((grp_modp_NTT2_ext_1_fu_302_ap_ready == 1'b1)) begin
            grp_modp_NTT2_ext_1_fu_302_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd1) & (1'd1 == and_ln3090_fu_453_p2))) begin
        d_fu_148 <= 32'd10239;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd1) & (1'd0 == and_ln3090_fu_453_p2))) begin
        d_fu_148 <= 32'd0;
    end else if (((icmp_ln3107_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        d_fu_148 <= d_3_fu_626_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        d_fu_148 <= z_119_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd1) & (1'd1 == and_ln3090_fu_453_p2))) begin
        i_fu_152 <= 6'd30;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd0))) begin
        i_fu_152 <= i_17_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        u_03_fu_144 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd0))) begin
        u_03_fu_144 <= u_209_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1))) begin
        u_132_fu_156 <= 10'd0;
    end else if (((icmp_ln962_fu_755_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        u_132_fu_156 <= u_211_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1))) begin
        x1_fu_160 <= 32'd10239;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x1_fu_160 <= grp_modp_montymul_fu_289_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1))) begin
        x2_fu_164 <= 32'd10239;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        x2_fu_164 <= grp_modp_montymul_fu_289_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd0))) begin
        add_ln3086_2_reg_932 <= add_ln3086_2_fu_404_p2;
        add_ln3087_3_reg_948 <= add_ln3087_3_fu_438_p2;
        gmem0_addr_26_reg_942 <= sext_ln3087_fu_428_p1;
        gmem0_addr_reg_926 <= sext_ln3086_fu_394_p1;
        trunc_ln3086_4_reg_937 <= trunc_ln3086_4_fu_409_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd1))) begin
        and_ln3090_reg_953 <= and_ln3090_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_896 <= empty_fu_329_p1;
        gt_reg_903 <= gt_fu_333_p2;
        trunc_ln3086_reg_913 <= trunc_ln3086_fu_343_p1;
        trunc_ln3087_reg_918 <= trunc_ln3087_fu_347_p1;
        zext_ln3086_reg_908[13 : 0] <= zext_ln3086_fu_339_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        gm_reg_1045 <= gm_fu_743_p2;
        zext_ln962_reg_1050[13 : 0] <= zext_ln962_fu_748_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        gmem0_addr_26_read_reg_988 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        gmem0_addr_read_reg_983 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3107_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        icmp_ln3107_1_reg_1006 <= icmp_ln3107_1_fu_639_p2;
        or_ln3107_reg_1011 <= or_ln3107_fu_651_p2;
        sub_ln3106_reg_1001 <= sub_ln3106_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        lshr_ln3086_2_reg_973 <= {{add_ln3086_1_fu_484_p2[13:2]}};
        lshr_ln3087_2_reg_978 <= {{add_ln3087_2_fu_499_p2[13:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        lshr_ln56_reg_1063 <= {{add_ln968_2_fu_826_p2[13:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd0)))) begin
        reg_323 <= grp_modp_montymul_fu_289_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sext_ln808_reg_1016 <= sext_ln808_fu_665_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln3107_reg_993 <= trunc_ln3107_fu_616_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        REV10_address0 = zext_ln966_fu_773_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        REV10_address0 = 10'd0;
    end else begin
        REV10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        REV10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        REV10_ce0 = 1'b0;
    end else begin
        REV10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem0_RVALID == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem0_RVALID == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_make_fg_step_1_fu_268_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((grp_modp_NTT2_ext_1_fu_302_ap_done == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state23_on_subcall_done)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b0 == ap_block_state23_on_subcall_done) & (1'b1 == ap_CS_fsm_state23)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state23_on_subcall_done) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953))) begin
        grp_modp_NTT2_ext_1_fu_302_a = zext_ln3086_reg_908;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_modp_NTT2_ext_1_fu_302_a = data;
    end else begin
        grp_modp_NTT2_ext_1_fu_302_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_modp_montymul_fu_289_a = grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_modp_montymul_fu_289_a = x2_fu_164;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_modp_montymul_fu_289_a = x1_fu_160;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_modp_montymul_fu_289_a = 32'd104837121;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_modp_montymul_fu_289_a = reg_323;
    end else if ((((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd0)))) begin
        grp_modp_montymul_fu_289_a = d_fu_148;
    end else begin
        grp_modp_montymul_fu_289_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_modp_montymul_fu_289_b = grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din2;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_modp_montymul_fu_289_b = reg_323;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_modp_montymul_fu_289_b = 32'd1685737800;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1))) begin
        grp_modp_montymul_fu_289_b = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd0))) begin
        grp_modp_montymul_fu_289_b = d_fu_148;
    end else begin
        grp_modp_montymul_fu_289_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_modp_montymul_fu_289_p = grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din3;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd0)))) begin
        grp_modp_montymul_fu_289_p = 32'd2147473409;
    end else begin
        grp_modp_montymul_fu_289_p = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_modp_montymul_fu_289_p0i = grp_make_fg_step_1_fu_268_grp_modp_montymul_fu_289_p_din4;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd0)))) begin
        grp_modp_montymul_fu_289_p0i = 32'd2042615807;
    end else begin
        grp_modp_montymul_fu_289_p0i = 'bx;
    end
end

always @ (*) begin
    if ((m_axi_gmem0_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            m_axi_gmem0_ARADDR = gmem0_addr_26_reg_942;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            m_axi_gmem0_ARADDR = gmem0_addr_reg_926;
        end else begin
            m_axi_gmem0_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((m_axi_gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_gmem0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((m_axi_gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        vla1_address0 = zext_ln968_fu_851_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_address0 = zext_ln967_3_fu_815_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla1_address0 = zext_ln3087_1_fu_612_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla1_address0 = zext_ln3086_3_fu_561_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_address0 = grp_modp_NTT2_ext_1_fu_302_vla1_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_address0 = grp_make_fg_step_1_fu_268_vla1_address0;
    end else begin
        vla1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_address1 = grp_modp_NTT2_ext_1_fu_302_vla1_address1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_address1 = grp_make_fg_step_1_fu_268_vla1_address1;
    end else begin
        vla1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | ((m_axi_gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        vla1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_ce0 = grp_modp_NTT2_ext_1_fu_302_vla1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_ce0 = grp_make_fg_step_1_fu_268_vla1_ce0;
    end else begin
        vla1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_ce1 = grp_modp_NTT2_ext_1_fu_302_vla1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_ce1 = grp_make_fg_step_1_fu_268_vla1_ce1;
    end else begin
        vla1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        vla1_d0 = x2_fu_164;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_d0 = x1_fu_160;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla1_d0 = w_66_fu_605_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla1_d0 = w_64_fu_554_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_d0 = grp_modp_NTT2_ext_1_fu_302_vla1_d0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_d0 = grp_make_fg_step_1_fu_268_vla1_d0;
    end else begin
        vla1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_d1 = grp_modp_NTT2_ext_1_fu_302_vla1_d1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_d1 = grp_make_fg_step_1_fu_268_vla1_d1;
    end else begin
        vla1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | ((m_axi_gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        vla1_we0 = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_we0 = grp_modp_NTT2_ext_1_fu_302_vla1_we0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_we0 = grp_make_fg_step_1_fu_268_vla1_we0;
    end else begin
        vla1_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (1'd1 == and_ln3090_reg_953)))) begin
        vla1_we1 = grp_modp_NTT2_ext_1_fu_302_vla1_we1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla1_we1 = grp_make_fg_step_1_fu_268_vla1_we1;
    end else begin
        vla1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd1) & (1'd1 == and_ln3090_fu_453_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln3085_fu_363_p2 == 1'd1) & (1'd0 == and_ln3090_fu_453_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((m_axi_gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((m_axi_gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((m_axi_gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((m_axi_gmem0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln3107_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_make_fg_step_1_fu_268_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (tmp_187_fu_669_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln962_fu_755_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_modp_NTT2_ext_1_fu_302_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b0 == ap_block_state23_on_subcall_done) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln3086_1_fu_484_p2 = (zext_ln3086_2_fu_480_p1 + empty_reg_896);

assign add_ln3086_2_fu_404_p2 = (trunc_ln3086_1_fu_375_p1 + trunc_ln3086_reg_913);

assign add_ln3086_fu_379_p2 = (zext_ln3085_fu_359_p1 + f);

assign add_ln3087_1_fu_413_p2 = (zext_ln3085_fu_359_p1 + g);

assign add_ln3087_2_fu_499_p2 = (zext_ln3086_2_fu_480_p1 + gt_reg_903);

assign add_ln3087_3_fu_438_p2 = (trunc_ln3086_1_fu_375_p1 + trunc_ln3087_reg_918);

assign add_ln967_1_fu_800_p2 = (zext_ln967_fu_796_p1 + gm_reg_1045);

assign add_ln968_2_fu_826_p2 = (add_ln968_fu_820_p2 + empty_reg_896);

assign add_ln968_fu_820_p2 = (zext_ln967_fu_796_p1 + 14'd6144);

assign and_ln3090_fu_453_p2 = (out_ntt & icmp_ln3090_fu_448_p2);

assign and_ln813_fu_726_p2 = (xor_ln813_fu_703_p2 & select_ln813_fu_718_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state23_on_subcall_done = ((grp_modp_NTT2_ext_1_fu_302_ap_done == 1'b0) & (1'd1 == and_ln3090_reg_953));
end

assign d_3_fu_626_p2 = (d_fu_148 + 32'd1);

assign empty_fu_329_p1 = data[13:0];

assign gm_fu_743_p2 = (empty_reg_896 + 14'd4096);

assign grp_make_fg_step_1_fu_268_ap_start = grp_make_fg_step_1_fu_268_ap_start_reg;

assign grp_modp_NTT2_ext_1_fu_302_ap_start = grp_modp_NTT2_ext_1_fu_302_ap_start_reg;

assign gt_fu_333_p2 = (empty_fu_329_p1 + 14'd2048);

assign i_17_fu_677_p0 = i_fu_152;

assign i_17_fu_677_p2 = ($signed(i_17_fu_677_p0) + $signed(6'd63));

assign icmp_ln3085_fu_363_p2 = ((u_03_fu_144 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln3090_fu_448_p2 = ((depth == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln3107_1_fu_639_p2 = ((d_fu_148 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln3107_2_fu_646_p2 = ((d_3_fu_626_p2 < depth) ? 1'b1 : 1'b0);

assign icmp_ln3107_fu_621_p2 = ((d_fu_148 == depth) ? 1'b1 : 1'b0);

assign icmp_ln962_fu_755_p2 = ((u_132_fu_156 == 10'd512) ? 1'b1 : 1'b0);

assign lshr_ln3086_fu_525_p2 = gmem0_addr_read_reg_983 >> zext_ln3086_1_fu_521_p1;

assign lshr_ln3087_fu_576_p2 = gmem0_addr_26_read_reg_988 >> zext_ln3087_fu_572_p1;

assign lshr_ln813_fu_709_p2 = 32'd2147473407 >> sext_ln808_reg_1016;

assign lshr_ln_fu_805_p4 = {{add_ln967_1_fu_800_p2[13:2]}};

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd1;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 32'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign or_ln3107_fu_651_p2 = (out_ntt | icmp_ln3107_2_fu_646_p2);

assign select_ln635_18_fu_597_p3 = ((tmp_186_fu_589_p3[0:0] == 1'b1) ? 32'd2147473409 : 32'd0);

assign select_ln635_fu_546_p3 = ((tmp_fu_538_p3[0:0] == 1'b1) ? 32'd2147473409 : 32'd0);

assign select_ln813_fu_718_p3 = ((trunc_ln813_fu_714_p1[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign sext_ln3086_1_fu_534_p1 = $signed(w_fu_530_p1);

assign sext_ln3086_fu_394_p1 = $signed(trunc_ln3086_3_fu_384_p4);

assign sext_ln3087_1_fu_585_p1 = $signed(w_65_fu_581_p1);

assign sext_ln3087_fu_428_p1 = $signed(trunc_ln3087_2_fu_418_p4);

assign sext_ln808_fu_665_p0 = i_fu_152;

assign sext_ln808_fu_665_p1 = sext_ln808_fu_665_p0;

assign shl_ln105_fu_565_p3 = {{add_ln3087_3_reg_948}, {3'd0}};

assign shl_ln106_fu_788_p3 = {{REV10_q0}, {2'd0}};

assign shl_ln3086_1_fu_473_p3 = {{trunc_ln3086_4_reg_937}, {2'd0}};

assign shl_ln966_fu_767_p2 = u_132_fu_156 << 10'd1;

assign shl_ln_fu_514_p3 = {{add_ln3086_2_reg_932}, {3'd0}};

assign sub_ln3106_fu_632_p2 = (32'd9 - d_fu_148);

assign tmp_186_fu_589_p3 = lshr_ln3087_fu_576_p2[32'd7];

assign tmp_187_fu_669_p1 = i_fu_152;

assign tmp_187_fu_669_p3 = tmp_187_fu_669_p1[32'd5];

assign tmp_fu_538_p3 = lshr_ln3086_fu_525_p2[32'd7];

assign trunc_ln3086_1_fu_375_p1 = u_03_fu_144[1:0];

assign trunc_ln3086_3_fu_384_p4 = {{add_ln3086_fu_379_p2[63:2]}};

assign trunc_ln3086_4_fu_409_p1 = u_03_fu_144[8:0];

assign trunc_ln3086_fu_343_p1 = f[1:0];

assign trunc_ln3087_2_fu_418_p4 = {{add_ln3087_1_fu_413_p2[63:2]}};

assign trunc_ln3087_fu_347_p1 = g[1:0];

assign trunc_ln3107_fu_616_p1 = d_fu_148[3:0];

assign trunc_ln813_fu_714_p1 = lshr_ln813_fu_709_p2[0:0];

assign u_209_fu_369_p2 = (u_03_fu_144 + 10'd1);

assign u_211_fu_761_p2 = (u_132_fu_156 + 10'd1);

assign w_64_fu_554_p2 = ($signed(select_ln635_fu_546_p3) + $signed(sext_ln3086_1_fu_534_p1));

assign w_65_fu_581_p1 = lshr_ln3087_fu_576_p2[7:0];

assign w_66_fu_605_p2 = ($signed(select_ln635_18_fu_597_p3) + $signed(sext_ln3087_1_fu_585_p1));

assign w_fu_530_p1 = lshr_ln3086_fu_525_p2[7:0];

assign xor_ln813_fu_703_p2 = (reg_323 ^ grp_modp_montymul_fu_289_ap_return);

assign z_119_fu_732_p2 = (reg_323 ^ and_ln813_fu_726_p2);

assign zext_ln3085_fu_359_p1 = u_03_fu_144;

assign zext_ln3086_1_fu_521_p1 = shl_ln_fu_514_p3;

assign zext_ln3086_2_fu_480_p1 = shl_ln3086_1_fu_473_p3;

assign zext_ln3086_3_fu_561_p1 = lshr_ln3086_2_reg_973;

assign zext_ln3086_fu_339_p1 = gt_fu_333_p2;

assign zext_ln3087_1_fu_612_p1 = lshr_ln3087_2_reg_978;

assign zext_ln3087_fu_572_p1 = shl_ln105_fu_565_p3;

assign zext_ln962_fu_748_p1 = gm_fu_743_p2;

assign zext_ln966_fu_773_p1 = shl_ln966_fu_767_p2;

assign zext_ln967_3_fu_815_p1 = lshr_ln_fu_805_p4;

assign zext_ln967_fu_796_p1 = shl_ln106_fu_788_p3;

assign zext_ln968_fu_851_p1 = lshr_ln56_reg_1063;

always @ (posedge ap_clk) begin
    zext_ln3086_reg_908[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln962_reg_1050[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
end

endmodule //solve_NTRU_make_fg_80_82_1
