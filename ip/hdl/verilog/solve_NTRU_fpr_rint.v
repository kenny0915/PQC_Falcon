// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module solve_NTRU_fpr_rint (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] x;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_64_p2;
reg   [63:0] dc_reg_724;
wire    ap_CS_fsm_state3;
wire   [63:0] grp_fu_70_p2;
reg   [63:0] dc_5_reg_729;
wire   [63:0] grp_fu_76_p2;
reg   [63:0] dc_6_reg_734;
wire    ap_CS_fsm_state4;
wire   [63:0] data_V_fu_82_p1;
wire   [51:0] p_Result_1_fu_103_p1;
wire   [53:0] mantissa_fu_107_p4;
wire   [10:0] xs_exp_V_fu_93_p4;
wire   [11:0] zext_ln515_fu_121_p1;
wire   [11:0] add_ln515_fu_125_p2;
wire   [10:0] sub_ln1512_fu_139_p2;
wire   [0:0] isNeg_fu_131_p3;
wire  signed [11:0] sext_ln1512_fu_145_p1;
wire   [11:0] ush_fu_149_p3;
wire  signed [31:0] sext_ln1488_fu_157_p1;
wire   [168:0] zext_ln15_fu_117_p1;
wire   [168:0] zext_ln1488_fu_161_p1;
wire   [168:0] r_V_fu_165_p2;
wire   [0:0] tmp_fu_177_p3;
wire   [168:0] r_V_1_fu_171_p2;
wire   [63:0] zext_ln818_fu_185_p1;
wire   [63:0] tmp_s_fu_189_p4;
wire   [63:0] val_fu_199_p3;
wire   [63:0] data_V_1_fu_213_p1;
wire   [51:0] p_Result_3_fu_234_p1;
wire   [53:0] mantissa_1_fu_238_p4;
wire   [10:0] xs_exp_V_1_fu_224_p4;
wire   [11:0] zext_ln515_2_fu_252_p1;
wire   [11:0] add_ln515_2_fu_256_p2;
wire   [10:0] sub_ln1512_1_fu_270_p2;
wire   [0:0] isNeg_1_fu_262_p3;
wire  signed [11:0] sext_ln1512_1_fu_276_p1;
wire   [11:0] ush_1_fu_280_p3;
wire  signed [31:0] sext_ln1488_1_fu_288_p1;
wire   [168:0] zext_ln15_1_fu_248_p1;
wire   [168:0] zext_ln1488_2_fu_292_p1;
wire   [168:0] r_V_2_fu_296_p2;
wire   [0:0] tmp_192_fu_308_p3;
wire   [168:0] r_V_3_fu_302_p2;
wire   [63:0] zext_ln818_1_fu_316_p1;
wire   [63:0] tmp_170_fu_320_p4;
wire   [63:0] val_1_fu_330_p3;
wire   [0:0] p_Result_2_fu_216_p3;
wire   [63:0] result_V_4_fu_338_p2;
wire   [63:0] data_V_2_fu_352_p1;
wire   [51:0] p_Result_5_fu_373_p1;
wire   [53:0] mantissa_2_fu_377_p4;
wire   [10:0] xs_exp_V_2_fu_363_p4;
wire   [11:0] zext_ln515_3_fu_391_p1;
wire   [11:0] add_ln515_3_fu_395_p2;
wire   [10:0] sub_ln1512_2_fu_409_p2;
wire   [0:0] isNeg_2_fu_401_p3;
wire  signed [11:0] sext_ln1512_2_fu_415_p1;
wire   [11:0] ush_2_fu_419_p3;
wire  signed [31:0] sext_ln1488_2_fu_427_p1;
wire   [168:0] zext_ln15_2_fu_387_p1;
wire   [168:0] zext_ln1488_3_fu_431_p1;
wire   [168:0] r_V_4_fu_435_p2;
wire   [0:0] tmp_196_fu_447_p3;
wire   [168:0] r_V_5_fu_441_p2;
wire   [63:0] zext_ln818_2_fu_455_p1;
wire   [63:0] tmp_171_fu_459_p4;
wire   [63:0] val_2_fu_469_p3;
wire   [0:0] p_Result_4_fu_355_p3;
wire   [63:0] result_V_9_fu_477_p2;
wire   [63:0] result_V_13_fu_483_p3;
wire   [63:0] data_V_3_fu_497_p1;
wire   [51:0] p_Result_7_fu_518_p1;
wire   [53:0] mantissa_3_fu_522_p4;
wire   [10:0] xs_exp_V_3_fu_508_p4;
wire   [11:0] zext_ln515_4_fu_536_p1;
wire   [11:0] add_ln515_4_fu_540_p2;
wire   [10:0] sub_ln1512_3_fu_554_p2;
wire   [0:0] isNeg_3_fu_546_p3;
wire  signed [11:0] sext_ln1512_3_fu_560_p1;
wire   [11:0] ush_3_fu_564_p3;
wire  signed [31:0] sext_ln1488_3_fu_572_p1;
wire   [168:0] zext_ln15_3_fu_532_p1;
wire   [168:0] zext_ln1488_4_fu_576_p1;
wire   [168:0] r_V_6_fu_580_p2;
wire   [0:0] tmp_200_fu_592_p3;
wire   [168:0] r_V_7_fu_586_p2;
wire   [63:0] zext_ln818_3_fu_600_p1;
wire   [63:0] tmp_172_fu_604_p4;
wire   [63:0] val_3_fu_614_p3;
wire   [0:0] p_Result_6_fu_500_p3;
wire   [63:0] result_V_10_fu_622_p2;
wire   [63:0] result_V_fu_628_p3;
wire   [63:0] result_V_2_fu_207_p2;
wire   [0:0] p_Result_s_fu_85_p3;
wire   [0:0] tmp_201_fu_642_p3;
wire   [0:0] tmp_202_fu_650_p3;
wire   [63:0] result_V_12_fu_344_p3;
wire   [11:0] ub_fu_666_p4;
wire   [11:0] add_ln99_fu_676_p2;
wire   [12:0] zext_ln99_fu_682_p1;
wire   [12:0] add_ln99_1_fu_686_p2;
wire   [0:0] m_fu_658_p3;
wire   [63:0] rn_fu_636_p2;
wire   [63:0] rp_fu_491_p2;
wire   [0:0] m_8_fu_692_p3;
wire   [63:0] select_ln108_fu_700_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

solve_NTRU_dadd_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_3_full_dsp_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x),
    .din1(64'd13830554455654793216),
    .ce(1'b1),
    .dout(grp_fu_64_p2)
);

solve_NTRU_dadd_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_3_full_dsp_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x),
    .din1(64'd4841369599423283200),
    .ce(1'b1),
    .dout(grp_fu_70_p2)
);

solve_NTRU_dadd_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_3_full_dsp_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x),
    .din1(64'd14064741636278059008),
    .ce(1'b1),
    .dout(grp_fu_76_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dc_5_reg_729 <= grp_fu_70_p2;
        dc_6_reg_734 <= grp_fu_76_p2;
        dc_reg_724 <= grp_fu_64_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln515_2_fu_256_p2 = ($signed(zext_ln515_2_fu_252_p1) + $signed(12'd3073));

assign add_ln515_3_fu_395_p2 = ($signed(zext_ln515_3_fu_391_p1) + $signed(12'd3073));

assign add_ln515_4_fu_540_p2 = ($signed(zext_ln515_4_fu_536_p1) + $signed(12'd3073));

assign add_ln515_fu_125_p2 = ($signed(zext_ln515_fu_121_p1) + $signed(12'd3073));

assign add_ln99_1_fu_686_p2 = ($signed(zext_ln99_fu_682_p1) + $signed(13'd8190));

assign add_ln99_fu_676_p2 = (ub_fu_666_p4 + 12'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_return = ((m_8_fu_692_p3[0:0] == 1'b1) ? select_ln108_fu_700_p3 : result_V_12_fu_344_p3);

assign data_V_1_fu_213_p1 = x;

assign data_V_2_fu_352_p1 = dc_5_reg_729;

assign data_V_3_fu_497_p1 = dc_6_reg_734;

assign data_V_fu_82_p1 = dc_reg_724;

assign isNeg_1_fu_262_p3 = add_ln515_2_fu_256_p2[32'd11];

assign isNeg_2_fu_401_p3 = add_ln515_3_fu_395_p2[32'd11];

assign isNeg_3_fu_546_p3 = add_ln515_4_fu_540_p2[32'd11];

assign isNeg_fu_131_p3 = add_ln515_fu_125_p2[32'd11];

assign m_8_fu_692_p3 = add_ln99_1_fu_686_p2[32'd12];

assign m_fu_658_p3 = ((p_Result_s_fu_85_p3[0:0] == 1'b1) ? tmp_201_fu_642_p3 : tmp_202_fu_650_p3);

assign mantissa_1_fu_238_p4 = {{{{1'd1}, {p_Result_3_fu_234_p1}}}, {1'd0}};

assign mantissa_2_fu_377_p4 = {{{{1'd1}, {p_Result_5_fu_373_p1}}}, {1'd0}};

assign mantissa_3_fu_522_p4 = {{{{1'd1}, {p_Result_7_fu_518_p1}}}, {1'd0}};

assign mantissa_fu_107_p4 = {{{{1'd1}, {p_Result_1_fu_103_p1}}}, {1'd0}};

assign p_Result_1_fu_103_p1 = data_V_fu_82_p1[51:0];

assign p_Result_2_fu_216_p3 = data_V_1_fu_213_p1[32'd63];

assign p_Result_3_fu_234_p1 = data_V_1_fu_213_p1[51:0];

assign p_Result_4_fu_355_p3 = data_V_2_fu_352_p1[32'd63];

assign p_Result_5_fu_373_p1 = data_V_2_fu_352_p1[51:0];

assign p_Result_6_fu_500_p3 = data_V_3_fu_497_p1[32'd63];

assign p_Result_7_fu_518_p1 = data_V_3_fu_497_p1[51:0];

assign p_Result_s_fu_85_p3 = data_V_fu_82_p1[32'd63];

assign r_V_1_fu_171_p2 = zext_ln15_fu_117_p1 << zext_ln1488_fu_161_p1;

assign r_V_2_fu_296_p2 = zext_ln15_1_fu_248_p1 >> zext_ln1488_2_fu_292_p1;

assign r_V_3_fu_302_p2 = zext_ln15_1_fu_248_p1 << zext_ln1488_2_fu_292_p1;

assign r_V_4_fu_435_p2 = zext_ln15_2_fu_387_p1 >> zext_ln1488_3_fu_431_p1;

assign r_V_5_fu_441_p2 = zext_ln15_2_fu_387_p1 << zext_ln1488_3_fu_431_p1;

assign r_V_6_fu_580_p2 = zext_ln15_3_fu_532_p1 >> zext_ln1488_4_fu_576_p1;

assign r_V_7_fu_586_p2 = zext_ln15_3_fu_532_p1 << zext_ln1488_4_fu_576_p1;

assign r_V_fu_165_p2 = zext_ln15_fu_117_p1 >> zext_ln1488_fu_161_p1;

assign result_V_10_fu_622_p2 = (64'd0 - val_3_fu_614_p3);

assign result_V_12_fu_344_p3 = ((p_Result_2_fu_216_p3[0:0] == 1'b1) ? result_V_4_fu_338_p2 : val_1_fu_330_p3);

assign result_V_13_fu_483_p3 = ((p_Result_4_fu_355_p3[0:0] == 1'b1) ? result_V_9_fu_477_p2 : val_2_fu_469_p3);

assign result_V_2_fu_207_p2 = (64'd0 - val_fu_199_p3);

assign result_V_4_fu_338_p2 = (64'd0 - val_1_fu_330_p3);

assign result_V_9_fu_477_p2 = (64'd0 - val_2_fu_469_p3);

assign result_V_fu_628_p3 = ((p_Result_6_fu_500_p3[0:0] == 1'b1) ? result_V_10_fu_622_p2 : val_3_fu_614_p3);

assign rn_fu_636_p2 = (result_V_fu_628_p3 + 64'd4503599627370496);

assign rp_fu_491_p2 = ($signed(result_V_13_fu_483_p3) + $signed(64'd18442240474082181120));

assign select_ln108_fu_700_p3 = ((m_fu_658_p3[0:0] == 1'b1) ? rn_fu_636_p2 : rp_fu_491_p2);

assign sext_ln1488_1_fu_288_p1 = $signed(ush_1_fu_280_p3);

assign sext_ln1488_2_fu_427_p1 = $signed(ush_2_fu_419_p3);

assign sext_ln1488_3_fu_572_p1 = $signed(ush_3_fu_564_p3);

assign sext_ln1488_fu_157_p1 = $signed(ush_fu_149_p3);

assign sext_ln1512_1_fu_276_p1 = $signed(sub_ln1512_1_fu_270_p2);

assign sext_ln1512_2_fu_415_p1 = $signed(sub_ln1512_2_fu_409_p2);

assign sext_ln1512_3_fu_560_p1 = $signed(sub_ln1512_3_fu_554_p2);

assign sext_ln1512_fu_145_p1 = $signed(sub_ln1512_fu_139_p2);

assign sub_ln1512_1_fu_270_p2 = (11'd1023 - xs_exp_V_1_fu_224_p4);

assign sub_ln1512_2_fu_409_p2 = (11'd1023 - xs_exp_V_2_fu_363_p4);

assign sub_ln1512_3_fu_554_p2 = (11'd1023 - xs_exp_V_3_fu_508_p4);

assign sub_ln1512_fu_139_p2 = (11'd1023 - xs_exp_V_fu_93_p4);

assign tmp_170_fu_320_p4 = {{r_V_3_fu_302_p2[116:53]}};

assign tmp_171_fu_459_p4 = {{r_V_5_fu_441_p2[116:53]}};

assign tmp_172_fu_604_p4 = {{r_V_7_fu_586_p2[116:53]}};

assign tmp_192_fu_308_p3 = r_V_2_fu_296_p2[32'd53];

assign tmp_196_fu_447_p3 = r_V_4_fu_435_p2[32'd53];

assign tmp_200_fu_592_p3 = r_V_6_fu_580_p2[32'd53];

assign tmp_201_fu_642_p3 = result_V_2_fu_207_p2[32'd63];

assign tmp_202_fu_650_p3 = val_fu_199_p3[32'd63];

assign tmp_fu_177_p3 = r_V_fu_165_p2[32'd53];

assign tmp_s_fu_189_p4 = {{r_V_1_fu_171_p2[116:53]}};

assign ub_fu_666_p4 = {{result_V_12_fu_344_p3[63:52]}};

assign ush_1_fu_280_p3 = ((isNeg_1_fu_262_p3[0:0] == 1'b1) ? sext_ln1512_1_fu_276_p1 : add_ln515_2_fu_256_p2);

assign ush_2_fu_419_p3 = ((isNeg_2_fu_401_p3[0:0] == 1'b1) ? sext_ln1512_2_fu_415_p1 : add_ln515_3_fu_395_p2);

assign ush_3_fu_564_p3 = ((isNeg_3_fu_546_p3[0:0] == 1'b1) ? sext_ln1512_3_fu_560_p1 : add_ln515_4_fu_540_p2);

assign ush_fu_149_p3 = ((isNeg_fu_131_p3[0:0] == 1'b1) ? sext_ln1512_fu_145_p1 : add_ln515_fu_125_p2);

assign val_1_fu_330_p3 = ((isNeg_1_fu_262_p3[0:0] == 1'b1) ? zext_ln818_1_fu_316_p1 : tmp_170_fu_320_p4);

assign val_2_fu_469_p3 = ((isNeg_2_fu_401_p3[0:0] == 1'b1) ? zext_ln818_2_fu_455_p1 : tmp_171_fu_459_p4);

assign val_3_fu_614_p3 = ((isNeg_3_fu_546_p3[0:0] == 1'b1) ? zext_ln818_3_fu_600_p1 : tmp_172_fu_604_p4);

assign val_fu_199_p3 = ((isNeg_fu_131_p3[0:0] == 1'b1) ? zext_ln818_fu_185_p1 : tmp_s_fu_189_p4);

assign xs_exp_V_1_fu_224_p4 = {{data_V_1_fu_213_p1[62:52]}};

assign xs_exp_V_2_fu_363_p4 = {{data_V_2_fu_352_p1[62:52]}};

assign xs_exp_V_3_fu_508_p4 = {{data_V_3_fu_497_p1[62:52]}};

assign xs_exp_V_fu_93_p4 = {{data_V_fu_82_p1[62:52]}};

assign zext_ln1488_2_fu_292_p1 = $unsigned(sext_ln1488_1_fu_288_p1);

assign zext_ln1488_3_fu_431_p1 = $unsigned(sext_ln1488_2_fu_427_p1);

assign zext_ln1488_4_fu_576_p1 = $unsigned(sext_ln1488_3_fu_572_p1);

assign zext_ln1488_fu_161_p1 = $unsigned(sext_ln1488_fu_157_p1);

assign zext_ln15_1_fu_248_p1 = mantissa_1_fu_238_p4;

assign zext_ln15_2_fu_387_p1 = mantissa_2_fu_377_p4;

assign zext_ln15_3_fu_532_p1 = mantissa_3_fu_522_p4;

assign zext_ln15_fu_117_p1 = mantissa_fu_107_p4;

assign zext_ln515_2_fu_252_p1 = xs_exp_V_1_fu_224_p4;

assign zext_ln515_3_fu_391_p1 = xs_exp_V_2_fu_363_p4;

assign zext_ln515_4_fu_536_p1 = xs_exp_V_3_fu_508_p4;

assign zext_ln515_fu_121_p1 = xs_exp_V_fu_93_p4;

assign zext_ln818_1_fu_316_p1 = tmp_192_fu_308_p3;

assign zext_ln818_2_fu_455_p1 = tmp_196_fu_447_p3;

assign zext_ln818_3_fu_600_p1 = tmp_200_fu_592_p3;

assign zext_ln818_fu_185_p1 = tmp_fu_177_p3;

assign zext_ln99_fu_682_p1 = add_ln99_fu_676_p2;

endmodule //solve_NTRU_fpr_rint
