// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module solve_NTRU_iFFT_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vla1_address0,
        vla1_ce0,
        vla1_we0,
        vla1_d0,
        vla1_q0,
        vla1_address1,
        vla1_ce1,
        vla1_we1,
        vla1_d1,
        vla1_q1,
        f,
        logn,
        fpr_gm_tab_address0,
        fpr_gm_tab_ce0,
        fpr_gm_tab_q0,
        fpr_gm_tab_address1,
        fpr_gm_tab_ce1,
        fpr_gm_tab_q1
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] vla1_address0;
output   vla1_ce0;
output  [3:0] vla1_we0;
output  [31:0] vla1_d0;
input  [31:0] vla1_q0;
output  [11:0] vla1_address1;
output   vla1_ce1;
output  [3:0] vla1_we1;
output  [31:0] vla1_d1;
input  [31:0] vla1_q1;
input  [13:0] f;
input  [31:0] logn;
output  [10:0] fpr_gm_tab_address0;
output   fpr_gm_tab_ce0;
input  [63:0] fpr_gm_tab_q0;
output  [10:0] fpr_gm_tab_address1;
output   fpr_gm_tab_ce1;
input  [63:0] fpr_gm_tab_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] vla1_address0;
reg vla1_ce0;
reg[3:0] vla1_we0;
reg[31:0] vla1_d0;
reg[11:0] vla1_address1;
reg vla1_ce1;
reg[3:0] vla1_we1;
reg[31:0] vla1_d1;
reg fpr_gm_tab_ce0;
reg fpr_gm_tab_ce1;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] fpr_p2_tab_address0;
reg    fpr_p2_tab_ce0;
wire   [63:0] fpr_p2_tab_q0;
wire   [63:0] grp_fu_288_p2;
reg   [63:0] reg_308;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln1449_fu_314_p1;
reg   [63:0] zext_ln1449_reg_961;
wire   [63:0] n_fu_318_p2;
reg   [63:0] n_reg_966;
wire   [63:0] zext_ln1452_fu_334_p1;
reg   [63:0] zext_ln1452_reg_971;
reg   [10:0] trunc_ln_reg_976;
wire   [63:0] zext_ln1457_fu_398_p1;
reg   [63:0] zext_ln1457_reg_991;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1453_fu_379_p2;
wire   [63:0] dt_fu_402_p2;
reg   [63:0] dt_reg_996;
reg   [9:0] trunc_ln29_reg_1003;
wire   [10:0] trunc_ln1474_fu_418_p1;
reg   [10:0] trunc_ln1474_reg_1008;
wire   [0:0] icmp_ln1489_fu_422_p2;
reg   [0:0] icmp_ln1489_reg_1013;
wire   [63:0] i1_1_fu_437_p2;
reg   [63:0] i1_1_reg_1032;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1459_fu_432_p2;
reg   [63:0] s_re_reg_1047;
wire    ap_CS_fsm_state4;
wire   [63:0] s_im_fu_504_p1;
reg   [63:0] s_im_reg_1053;
reg   [11:0] vla1_addr_345_reg_1062;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln1468_fu_508_p2;
reg   [11:0] vla1_addr_346_reg_1068;
reg   [11:0] trunc_ln1473_2_reg_1073;
reg   [11:0] trunc_ln1474_1_reg_1079;
reg   [11:0] trunc_ln31_reg_1085;
wire   [63:0] j_8_fu_641_p2;
reg   [63:0] j_8_reg_1091;
wire   [63:0] j1_fu_647_p2;
wire   [63:0] add_ln1459_fu_652_p2;
reg   [31:0] vla1_load_225_reg_1106;
wire    ap_CS_fsm_state6;
reg   [31:0] vla1_load_226_reg_1111;
reg   [11:0] vla1_addr_347_reg_1116;
reg   [11:0] vla1_addr_348_reg_1122;
reg   [31:0] vla1_load_227_reg_1127;
wire    ap_CS_fsm_state7;
reg   [31:0] vla1_load_228_reg_1132;
reg   [11:0] vla1_addr_349_reg_1137;
reg   [11:0] vla1_addr_350_reg_1143;
wire   [63:0] x_re_fu_691_p1;
wire    ap_CS_fsm_state8;
wire   [63:0] y_re_fu_705_p1;
reg   [11:0] vla1_addr_351_reg_1160;
reg   [11:0] vla1_addr_352_reg_1166;
wire   [63:0] x_im_fu_731_p1;
wire    ap_CS_fsm_state9;
wire   [63:0] y_im_fu_745_p1;
reg   [63:0] fpct_im_2_reg_1183;
wire    ap_CS_fsm_state11;
wire   [63:0] grp_fu_292_p2;
reg   [63:0] test1_reg_1189;
wire    ap_CS_fsm_state15;
wire   [63:0] grp_fu_296_p2;
reg   [63:0] test2_reg_1194;
wire   [63:0] grp_fu_300_p2;
reg   [63:0] test1_5_reg_1199;
wire   [63:0] grp_fu_304_p2;
reg   [63:0] test2_5_reg_1204;
reg   [63:0] ni_reg_1209;
wire    ap_CS_fsm_state20;
reg   [11:0] vla1_addr_reg_1217;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln1493_fu_834_p2;
reg   [11:0] vla1_addr_344_reg_1223;
wire   [63:0] bitcast_ln1494_1_fu_901_p1;
wire    ap_CS_fsm_state22;
reg   [63:0] indvars_iv_reg_241;
reg   [63:0] i1_reg_251;
reg   [63:0] j1_2_reg_262;
reg   [63:0] j_03_reg_274;
wire    ap_CS_fsm_state19;
wire   [63:0] zext_ln1466_fu_460_p1;
wire   [63:0] zext_ln1467_fu_471_p1;
wire   [63:0] zext_ln1472_fu_541_p1;
wire   [63:0] zext_ln1472_1_fu_552_p1;
wire   [63:0] zext_ln1473_fu_657_p1;
wire   [63:0] zext_ln1473_1_fu_666_p1;
wire   [63:0] zext_ln1474_fu_671_p1;
wire   [63:0] zext_ln1474_1_fu_680_p1;
wire   [63:0] zext_ln1475_fu_711_p1;
wire   [63:0] zext_ln1475_1_fu_720_p1;
wire   [63:0] zext_ln1494_fu_872_p1;
wire   [63:0] zext_ln1494_1_fu_883_p1;
reg   [63:0] m_5_fu_86;
reg   [63:0] u_08_fu_90;
wire   [63:0] u_fu_476_p2;
reg   [63:0] t_fu_94;
reg   [63:0] u_11_fu_98;
wire   [63:0] u_214_fu_839_p2;
wire   [31:0] trunc_ln12_fu_755_p1;
wire   [31:0] trunc_ln13_fu_775_p1;
wire   [31:0] trunc_ln64_fu_795_p1;
wire   [31:0] trunc_ln65_fu_815_p1;
wire    ap_CS_fsm_state25;
wire   [31:0] trunc_ln1494_3_fu_910_p1;
reg   [63:0] grp_fu_284_p0;
reg   [63:0] grp_fu_284_p1;
wire    ap_CS_fsm_state16;
reg   [63:0] grp_fu_288_p0;
reg   [63:0] grp_fu_288_p1;
reg   [63:0] grp_fu_292_p0;
reg   [63:0] grp_fu_292_p1;
wire    ap_CS_fsm_state12;
wire   [62:0] hn_fu_324_p4;
wire   [62:0] tmp_188_fu_369_p4;
wire   [62:0] hm_fu_388_p4;
wire   [9:0] trunc_ln1466_fu_443_p1;
wire   [9:0] add_ln1466_fu_447_p2;
wire   [10:0] shl_ln_fu_452_p3;
wire   [10:0] or_ln1467_fu_465_p2;
wire   [63:0] bitcast_ln147_fu_494_p1;
wire   [63:0] xor_ln147_fu_498_p2;
wire   [10:0] trunc_ln1472_fu_514_p1;
wire   [13:0] shl_ln108_fu_518_p3;
wire   [13:0] add_ln1472_fu_526_p2;
wire   [11:0] trunc_ln30_fu_531_p4;
wire   [11:0] add_ln1472_1_fu_546_p2;
wire   [10:0] add_ln1473_fu_557_p2;
wire   [13:0] shl_ln109_fu_562_p3;
wire   [13:0] add_ln1473_1_fu_570_p2;
wire   [10:0] add_ln1474_fu_585_p2;
wire   [13:0] shl_ln110_fu_590_p3;
wire   [13:0] add_ln1474_1_fu_598_p2;
wire   [10:0] add_ln1475_fu_613_p2;
wire   [13:0] shl_ln111_fu_618_p3;
wire   [13:0] add_ln1475_1_fu_626_p2;
wire   [11:0] add_ln1473_2_fu_661_p2;
wire   [11:0] add_ln1474_2_fu_675_p2;
wire   [63:0] tmp_s_fu_685_p3;
wire   [63:0] tmp_85_fu_697_p3;
wire   [11:0] add_ln1475_2_fu_715_p2;
wire   [63:0] tmp_84_fu_725_p3;
wire   [63:0] tmp_86_fu_737_p3;
wire   [63:0] grp_fu_284_p2;
wire   [63:0] bitcast_ln12_fu_751_p1;
wire   [63:0] bitcast_ln13_fu_771_p1;
wire   [63:0] bitcast_ln64_fu_791_p1;
wire   [63:0] bitcast_ln65_fu_811_p1;
wire   [10:0] trunc_ln1494_fu_845_p1;
wire   [13:0] shl_ln107_fu_849_p3;
wire   [13:0] add_ln1494_fu_857_p2;
wire   [11:0] trunc_ln1494_2_fu_862_p4;
wire   [11:0] add_ln1494_1_fu_877_p2;
wire   [63:0] tmp_fu_893_p3;
wire   [63:0] bitcast_ln1494_fu_906_p1;
reg   [1:0] grp_fu_284_opcode;
reg   [1:0] grp_fu_288_opcode;
reg   [24:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
end

solve_NTRU_iFFT_1_fpr_p2_tab_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
fpr_p2_tab_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fpr_p2_tab_address0),
    .ce0(fpr_p2_tab_ce0),
    .q0(fpr_p2_tab_q0)
);

solve_NTRU_dadddsub_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_3_full_dsp_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_284_p0),
    .din1(grp_fu_284_p1),
    .opcode(grp_fu_284_opcode),
    .ce(1'b1),
    .dout(grp_fu_284_p2)
);

solve_NTRU_dadddsub_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_3_full_dsp_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_288_p0),
    .din1(grp_fu_288_p1),
    .opcode(grp_fu_288_opcode),
    .ce(1'b1),
    .dout(grp_fu_288_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_292_p0),
    .din1(grp_fu_292_p1),
    .ce(1'b1),
    .dout(grp_fu_292_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fpct_im_2_reg_1183),
    .din1(s_im_reg_1053),
    .ce(1'b1),
    .dout(grp_fu_296_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_308),
    .din1(s_im_reg_1053),
    .ce(1'b1),
    .dout(grp_fu_300_p2)
);

solve_NTRU_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fpct_im_2_reg_1183),
    .din1(s_re_reg_1047),
    .ce(1'b1),
    .dout(grp_fu_304_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1453_fu_379_p2 == 1'd0))) begin
        i1_reg_251 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1468_fu_508_p2 == 1'd0))) begin
        i1_reg_251 <= i1_1_reg_1032;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1453_fu_379_p2 == 1'd0))) begin
        indvars_iv_reg_241 <= t_fu_94;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1468_fu_508_p2 == 1'd0))) begin
        indvars_iv_reg_241 <= add_ln1459_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1453_fu_379_p2 == 1'd0))) begin
        j1_2_reg_262 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1468_fu_508_p2 == 1'd0))) begin
        j1_2_reg_262 <= j1_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_03_reg_274 <= j_8_reg_1091;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_03_reg_274 <= j1_2_reg_262;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        m_5_fu_86 <= n_fu_318_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1459_fu_432_p2 == 1'd0))) begin
        m_5_fu_86 <= zext_ln1457_reg_991;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_fu_94 <= 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1459_fu_432_p2 == 1'd0))) begin
        t_fu_94 <= dt_reg_996;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        u_08_fu_90 <= zext_ln1449_fu_314_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1459_fu_432_p2 == 1'd0))) begin
        u_08_fu_90 <= u_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1489_fu_422_p2 == 1'd0) & (icmp_ln1453_fu_379_p2 == 1'd1))) begin
        u_11_fu_98 <= 64'd0;
    end else if (((icmp_ln1493_fu_834_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln1489_reg_1013 == 1'd0))) begin
        u_11_fu_98 <= u_214_fu_839_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1453_fu_379_p2 == 1'd0))) begin
        dt_reg_996[63 : 1] <= dt_fu_402_p2[63 : 1];
        trunc_ln1474_reg_1008 <= trunc_ln1474_fu_418_p1;
        trunc_ln29_reg_1003 <= {{m_5_fu_86[10:1]}};
        zext_ln1457_reg_991[62 : 0] <= zext_ln1457_fu_398_p1[62 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fpct_im_2_reg_1183 <= grp_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_1_reg_1032 <= i1_1_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1453_fu_379_p2 == 1'd1))) begin
        icmp_ln1489_reg_1013 <= icmp_ln1489_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1468_fu_508_p2 == 1'd1))) begin
        j_8_reg_1091 <= j_8_fu_641_p2;
        trunc_ln1473_2_reg_1073 <= {{add_ln1473_1_fu_570_p2[13:2]}};
        trunc_ln1474_1_reg_1079 <= {{add_ln1474_1_fu_598_p2[13:2]}};
        trunc_ln31_reg_1085 <= {{add_ln1475_1_fu_626_p2[13:2]}};
        vla1_addr_345_reg_1062 <= zext_ln1472_fu_541_p1;
        vla1_addr_346_reg_1068 <= zext_ln1472_1_fu_552_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        n_reg_966 <= n_fu_318_p2;
        trunc_ln_reg_976 <= {{n_fu_318_p2[11:1]}};
        zext_ln1449_reg_961[31 : 0] <= zext_ln1449_fu_314_p1[31 : 0];
        zext_ln1452_reg_971[62 : 0] <= zext_ln1452_fu_334_p1[62 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ni_reg_1209 <= fpr_p2_tab_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_308 <= grp_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_im_reg_1053 <= s_im_fu_504_p1;
        s_re_reg_1047 <= fpr_gm_tab_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        test1_5_reg_1199 <= grp_fu_300_p2;
        test1_reg_1189 <= grp_fu_292_p2;
        test2_5_reg_1204 <= grp_fu_304_p2;
        test2_reg_1194 <= grp_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1493_fu_834_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln1489_reg_1013 == 1'd0))) begin
        vla1_addr_344_reg_1223 <= zext_ln1494_1_fu_883_p1;
        vla1_addr_reg_1217 <= zext_ln1494_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        vla1_addr_347_reg_1116 <= zext_ln1473_fu_657_p1;
        vla1_addr_348_reg_1122 <= zext_ln1473_1_fu_666_p1;
        vla1_load_225_reg_1106 <= vla1_q1;
        vla1_load_226_reg_1111 <= vla1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        vla1_addr_349_reg_1137 <= zext_ln1474_fu_671_p1;
        vla1_addr_350_reg_1143 <= zext_ln1474_1_fu_680_p1;
        vla1_load_227_reg_1127 <= vla1_q1;
        vla1_load_228_reg_1132 <= vla1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        vla1_addr_351_reg_1160 <= zext_ln1475_fu_711_p1;
        vla1_addr_352_reg_1166 <= zext_ln1475_1_fu_720_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state21) & ((icmp_ln1493_fu_834_p2 == 1'd1) | (icmp_ln1489_reg_1013 == 1'd1))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln1493_fu_834_p2 == 1'd1) | (icmp_ln1489_reg_1013 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fpr_gm_tab_ce0 = 1'b1;
    end else begin
        fpr_gm_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fpr_gm_tab_ce1 = 1'b1;
    end else begin
        fpr_gm_tab_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fpr_p2_tab_ce0 = 1'b1;
    end else begin
        fpr_p2_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_284_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_284_opcode = 2'd0;
    end else begin
        grp_fu_284_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_284_p0 = test1_reg_1189;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_284_p0 = x_im_fu_731_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_284_p0 = x_re_fu_691_p1;
    end else begin
        grp_fu_284_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_284_p1 = test2_reg_1194;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_284_p1 = y_im_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_284_p1 = y_re_fu_705_p1;
    end else begin
        grp_fu_284_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_288_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_288_opcode = 2'd0;
    end else begin
        grp_fu_288_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_288_p0 = test1_5_reg_1199;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_288_p0 = x_im_fu_731_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_288_p0 = x_re_fu_691_p1;
    end else begin
        grp_fu_288_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_288_p1 = test2_5_reg_1204;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_288_p1 = y_im_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_288_p1 = y_re_fu_705_p1;
    end else begin
        grp_fu_288_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_292_p0 = bitcast_ln1494_1_fu_901_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_292_p0 = reg_308;
    end else begin
        grp_fu_292_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_292_p1 = ni_reg_1209;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_292_p1 = s_re_reg_1047;
    end else begin
        grp_fu_292_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        vla1_address0 = vla1_addr_344_reg_1223;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        vla1_address0 = zext_ln1494_1_fu_883_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_address0 = vla1_addr_352_reg_1166;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_address0 = vla1_addr_350_reg_1143;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla1_address0 = vla1_addr_348_reg_1122;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        vla1_address0 = vla1_addr_346_reg_1068;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        vla1_address0 = zext_ln1475_1_fu_720_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vla1_address0 = zext_ln1474_1_fu_680_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        vla1_address0 = zext_ln1473_1_fu_666_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vla1_address0 = zext_ln1472_1_fu_552_p1;
    end else begin
        vla1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        vla1_address1 = vla1_addr_reg_1217;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        vla1_address1 = zext_ln1494_fu_872_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_address1 = vla1_addr_351_reg_1160;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_address1 = vla1_addr_349_reg_1137;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla1_address1 = vla1_addr_347_reg_1116;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        vla1_address1 = vla1_addr_345_reg_1062;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        vla1_address1 = zext_ln1475_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vla1_address1 = zext_ln1474_fu_671_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        vla1_address1 = zext_ln1473_fu_657_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vla1_address1 = zext_ln1472_fu_541_p1;
    end else begin
        vla1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        vla1_ce0 = 1'b1;
    end else begin
        vla1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        vla1_ce1 = 1'b1;
    end else begin
        vla1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        vla1_d0 = {{bitcast_ln1494_fu_906_p1[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_d0 = {{bitcast_ln65_fu_811_p1[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_d0 = {{bitcast_ln64_fu_791_p1[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla1_d0 = {{bitcast_ln13_fu_771_p1[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        vla1_d0 = {{bitcast_ln12_fu_751_p1[63:32]}};
    end else begin
        vla1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        vla1_d1 = trunc_ln1494_3_fu_910_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vla1_d1 = trunc_ln65_fu_815_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla1_d1 = trunc_ln64_fu_795_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla1_d1 = trunc_ln13_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        vla1_d1 = trunc_ln12_fu_755_p1;
    end else begin
        vla1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11))) begin
        vla1_we0 = 4'd15;
    end else begin
        vla1_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11))) begin
        vla1_we1 = 4'd15;
    end else begin
        vla1_we1 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1489_fu_422_p2 == 1'd1) & (icmp_ln1453_fu_379_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1489_fu_422_p2 == 1'd0) & (icmp_ln1453_fu_379_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1459_fu_432_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1468_fu_508_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln1493_fu_834_p2 == 1'd1) | (icmp_ln1489_reg_1013 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1459_fu_652_p2 = (dt_reg_996 + indvars_iv_reg_241);

assign add_ln1466_fu_447_p2 = (trunc_ln1466_fu_443_p1 + trunc_ln29_reg_1003);

assign add_ln1472_1_fu_546_p2 = (trunc_ln30_fu_531_p4 + 12'd1);

assign add_ln1472_fu_526_p2 = (shl_ln108_fu_518_p3 + f);

assign add_ln1473_1_fu_570_p2 = (shl_ln109_fu_562_p3 + f);

assign add_ln1473_2_fu_661_p2 = (trunc_ln1473_2_reg_1073 + 12'd1);

assign add_ln1473_fu_557_p2 = (trunc_ln1472_fu_514_p1 + trunc_ln_reg_976);

assign add_ln1474_1_fu_598_p2 = (shl_ln110_fu_590_p3 + f);

assign add_ln1474_2_fu_675_p2 = (trunc_ln1474_1_reg_1079 + 12'd1);

assign add_ln1474_fu_585_p2 = (trunc_ln1472_fu_514_p1 + trunc_ln1474_reg_1008);

assign add_ln1475_1_fu_626_p2 = (shl_ln111_fu_618_p3 + f);

assign add_ln1475_2_fu_715_p2 = (trunc_ln31_reg_1085 + 12'd1);

assign add_ln1475_fu_613_p2 = (add_ln1474_fu_585_p2 + trunc_ln_reg_976);

assign add_ln1494_1_fu_877_p2 = (trunc_ln1494_2_fu_862_p4 + 12'd1);

assign add_ln1494_fu_857_p2 = (shl_ln107_fu_849_p3 + f);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln12_fu_751_p1 = grp_fu_284_p2;

assign bitcast_ln13_fu_771_p1 = grp_fu_284_p2;

assign bitcast_ln147_fu_494_p1 = fpr_gm_tab_q0;

assign bitcast_ln1494_1_fu_901_p1 = tmp_fu_893_p3;

assign bitcast_ln1494_fu_906_p1 = grp_fu_292_p2;

assign bitcast_ln64_fu_791_p1 = grp_fu_284_p2;

assign bitcast_ln65_fu_811_p1 = reg_308;

assign dt_fu_402_p2 = t_fu_94 << 64'd1;

assign fpr_gm_tab_address0 = zext_ln1467_fu_471_p1;

assign fpr_gm_tab_address1 = zext_ln1466_fu_460_p1;

assign fpr_p2_tab_address0 = zext_ln1449_reg_961;

assign hm_fu_388_p4 = {{m_5_fu_86[63:1]}};

assign hn_fu_324_p4 = {{n_fu_318_p2[63:1]}};

assign i1_1_fu_437_p2 = (i1_reg_251 + 64'd1);

assign icmp_ln1453_fu_379_p2 = ((tmp_188_fu_369_p4 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln1459_fu_432_p2 = ((j1_2_reg_262 < zext_ln1452_reg_971) ? 1'b1 : 1'b0);

assign icmp_ln1468_fu_508_p2 = ((j_03_reg_274 < indvars_iv_reg_241) ? 1'b1 : 1'b0);

assign icmp_ln1489_fu_422_p2 = ((logn == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1493_fu_834_p2 = ((u_11_fu_98 == n_reg_966) ? 1'b1 : 1'b0);

assign j1_fu_647_p2 = (dt_reg_996 + j1_2_reg_262);

assign j_8_fu_641_p2 = (j_03_reg_274 + 64'd1);

assign n_fu_318_p2 = 64'd1 << zext_ln1449_fu_314_p1;

assign or_ln1467_fu_465_p2 = (shl_ln_fu_452_p3 | 11'd1);

assign s_im_fu_504_p1 = xor_ln147_fu_498_p2;

assign shl_ln107_fu_849_p3 = {{trunc_ln1494_fu_845_p1}, {3'd0}};

assign shl_ln108_fu_518_p3 = {{trunc_ln1472_fu_514_p1}, {3'd0}};

assign shl_ln109_fu_562_p3 = {{add_ln1473_fu_557_p2}, {3'd0}};

assign shl_ln110_fu_590_p3 = {{add_ln1474_fu_585_p2}, {3'd0}};

assign shl_ln111_fu_618_p3 = {{add_ln1475_fu_613_p2}, {3'd0}};

assign shl_ln_fu_452_p3 = {{add_ln1466_fu_447_p2}, {1'd0}};

assign tmp_188_fu_369_p4 = {{u_08_fu_90[63:1]}};

assign tmp_84_fu_725_p3 = {{vla1_load_228_reg_1132}, {vla1_load_227_reg_1127}};

assign tmp_85_fu_697_p3 = {{vla1_q0}, {vla1_q1}};

assign tmp_86_fu_737_p3 = {{vla1_q0}, {vla1_q1}};

assign tmp_fu_893_p3 = {{vla1_q0}, {vla1_q1}};

assign tmp_s_fu_685_p3 = {{vla1_load_226_reg_1111}, {vla1_load_225_reg_1106}};

assign trunc_ln12_fu_755_p1 = bitcast_ln12_fu_751_p1[31:0];

assign trunc_ln13_fu_775_p1 = bitcast_ln13_fu_771_p1[31:0];

assign trunc_ln1466_fu_443_p1 = i1_reg_251[9:0];

assign trunc_ln1472_fu_514_p1 = j_03_reg_274[10:0];

assign trunc_ln1474_fu_418_p1 = t_fu_94[10:0];

assign trunc_ln1494_2_fu_862_p4 = {{add_ln1494_fu_857_p2[13:2]}};

assign trunc_ln1494_3_fu_910_p1 = bitcast_ln1494_fu_906_p1[31:0];

assign trunc_ln1494_fu_845_p1 = u_11_fu_98[10:0];

assign trunc_ln30_fu_531_p4 = {{add_ln1472_fu_526_p2[13:2]}};

assign trunc_ln64_fu_795_p1 = bitcast_ln64_fu_791_p1[31:0];

assign trunc_ln65_fu_815_p1 = bitcast_ln65_fu_811_p1[31:0];

assign u_214_fu_839_p2 = (u_11_fu_98 + 64'd1);

assign u_fu_476_p2 = ($signed(u_08_fu_90) + $signed(64'd18446744073709551615));

assign x_im_fu_731_p1 = tmp_84_fu_725_p3;

assign x_re_fu_691_p1 = tmp_s_fu_685_p3;

assign xor_ln147_fu_498_p2 = (bitcast_ln147_fu_494_p1 ^ 64'd9223372036854775808);

assign y_im_fu_745_p1 = tmp_86_fu_737_p3;

assign y_re_fu_705_p1 = tmp_85_fu_697_p3;

assign zext_ln1449_fu_314_p1 = logn;

assign zext_ln1452_fu_334_p1 = hn_fu_324_p4;

assign zext_ln1457_fu_398_p1 = hm_fu_388_p4;

assign zext_ln1466_fu_460_p1 = shl_ln_fu_452_p3;

assign zext_ln1467_fu_471_p1 = or_ln1467_fu_465_p2;

assign zext_ln1472_1_fu_552_p1 = add_ln1472_1_fu_546_p2;

assign zext_ln1472_fu_541_p1 = trunc_ln30_fu_531_p4;

assign zext_ln1473_1_fu_666_p1 = add_ln1473_2_fu_661_p2;

assign zext_ln1473_fu_657_p1 = trunc_ln1473_2_reg_1073;

assign zext_ln1474_1_fu_680_p1 = add_ln1474_2_fu_675_p2;

assign zext_ln1474_fu_671_p1 = trunc_ln1474_1_reg_1079;

assign zext_ln1475_1_fu_720_p1 = add_ln1475_2_fu_715_p2;

assign zext_ln1475_fu_711_p1 = trunc_ln31_reg_1085;

assign zext_ln1494_1_fu_883_p1 = add_ln1494_1_fu_877_p2;

assign zext_ln1494_fu_872_p1 = trunc_ln1494_2_fu_862_p4;

always @ (posedge ap_clk) begin
    zext_ln1449_reg_961[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln1452_reg_971[63] <= 1'b0;
    zext_ln1457_reg_991[63] <= 1'b0;
    dt_reg_996[0] <= 1'b0;
end

endmodule //solve_NTRU_iFFT_1
