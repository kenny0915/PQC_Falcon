-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity solve_NTRU_poly_sub_scaled_ntt_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    vla1_ce0 : OUT STD_LOGIC;
    vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    vla1_ce1 : OUT STD_LOGIC;
    vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    F : IN STD_LOGIC_VECTOR (13 downto 0);
    Flen : IN STD_LOGIC_VECTOR (63 downto 0);
    Fstride : IN STD_LOGIC_VECTOR (8 downto 0);
    f_r : IN STD_LOGIC_VECTOR (13 downto 0);
    flen_r : IN STD_LOGIC_VECTOR (7 downto 0);
    fstride_r : IN STD_LOGIC_VECTOR (7 downto 0);
    k : IN STD_LOGIC_VECTOR (13 downto 0);
    sch : IN STD_LOGIC_VECTOR (27 downto 0);
    scl : IN STD_LOGIC_VECTOR (5 downto 0);
    logn : IN STD_LOGIC_VECTOR (3 downto 0);
    tmp : IN STD_LOGIC_VECTOR (13 downto 0);
    PRIMES_p_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    PRIMES_p_ce0 : OUT STD_LOGIC;
    PRIMES_p_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    PRIMES_g_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    PRIMES_g_ce0 : OUT STD_LOGIC;
    PRIMES_g_q0 : IN STD_LOGIC_VECTOR (30 downto 0) );
end;


architecture behav of solve_NTRU_poly_sub_scaled_ntt_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (35 downto 0) := "000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (35 downto 0) := "000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (35 downto 0) := "000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (35 downto 0) := "000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (35 downto 0) := "000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (35 downto 0) := "000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (35 downto 0) := "000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (35 downto 0) := "000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (35 downto 0) := "000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (35 downto 0) := "001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (35 downto 0) := "010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (35 downto 0) := "100000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv24_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv25_1FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111111111";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal REV10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal REV10_ce0 : STD_LOGIC;
    signal REV10_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_modp_montymul_fu_660_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_168_fu_1421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal reg_639 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln779_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln781_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_651 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln954_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ig_reg_833 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal x1_3_reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln962_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x2_2_reg_861 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal scl_cast_fu_946_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scl_cast_reg_2471 : STD_LOGIC_VECTOR (31 downto 0);
    signal flen_cast12_fu_950_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal flen_cast12_reg_2476 : STD_LOGIC_VECTOR (8 downto 0);
    signal fstride_cast_fu_954_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal fstride_cast_reg_2481 : STD_LOGIC_VECTOR (16 downto 0);
    signal logn_cast7_fu_958_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal logn_cast7_reg_2486 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_cast_reg_2492 : STD_LOGIC_VECTOR (63 downto 0);
    signal Fstride_cast_fu_966_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal Fstride_cast_reg_2497 : STD_LOGIC_VECTOR (17 downto 0);
    signal n_fu_982_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal n_reg_2502 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2536_fu_988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2536_reg_2511 : STD_LOGIC_VECTOR (63 downto 0);
    signal tlen_fu_992_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tlen_reg_2516 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln2536_1_fu_998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2536_1_reg_2521 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2536_2_fu_1002_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2536_2_reg_2527 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2536_3_fu_1006_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln2536_3_reg_2534 : STD_LOGIC_VECTOR (16 downto 0);
    signal igm_fu_1026_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal igm_reg_2541 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2543_fu_1032_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln2543_reg_2546 : STD_LOGIC_VECTOR (10 downto 0);
    signal fk_fu_1048_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal fk_reg_2551 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln2544_2_fu_1064_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln2544_2_reg_2556 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln2544_fu_1072_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2544_reg_2561 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2544_fu_1076_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2544_reg_2566 : STD_LOGIC_VECTOR (11 downto 0);
    signal t1_fu_1090_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal t1_reg_2572 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2534_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2534_reg_2577 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_assign_fu_1100_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_reg_2582 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_85_cast_fu_1106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_85_cast_reg_2587 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_9_cast43_fu_1116_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_9_cast43_reg_2592 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2551_fu_1120_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2551_reg_2597 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2551_1_fu_1132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2551_1_reg_2606 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal u_192_fu_1142_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_192_reg_2614 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln2551_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_reg_2645 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln1584_fu_1167_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1584_reg_2656 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_55_fu_1211_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_55_reg_2663 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1249_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_reg_2669 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln1584_fu_1255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1584_reg_2675 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1584_1_fu_1259_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1584_1_reg_2684 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_83_fu_1263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_83_reg_2690 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_9_fu_1359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_9_reg_2698 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_11_fu_1378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_11_reg_2708 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_10_fu_1406_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal e_fu_1412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_reg_2729 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln808_fu_1417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln808_reg_2734 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_12_fu_1429_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_12_reg_2742 : STD_LOGIC_VECTOR (5 downto 0);
    signal z_80_fu_1463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal u_190_fu_1474_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal u_190_reg_2755 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln968_fu_1526_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln968_reg_2765 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_26_fu_1567_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal v_26_reg_2773 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal trunc_ln2564_fu_1573_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln2564_reg_2778 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln2562_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2534_fu_1612_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln2534_reg_2788 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln2567_fu_1689_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2567_reg_2794 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal v_30_fu_1697_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal v_30_reg_2803 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal x_16_fu_1720_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_16_reg_2808 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln2568_fu_1692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1601_fu_1729_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1601_reg_2813 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_fu_1746_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_reg_2819 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2573_fu_1751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2573_reg_2824 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_191_fu_1760_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal u_191_reg_2829 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal icmp_ln1597_fu_1799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1597_reg_2839 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_22_fu_1885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_22_reg_2843 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal lshr_ln31_reg_2854 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2568_1_fu_1932_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2568_1_reg_2859 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2568_2_fu_1937_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2568_2_reg_2864 : STD_LOGIC_VECTOR (16 downto 0);
    signal v_29_fu_2022_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal v_29_reg_2872 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal icmp_ln2574_fu_2017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vla1_addr_292_reg_2882 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2574_1_fu_2106_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2574_1_reg_2888 : STD_LOGIC_VECTOR (16 downto 0);
    signal u_112_cast_cast_cast_cast_fu_2118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_112_cast_cast_cast_cast_reg_2893 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal zext_ln2590_fu_2127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2590_reg_2899 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_189_fu_2139_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal u_189_reg_2907 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal add_ln2358_fu_2149_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2358_reg_2912 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln2590_fu_2134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln2358_2_fu_2221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2358_2_reg_2922 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal trunc_ln2374_fu_2225_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2374_reg_2927 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln2370_fu_2239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2370_reg_2935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal icmp_ln2361_fu_2229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vla1_addr_285_reg_2945 : STD_LOGIC_VECTOR (11 downto 0);
    signal u_188_fu_2318_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_188_reg_2951 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2374_1_fu_2378_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal grp_modp_montymul_fu_660_ap_ready : STD_LOGIC;
    signal grp_modp_montymul_fu_660_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_660_b : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_660_p : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_660_p0i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_898_ap_start : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_898_ap_done : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_898_ap_idle : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_898_ap_ready : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_ce0 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_ce1 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_898_vla1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_ap_start : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_915_ap_done : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_915_ap_idle : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_915_ap_ready : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_915_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_vla1_ce0 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_915_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_vla1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_vla1_ce1 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_915_vla1_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_vla1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_a : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_modp_NTT2_ext_1_fu_915_stride : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_928_ap_start : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_928_ap_done : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_928_ap_idle : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_928_ap_ready : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_ce0 : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_ce1 : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_928_vla1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_r_10_phi_fu_438_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_10_reg_435 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_84_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_62_reg_455 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_7_reg_467 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_g_assign_6_phi_fu_479_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_assign_6_reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_9_reg_486 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_z_63_phi_fu_500_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal x1_2_reg_517 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_116_reg_528 : STD_LOGIC_VECTOR (9 downto 0);
    signal v_021_reg_539 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal v_27_reg_550 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal idx_reg_561 : STD_LOGIC_VECTOR (16 downto 0);
    signal idx91_reg_573 : STD_LOGIC_VECTOR (16 downto 0);
    signal phi_ln1587_reg_585 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_14_reg_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_28_reg_605 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal idx93_reg_616 : STD_LOGIC_VECTOR (16 downto 0);
    signal cc_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_fu_1310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln937_fu_1395_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_898_ap_start_reg : STD_LOGIC := '0';
    signal grp_modp_NTT2_ext_1_fu_915_ap_start_reg : STD_LOGIC := '0';
    signal grp_modp_iNTT2_ext_1_fu_928_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal zext_ln966_fu_1485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln967_1_fu_1517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln968_2_fu_1557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2564_1_fu_1604_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2564_3_fu_1684_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1601_fu_1794_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1621_fu_1918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2571_fu_2013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2577_1_fu_2086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2577_2_fu_2101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2358_fu_2182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2370_fu_2276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2374_fu_2313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_112_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx97_fu_206 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln2590_1_fu_2324_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal idx95_fu_210 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2590_2_fu_2329_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal u_fu_214 : STD_LOGIC_VECTOR (9 downto 0);
    signal w_53_fu_1646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_82_fu_2006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2375_fu_2402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scl_cast_fu_946_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln2539_1_fu_978_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_1014_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2542_fu_1022_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln56_fu_1036_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2543_1_fu_1044_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2536_4_fu_1010_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln2539_fu_974_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln2544_fu_1054_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln2544_fu_1060_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2544_1_fu_1082_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_fu_970_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_9_fu_1110_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1584_fu_1163_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1584_fu_1167_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1584_fu_1163_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal y_53_fu_1171_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln656_fu_1181_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln656_fu_1181_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln656_fu_1177_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_fu_1181_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_54_fu_1193_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_54_fu_1193_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln657_fu_1199_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_54_fu_1193_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_fu_1199_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_55_fu_1211_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_fu_1217_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln658_fu_1217_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_56_fu_1227_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1232_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_56_fu_1227_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1232_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1249_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1249_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln685_fu_1269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln685_fu_1275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_166_fu_1281_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_fu_1289_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_fu_1297_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_fu_1302_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_fu_1306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln735_fu_1318_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln757_fu_1322_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln757_fu_1330_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln757_fu_1335_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln757_fu_1339_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln757_fu_1343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal R2_fu_1349_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln779_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln779_fu_1369_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_fu_1384_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln813_fu_1441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln813_fu_1445_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln813_fu_1435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln813_fu_1449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln813_fu_1457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln966_fu_1480_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln60_fu_1490_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln967_fu_1498_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln967_fu_1502_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln26_fu_1507_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln968_fu_1522_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln61_fu_1531_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln968_1_fu_1538_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln968_1_fu_1542_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln27_fu_1547_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln62_fu_1577_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln2564_fu_1585_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2564_fu_1589_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln28_fu_1594_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2534_1_fu_1609_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_169_fu_1617_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln635_fu_1625_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln635_fu_1633_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln635_fu_1638_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln635_fu_1642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2564_2_fu_1653_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2564_1_fu_1656_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2564_1_fu_1661_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2564_2_fu_1669_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln2564_1_fu_1674_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2534_1_fu_1703_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2534_1_fu_1707_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln64_fu_1712_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln2568_fu_1725_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln63_fu_1735_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2567_1_fu_1742_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1587_fu_1756_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1601_3_fu_1766_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln65_fu_1771_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1601_2_fu_1779_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln29_fu_1784_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_54_fu_1805_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_170_fu_1810_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1602_fu_1818_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln1602_fu_1826_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1598_fu_1831_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1598_fu_1835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_fu_1844_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_56_fu_1839_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_10_fu_1850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_171_fu_1856_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_7_fu_1864_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_5_fu_1872_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_5_fu_1877_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_7_fu_1881_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1621_fu_1891_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln67_fu_1895_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1621_2_fu_1903_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln1621_2_fu_1908_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln22_fu_1942_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1621_3_fu_1952_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1621_fu_1956_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln1621_fu_1962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1621_fu_1966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln697_fu_1972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_172_fu_1977_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_fu_1985_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln697_fu_1993_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln697_fu_1998_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln697_fu_2002_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2534_2_fu_2028_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2534_3_fu_2032_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2534_1_fu_2037_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln2577_fu_2050_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2577_fu_2054_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2577_fu_2058_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln66_fu_2063_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2577_1_fu_2071_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln30_fu_2076_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_21_fu_2045_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln2577_1_fu_2091_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal u_112_cast_cast_cast_fu_2115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub9_i_fu_2122_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub9_i_fu_2122_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln2534_fu_2145_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2358_2_fu_2154_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln57_fu_2159_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2358_1_fu_2167_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln2358_1_fu_2172_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln_fu_2187_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln2358_1_fu_2197_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln2358_fu_2201_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ysign_fu_2207_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln2358_fu_2217_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal v_fu_2234_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2370_fu_2244_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2370_fu_2248_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln58_fu_2253_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2370_1_fu_2261_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln_fu_2266_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2374_2_fu_2281_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2374_fu_2285_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln59_fu_2290_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2374_1_fu_2298_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln25_fu_2303_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal wy_fu_2348_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln2371_fu_2354_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2371_fu_2359_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal wys_fu_2363_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal wys_fu_2363_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tw_1_fu_2373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2364_fu_2369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln2374_fu_2382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2361_fu_2388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_fu_2392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2364_fu_2398_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component solve_NTRU_modp_montymul IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (31 downto 0);
        b : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (31 downto 0);
        p0i : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solve_NTRU_zint_rebuild_CRT_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce1 : OUT STD_LOGIC;
        vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        xx : IN STD_LOGIC_VECTOR (13 downto 0);
        xlen : IN STD_LOGIC_VECTOR (8 downto 0);
        xstride : IN STD_LOGIC_VECTOR (8 downto 0);
        num : IN STD_LOGIC_VECTOR (63 downto 0);
        normalize_signed : IN STD_LOGIC_VECTOR (0 downto 0);
        tmp : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component solve_NTRU_modp_NTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce1 : OUT STD_LOGIC;
        vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        stride : IN STD_LOGIC_VECTOR (63 downto 0);
        gm : IN STD_LOGIC_VECTOR (63 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (31 downto 0);
        p0i : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solve_NTRU_modp_iNTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce1 : OUT STD_LOGIC;
        vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (13 downto 0);
        stride : IN STD_LOGIC_VECTOR (8 downto 0);
        igm : IN STD_LOGIC_VECTOR (13 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_25s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_31s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_25s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_31s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_modp_mkgm2_1_REV10_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    REV10_U : component solve_NTRU_modp_mkgm2_1_REV10_ROM_AUTO_1R
    generic map (
        DataWidth => 10,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => REV10_address0,
        ce0 => REV10_ce0,
        q0 => REV10_q0);

    grp_modp_montymul_fu_660 : component solve_NTRU_modp_montymul
    port map (
        ap_ready => grp_modp_montymul_fu_660_ap_ready,
        a => grp_modp_montymul_fu_660_a,
        b => grp_modp_montymul_fu_660_b,
        p => grp_modp_montymul_fu_660_p,
        p0i => grp_modp_montymul_fu_660_p0i,
        ap_return => grp_modp_montymul_fu_660_ap_return);

    grp_zint_rebuild_CRT_1_fu_898 : component solve_NTRU_zint_rebuild_CRT_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zint_rebuild_CRT_1_fu_898_ap_start,
        ap_done => grp_zint_rebuild_CRT_1_fu_898_ap_done,
        ap_idle => grp_zint_rebuild_CRT_1_fu_898_ap_idle,
        ap_ready => grp_zint_rebuild_CRT_1_fu_898_ap_ready,
        vla1_address0 => grp_zint_rebuild_CRT_1_fu_898_vla1_address0,
        vla1_ce0 => grp_zint_rebuild_CRT_1_fu_898_vla1_ce0,
        vla1_we0 => grp_zint_rebuild_CRT_1_fu_898_vla1_we0,
        vla1_d0 => grp_zint_rebuild_CRT_1_fu_898_vla1_d0,
        vla1_q0 => vla1_q0,
        vla1_address1 => grp_zint_rebuild_CRT_1_fu_898_vla1_address1,
        vla1_ce1 => grp_zint_rebuild_CRT_1_fu_898_vla1_ce1,
        vla1_we1 => grp_zint_rebuild_CRT_1_fu_898_vla1_we1,
        vla1_d1 => grp_zint_rebuild_CRT_1_fu_898_vla1_d1,
        vla1_q1 => vla1_q1,
        xx => fk_reg_2551,
        xlen => zext_ln2536_2_reg_2527,
        xstride => zext_ln2536_2_reg_2527,
        num => zext_ln2536_reg_2511,
        normalize_signed => ap_const_lv1_1,
        tmp => t1_reg_2572);

    grp_modp_NTT2_ext_1_fu_915 : component solve_NTRU_modp_NTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_NTT2_ext_1_fu_915_ap_start,
        ap_done => grp_modp_NTT2_ext_1_fu_915_ap_done,
        ap_idle => grp_modp_NTT2_ext_1_fu_915_ap_idle,
        ap_ready => grp_modp_NTT2_ext_1_fu_915_ap_ready,
        vla1_address0 => grp_modp_NTT2_ext_1_fu_915_vla1_address0,
        vla1_ce0 => grp_modp_NTT2_ext_1_fu_915_vla1_ce0,
        vla1_we0 => grp_modp_NTT2_ext_1_fu_915_vla1_we0,
        vla1_d0 => grp_modp_NTT2_ext_1_fu_915_vla1_d0,
        vla1_q0 => vla1_q0,
        vla1_address1 => grp_modp_NTT2_ext_1_fu_915_vla1_address1,
        vla1_ce1 => grp_modp_NTT2_ext_1_fu_915_vla1_ce1,
        vla1_we1 => grp_modp_NTT2_ext_1_fu_915_vla1_we1,
        vla1_d1 => grp_modp_NTT2_ext_1_fu_915_vla1_d1,
        vla1_q1 => vla1_q1,
        a => grp_modp_NTT2_ext_1_fu_915_a,
        stride => grp_modp_NTT2_ext_1_fu_915_stride,
        gm => tmp_cast_reg_2492,
        logn => logn_cast7_reg_2486,
        p => zext_ln1584_reg_2675,
        p0i => zext_ln1584_1_reg_2684);

    grp_modp_iNTT2_ext_1_fu_928 : component solve_NTRU_modp_iNTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_iNTT2_ext_1_fu_928_ap_start,
        ap_done => grp_modp_iNTT2_ext_1_fu_928_ap_done,
        ap_idle => grp_modp_iNTT2_ext_1_fu_928_ap_idle,
        ap_ready => grp_modp_iNTT2_ext_1_fu_928_ap_ready,
        vla1_address0 => grp_modp_iNTT2_ext_1_fu_928_vla1_address0,
        vla1_ce0 => grp_modp_iNTT2_ext_1_fu_928_vla1_ce0,
        vla1_we0 => grp_modp_iNTT2_ext_1_fu_928_vla1_we0,
        vla1_d0 => grp_modp_iNTT2_ext_1_fu_928_vla1_d0,
        vla1_q0 => vla1_q0,
        vla1_address1 => grp_modp_iNTT2_ext_1_fu_928_vla1_address1,
        vla1_ce1 => grp_modp_iNTT2_ext_1_fu_928_vla1_ce1,
        vla1_we1 => grp_modp_iNTT2_ext_1_fu_928_vla1_we1,
        vla1_d1 => grp_modp_iNTT2_ext_1_fu_928_vla1_d1,
        vla1_q1 => vla1_q1,
        a => x_reg_2819,
        stride => zext_ln2536_2_reg_2527,
        igm => igm_reg_2541,
        logn => logn_cast7_reg_2486,
        p => p_reg_2645,
        p0i => p0i_reg_2669);

    mul_25s_24ns_31_1_1_U209 : component solve_NTRU_mul_25s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln656_fu_1181_p0,
        din1 => mul_ln656_fu_1181_p1,
        dout => mul_ln656_fu_1181_p2);

    mul_31s_24ns_31_1_1_U210 : component solve_NTRU_mul_31s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => y_54_fu_1193_p0,
        din1 => y_54_fu_1193_p1,
        dout => y_54_fu_1193_p2);

    mul_25s_31s_31_1_1_U211 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln657_fu_1199_p0,
        din1 => y_54_fu_1193_p2,
        dout => mul_ln657_fu_1199_p2);

    mul_31s_31s_31_1_1_U212 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_55_fu_1211_p0,
        din1 => y_54_fu_1193_p2,
        dout => y_55_fu_1211_p2);

    mul_25s_31s_31_1_1_U213 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln658_fu_1217_p0,
        din1 => y_55_reg_2663,
        dout => mul_ln658_fu_1217_p2);

    mul_31s_31s_31_1_1_U214 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_56_fu_1227_p0,
        din1 => y_55_reg_2663,
        dout => y_56_fu_1227_p2);

    mul_25s_31s_31_1_1_U215 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln659_fu_1232_p0,
        din1 => y_56_fu_1227_p2,
        dout => mul_ln659_fu_1232_p2);

    mul_31s_31s_31_1_1_U216 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => p0i_fu_1249_p0,
        din1 => p0i_fu_1249_p1,
        dout => p0i_fu_1249_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_modp_NTT2_ext_1_fu_915_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_NTT2_ext_1_fu_915_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln2568_fu_1692_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln2562_fu_1562_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
                    grp_modp_NTT2_ext_1_fu_915_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_NTT2_ext_1_fu_915_ap_ready = ap_const_logic_1)) then 
                    grp_modp_NTT2_ext_1_fu_915_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_modp_iNTT2_ext_1_fu_928_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_iNTT2_ext_1_fu_928_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln2574_fu_2017_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                    grp_modp_iNTT2_ext_1_fu_928_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_iNTT2_ext_1_fu_928_ap_ready = ap_const_logic_1)) then 
                    grp_modp_iNTT2_ext_1_fu_928_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_zint_rebuild_CRT_1_fu_898_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zint_rebuild_CRT_1_fu_898_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln2551_fu_1137_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_zint_rebuild_CRT_1_fu_898_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zint_rebuild_CRT_1_fu_898_ap_ready = ap_const_logic_1)) then 
                    grp_zint_rebuild_CRT_1_fu_898_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cc_reg_627_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                cc_reg_627 <= w_fu_2392_p2(31 downto 31);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                cc_reg_627 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    i_9_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i_9_reg_486 <= i_12_reg_2742;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_0))) then 
                i_9_reg_486 <= ap_const_lv6_1E;
            end if; 
        end if;
    end process;

    i_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                i_reg_424 <= i_11_reg_2708;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i_reg_424 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idx91_reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                idx91_reg_573 <= ap_const_lv17_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                idx91_reg_573 <= add_ln2568_2_reg_2864;
            end if; 
        end if;
    end process;

    idx93_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                idx93_reg_616 <= add_ln2574_1_reg_2888;
            elsif (((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                idx93_reg_616 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    idx95_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2551_fu_1137_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                idx95_fu_210 <= ap_const_lv17_0;
            elsif (((icmp_ln2361_fu_2229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                idx95_fu_210 <= add_ln2590_2_fu_2329_p2;
            end if; 
        end if;
    end process;

    idx97_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2551_fu_1137_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                idx97_fu_206 <= ap_const_lv18_0;
            elsif (((icmp_ln2361_fu_2229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                idx97_fu_206 <= add_ln2590_1_fu_2324_p2;
            end if; 
        end if;
    end process;

    idx_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                idx_reg_561 <= ap_const_lv17_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                idx_reg_561 <= add_ln2568_1_reg_2859;
            end if; 
        end if;
    end process;

    k_7_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_1))) then 
                k_7_reg_467 <= k_10_fu_1406_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                k_7_reg_467 <= logn;
            end if; 
        end if;
    end process;

    phi_ln1587_reg_585_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2568_fu_1692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                phi_ln1587_reg_585 <= flen_cast12_reg_2476;
            elsif (((icmp_ln1597_reg_2839 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                phi_ln1587_reg_585 <= u_191_reg_2829;
            end if; 
        end if;
    end process;

    r_10_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                r_10_reg_435 <= grp_modp_montymul_fu_660_ap_return;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                r_10_reg_435 <= zext_ln757_9_fu_1359_p1;
            end if; 
        end if;
    end process;

    reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                reg_497 <= z_80_fu_1463_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_0))) then 
                reg_497 <= z_83_reg_2690;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                reg_497 <= grp_modp_montymul_fu_660_ap_return;
            end if; 
        end if;
    end process;

    reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                reg_506 <= x2_2_reg_861;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                reg_506 <= z_83_reg_2690;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_0)))) then 
                reg_506 <= grp_modp_montymul_fu_660_ap_return;
            end if; 
        end if;
    end process;

    reg_639_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                reg_639 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2374_1_fu_2378_p1),32));
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                reg_639 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv31_0),32));
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln781_fu_1389_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1373_p2 = ap_const_lv1_0))) then 
                reg_639 <= grp_modp_montymul_fu_660_ap_return;
            end if; 
        end if;
    end process;

    reg_651_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                reg_651 <= u_188_reg_2951;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                reg_651 <= u_112_cast_cast_cast_cast_reg_2893;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                reg_651 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_modp_montymul_fu_660_ap_return),64));
            end if; 
        end if;
    end process;

    u_112_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                u_112_fu_202 <= ap_const_lv8_0;
            elsif (((icmp_ln2574_fu_2017_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                u_112_fu_202 <= u_192_reg_2614;
            end if; 
        end if;
    end process;

    u_116_reg_528_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                u_116_reg_528 <= u_190_reg_2755;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                u_116_reg_528 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    u_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2551_fu_1137_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                u_fu_214 <= ap_const_lv10_0;
            elsif (((icmp_ln2361_fu_2229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                u_fu_214 <= u_189_reg_2907;
            end if; 
        end if;
    end process;

    v_021_reg_539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln962_fu_1469_p2 = ap_const_lv1_1))) then 
                v_021_reg_539 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                v_021_reg_539 <= v_26_reg_2773;
            end if; 
        end if;
    end process;

    v_27_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v_27_reg_550 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                v_27_reg_550 <= v_30_reg_2803;
            end if; 
        end if;
    end process;

    v_28_reg_605_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                v_28_reg_605 <= v_29_reg_2872;
            elsif (((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                v_28_reg_605 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    x1_2_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                x1_2_reg_517 <= x1_3_reg_854;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x1_2_reg_517 <= z_83_reg_2690;
            end if; 
        end if;
    end process;

    x_14_reg_594_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2568_fu_1692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                x_14_reg_594 <= ap_const_lv32_0;
            elsif (((icmp_ln1597_reg_2839 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                x_14_reg_594 <= x_22_fu_1885_p2;
            end if; 
        end if;
    end process;

    z_62_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln779_fu_1373_p2 = ap_const_lv1_0))) then
                if ((icmp_ln781_fu_1389_p2 = ap_const_lv1_1)) then 
                    z_62_reg_455 <= z_84_reg_445;
                elsif ((icmp_ln781_fu_1389_p2 = ap_const_lv1_0)) then 
                    z_62_reg_455 <= grp_modp_montymul_fu_660_ap_return;
                end if;
            end if; 
        end if;
    end process;

    z_84_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                z_84_reg_445 <= z_62_reg_455;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                z_84_reg_445 <= z_83_reg_2690;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    Fstride_cast_reg_2497(8 downto 0) <= Fstride_cast_fu_966_p1(8 downto 0);
                add_ln2544_reg_2566 <= add_ln2544_fu_1076_p2;
                fk_reg_2551 <= fk_fu_1048_p2;
                    flen_cast12_reg_2476(7 downto 0) <= flen_cast12_fu_950_p1(7 downto 0);
                    fstride_cast_reg_2481(7 downto 0) <= fstride_cast_fu_954_p1(7 downto 0);
                igm_reg_2541 <= igm_fu_1026_p2;
                    k_9_cast43_reg_2592(2 downto 0) <= k_9_cast43_fu_1116_p1(2 downto 0);
                    logn_cast7_reg_2486(3 downto 0) <= logn_cast7_fu_958_p1(3 downto 0);
                n_reg_2502 <= n_fu_982_p2;
                scl_cast_reg_2471 <= scl_cast_fu_946_p1;
                    shl_ln2544_2_reg_2556(10 downto 1) <= shl_ln2544_2_fu_1064_p3(10 downto 1);
                t1_reg_2572 <= t1_fu_1090_p2;
                tlen_reg_2516 <= tlen_fu_992_p2;
                    tmp_cast_reg_2492(13 downto 0) <= tmp_cast_fu_962_p1(13 downto 0);
                    x_assign_85_cast_reg_2587(7 downto 0) <= x_assign_85_cast_fu_1106_p1(7 downto 0);
                x_assign_reg_2582 <= x_assign_fu_1100_p2;
                    zext_ln2534_reg_2577(13 downto 0) <= zext_ln2534_fu_1096_p1(13 downto 0);
                    zext_ln2536_1_reg_2521(7 downto 0) <= zext_ln2536_1_fu_998_p1(7 downto 0);
                    zext_ln2536_2_reg_2527(7 downto 0) <= zext_ln2536_2_fu_1002_p1(7 downto 0);
                    zext_ln2536_3_reg_2534(7 downto 0) <= zext_ln2536_3_fu_1006_p1(7 downto 0);
                    zext_ln2536_reg_2511(9 downto 0) <= zext_ln2536_fu_988_p1(9 downto 0);
                    zext_ln2543_reg_2546(9 downto 0) <= zext_ln2543_fu_1032_p1(9 downto 0);
                    zext_ln2544_reg_2561(10 downto 1) <= zext_ln2544_fu_1072_p1(10 downto 1);
                    zext_ln2551_reg_2597(7 downto 0) <= zext_ln2551_fu_1120_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2568_fu_1692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                add_ln1601_reg_2813 <= add_ln1601_fu_1729_p2;
                x_16_reg_2808 <= x_16_fu_1720_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2590_fu_2134_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                add_ln2358_reg_2912 <= add_ln2358_fu_2149_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2562_fu_1562_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                add_ln2534_reg_2788 <= add_ln2534_fu_1612_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1597_reg_2839 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                add_ln2568_1_reg_2859 <= add_ln2568_1_fu_1932_p2;
                add_ln2568_2_reg_2864 <= add_ln2568_2_fu_1937_p2;
                lshr_ln31_reg_2854 <= x_16_reg_2808(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2574_fu_2017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                add_ln2574_1_reg_2888 <= add_ln2574_1_fu_2106_p2;
                vla1_addr_292_reg_2882 <= zext_ln2577_2_fu_2101_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                add_ln968_reg_2765 <= add_ln968_fu_1526_p2;
                x2_2_reg_861 <= grp_modp_montymul_fu_660_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_0))) then
                e_reg_2729 <= e_fu_1412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_1)))) then
                g_assign_6_reg_476 <= grp_modp_montymul_fu_660_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                i_11_reg_2708 <= i_11_fu_1378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_0))) then
                i_12_reg_2742 <= i_12_fu_1429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                icmp_ln1597_reg_2839 <= icmp_ln1597_fu_1799_p2;
                u_191_reg_2829 <= u_191_fu_1760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2361_fu_2229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                icmp_ln2370_reg_2935 <= icmp_ln2370_fu_2239_p2;
                u_188_reg_2951 <= u_188_fu_2318_p2;
                vla1_addr_285_reg_2945 <= zext_ln2374_fu_2313_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                ig_reg_833 <= grp_modp_montymul_fu_660_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p0i_reg_2669 <= p0i_fu_1249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                p_reg_2645 <= PRIMES_p_q0;
                sext_ln1584_reg_2656 <= sext_ln1584_fu_1167_p1;
                y_55_reg_2663 <= y_55_fu_1211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                sext_ln808_reg_2734 <= sext_ln808_fu_1417_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                trunc_ln2374_reg_2927 <= trunc_ln2374_fu_2225_p1;
                    zext_ln2358_2_reg_2922(30 downto 0) <= zext_ln2358_2_fu_2221_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2562_fu_1562_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                trunc_ln2564_reg_2778 <= trunc_ln2564_fu_1573_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                    u_112_cast_cast_cast_cast_reg_2893(31 downto 0) <= u_112_cast_cast_cast_cast_fu_2118_p1(31 downto 0);
                    zext_ln2590_reg_2899(5 downto 0) <= zext_ln2590_fu_2127_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                u_189_reg_2907 <= u_189_fu_2139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                u_190_reg_2755 <= u_190_fu_1474_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                u_192_reg_2614 <= u_192_fu_1142_p2;
                    zext_ln2551_1_reg_2606(7 downto 0) <= zext_ln2551_1_fu_1132_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                v_26_reg_2773 <= v_26_fu_1567_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                v_29_reg_2872 <= v_29_fu_2022_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                v_30_reg_2803 <= v_30_fu_1697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln962_fu_1469_p2 = ap_const_lv1_0))) then
                x1_3_reg_854 <= grp_modp_montymul_fu_660_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                x_22_reg_2843 <= x_22_fu_1885_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2568_fu_1692_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                x_reg_2819 <= x_fu_1746_p2;
                    zext_ln2573_reg_2824(13 downto 0) <= zext_ln2573_fu_1751_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                z_83_reg_2690 <= z_83_fu_1263_p2;
                    zext_ln1584_1_reg_2684(30 downto 0) <= zext_ln1584_1_fu_1259_p1(30 downto 0);
                    zext_ln1584_reg_2675(30 downto 0) <= zext_ln1584_fu_1255_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                    zext_ln2567_reg_2794(10 downto 0) <= zext_ln2567_fu_1689_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    zext_ln757_9_reg_2698(30 downto 0) <= zext_ln757_9_fu_1359_p1(30 downto 0);
            end if;
        end if;
    end process;
    flen_cast12_reg_2476(8) <= '0';
    fstride_cast_reg_2481(16 downto 8) <= "000000000";
    logn_cast7_reg_2486(31 downto 4) <= "0000000000000000000000000000";
    tmp_cast_reg_2492(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    Fstride_cast_reg_2497(17 downto 9) <= "000000000";
    zext_ln2536_reg_2511(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln2536_1_reg_2521(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln2536_2_reg_2527(8) <= '0';
    zext_ln2536_3_reg_2534(16 downto 8) <= "000000000";
    zext_ln2543_reg_2546(10) <= '0';
    shl_ln2544_2_reg_2556(0) <= '0';
    zext_ln2544_reg_2561(0) <= '0';
    zext_ln2544_reg_2561(11) <= '0';
    zext_ln2534_reg_2577(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    x_assign_85_cast_reg_2587(31 downto 8) <= "000000000000000000000000";
    k_9_cast43_reg_2592(9 downto 3) <= "0000000";
    zext_ln2551_reg_2597(11 downto 8) <= "0000";
    zext_ln2551_1_reg_2606(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1584_reg_2675(31) <= '0';
    zext_ln1584_1_reg_2684(31) <= '0';
    zext_ln757_9_reg_2698(31) <= '0';
    zext_ln2567_reg_2794(11) <= '0';
    zext_ln2573_reg_2824(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    u_112_cast_cast_cast_cast_reg_2893(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln2590_reg_2899(31 downto 6) <= "00000000000000000000000000";
    zext_ln2358_2_reg_2922(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state14, tmp_168_fu_1421_p3, ap_CS_fsm_state10, icmp_ln779_fu_1373_p2, ap_CS_fsm_state13, icmp_ln954_fu_1400_p2, ap_CS_fsm_state17, icmp_ln962_fu_1469_p2, ap_CS_fsm_state2, icmp_ln2551_fu_1137_p2, ap_CS_fsm_state20, icmp_ln2562_fu_1562_p2, ap_CS_fsm_state22, ap_CS_fsm_state23, icmp_ln2568_fu_1692_p2, icmp_ln1597_reg_2839, ap_CS_fsm_state25, ap_CS_fsm_state28, icmp_ln2574_fu_2017_p2, ap_CS_fsm_state32, ap_CS_fsm_state33, icmp_ln2590_fu_2134_p2, ap_CS_fsm_state35, icmp_ln2361_fu_2229_p2, grp_zint_rebuild_CRT_1_fu_898_ap_done, grp_modp_NTT2_ext_1_fu_915_ap_done, grp_modp_iNTT2_ext_1_fu_928_ap_done, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln2551_fu_1137_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln779_fu_1373_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln962_fu_1469_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln2562_fu_1562_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state22 => 
                if (((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln2568_fu_1692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln1597_reg_2839 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state27 => 
                if (((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((icmp_ln2574_fu_2017_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state31 => 
                if (((grp_modp_iNTT2_ext_1_fu_928_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((grp_zint_rebuild_CRT_1_fu_898_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((icmp_ln2590_fu_2134_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln2361_fu_2229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Fstride_cast_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Fstride),18));
    PRIMES_g_address0 <= zext_ln2551_1_reg_2606(10 - 1 downto 0);

    PRIMES_g_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            PRIMES_g_ce0 <= ap_const_logic_1;
        else 
            PRIMES_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    PRIMES_p_address0_assign_proc : process(zext_ln2551_1_fu_1132_p1, ap_CS_fsm_state2, icmp_ln2551_fu_1137_p2, ap_CS_fsm_state32)
    begin
        if (((icmp_ln2551_fu_1137_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            PRIMES_p_address0 <= zext_ln2551_1_fu_1132_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            PRIMES_p_address0 <= ap_const_lv10_0;
        else 
            PRIMES_p_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    PRIMES_p_ce0_assign_proc : process(ap_CS_fsm_state2, icmp_ln2551_fu_1137_p2, ap_CS_fsm_state32)
    begin
        if (((icmp_ln2551_fu_1137_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            PRIMES_p_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            PRIMES_p_ce0 <= ap_const_logic_0;
        else 
            PRIMES_p_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    R2_fu_1349_p4 <= add_ln757_fu_1343_p2(31 downto 1);
    REV10_address0 <= zext_ln966_fu_1485_p1(10 - 1 downto 0);

    REV10_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            REV10_ce0 <= ap_const_logic_1;
        else 
            REV10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1601_2_fu_1779_p2 <= std_logic_vector(unsigned(shl_ln65_fu_1771_p3) + unsigned(f_r));
    add_ln1601_3_fu_1766_p2 <= std_logic_vector(unsigned(add_ln1601_reg_2813) + unsigned(sext_ln1587_fu_1756_p1));
    add_ln1601_fu_1729_p2 <= std_logic_vector(unsigned(trunc_ln2568_fu_1725_p1) + unsigned(ap_const_lv12_FFF));
    add_ln1621_2_fu_1903_p2 <= std_logic_vector(unsigned(shl_ln67_fu_1895_p3) + unsigned(f_r));
    add_ln1621_fu_1891_p2 <= std_logic_vector(unsigned(add_ln1601_reg_2813) + unsigned(zext_ln2551_reg_2597));
    add_ln2358_1_fu_2167_p2 <= std_logic_vector(unsigned(shl_ln57_fu_2159_p3) + unsigned(tmp));
    add_ln2358_2_fu_2154_p2 <= std_logic_vector(unsigned(add_ln2358_fu_2149_p2) + unsigned(zext_ln2551_reg_2597));
    add_ln2358_fu_2149_p2 <= std_logic_vector(unsigned(trunc_ln2534_fu_2145_p1) + unsigned(zext_ln2544_reg_2561));
    add_ln2370_1_fu_2261_p2 <= std_logic_vector(unsigned(shl_ln58_fu_2253_p3) + unsigned(tmp));
    add_ln2370_fu_2248_p2 <= std_logic_vector(unsigned(trunc_ln2370_fu_2244_p1) + unsigned(add_ln2358_reg_2912));
    add_ln2374_1_fu_2298_p2 <= std_logic_vector(unsigned(shl_ln59_fu_2290_p3) + unsigned(F));
    add_ln2374_fu_2285_p2 <= std_logic_vector(unsigned(trunc_ln2374_2_fu_2281_p1) + unsigned(trunc_ln2374_reg_2927));
    add_ln2534_1_fu_1707_p2 <= std_logic_vector(unsigned(trunc_ln2534_1_fu_1703_p1) + unsigned(zext_ln2567_reg_2794));
    add_ln2534_3_fu_2032_p2 <= std_logic_vector(unsigned(trunc_ln2534_2_fu_2028_p1) + unsigned(zext_ln2567_reg_2794));
    add_ln2534_fu_1612_p2 <= std_logic_vector(unsigned(zext_ln2534_1_fu_1609_p1) + unsigned(shl_ln2544_2_reg_2556));
    add_ln2544_fu_1076_p2 <= std_logic_vector(unsigned(zext_ln2544_fu_1072_p1) + unsigned(trunc_ln2544_fu_1060_p1));
    add_ln2564_1_fu_1656_p2 <= std_logic_vector(unsigned(zext_ln2564_2_fu_1653_p1) + unsigned(add_ln2544_reg_2566));
    add_ln2564_2_fu_1669_p2 <= std_logic_vector(unsigned(shl_ln2564_1_fu_1661_p3) + unsigned(tmp));
    add_ln2564_fu_1589_p2 <= std_logic_vector(unsigned(zext_ln2564_fu_1585_p1) + unsigned(k));
    add_ln2568_1_fu_1932_p2 <= std_logic_vector(unsigned(idx_reg_561) + unsigned(fstride_cast_reg_2481));
    add_ln2568_2_fu_1937_p2 <= std_logic_vector(unsigned(zext_ln2536_3_reg_2534) + unsigned(idx91_reg_573));
    add_ln2574_1_fu_2106_p2 <= std_logic_vector(unsigned(zext_ln2536_3_reg_2534) + unsigned(idx93_reg_616));
    add_ln2577_1_fu_2071_p2 <= std_logic_vector(unsigned(shl_ln66_fu_2063_p3) + unsigned(tmp));
    add_ln2577_fu_2058_p2 <= std_logic_vector(unsigned(zext_ln2577_fu_2054_p1) + unsigned(add_ln2544_reg_2566));
    add_ln2590_1_fu_2324_p2 <= std_logic_vector(unsigned(idx97_fu_206) + unsigned(Fstride_cast_reg_2497));
    add_ln2590_2_fu_2329_p2 <= std_logic_vector(unsigned(zext_ln2536_3_reg_2534) + unsigned(idx95_fu_210));
    add_ln685_10_fu_1850_p2 <= std_logic_vector(unsigned(add_ln685_fu_1844_p2) + unsigned(w_56_fu_1839_p2));
    add_ln685_fu_1844_p2 <= std_logic_vector(unsigned(w_54_fu_1805_p2) + unsigned(zext_ln1598_fu_1835_p1));
    add_ln757_fu_1343_p2 <= std_logic_vector(unsigned(zext_ln757_fu_1339_p1) + unsigned(grp_modp_montymul_fu_660_ap_return));
    add_ln967_fu_1502_p2 <= std_logic_vector(unsigned(zext_ln967_fu_1498_p1) + unsigned(tmp));
    add_ln968_1_fu_1542_p2 <= std_logic_vector(unsigned(zext_ln968_1_fu_1538_p1) + unsigned(tmp));
    add_ln968_fu_1526_p2 <= std_logic_vector(unsigned(zext_ln2543_reg_2546) + unsigned(zext_ln968_fu_1522_p1));
    and_ln1602_fu_1826_p2 <= (select_ln1602_fu_1818_p3 and p_reg_2645);
    and_ln1621_fu_1966_p2 <= (z_84_reg_445 and sext_ln1621_fu_1962_p1);
    and_ln635_fu_1633_p2 <= (select_ln635_fu_1625_p3 and p_reg_2645);
    and_ln685_5_fu_1872_p2 <= (select_ln685_7_fu_1864_p3 and p_reg_2645);
    and_ln685_fu_1297_p2 <= (select_ln685_fu_1289_p3 and p_reg_2645);
    and_ln697_fu_1993_p2 <= (select_ln697_fu_1985_p3 and p_reg_2645);
    and_ln757_fu_1330_p2 <= (select_ln757_fu_1322_p3 and p_reg_2645);
    and_ln781_fu_1384_p2 <= (x_assign_reg_2582 and trunc_ln779_fu_1369_p1);
    and_ln813_fu_1457_p2 <= (xor_ln813_fu_1435_p2 and select_ln813_fu_1449_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_915_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_915_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_915_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;

    ap_ST_fsm_state31_blk_assign_proc : process(grp_modp_iNTT2_ext_1_fu_928_ap_done)
    begin
        if ((grp_modp_iNTT2_ext_1_fu_928_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state32_blk_assign_proc : process(grp_zint_rebuild_CRT_1_fu_898_ap_done)
    begin
        if ((grp_zint_rebuild_CRT_1_fu_898_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state33, icmp_ln2590_fu_2134_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln2590_fu_2134_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_g_assign_6_phi_fu_479_p4 <= g_assign_6_reg_476;
    ap_phi_mux_r_10_phi_fu_438_p4 <= r_10_reg_435;
    ap_phi_mux_z_63_phi_fu_500_p4 <= reg_497;

    ap_ready_assign_proc : process(ap_CS_fsm_state33, icmp_ln2590_fu_2134_p2)
    begin
        if (((icmp_ln2590_fu_2134_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    e_fu_1412_p2 <= std_logic_vector(unsigned(zext_ln1584_reg_2675) + unsigned(ap_const_lv32_FFFFFFFE));
    empty_fu_970_p1 <= logn(3 - 1 downto 0);
    fk_fu_1048_p2 <= std_logic_vector(unsigned(zext_ln2543_1_fu_1044_p1) + unsigned(tmp));
    flen_cast12_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(flen_r),9));
    fstride_cast_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fstride_r),17));

    grp_modp_NTT2_ext_1_fu_915_a_assign_proc : process(zext_ln2534_reg_2577, ap_CS_fsm_state22, zext_ln2573_reg_2824, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_modp_NTT2_ext_1_fu_915_a <= zext_ln2573_reg_2824;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_modp_NTT2_ext_1_fu_915_a <= zext_ln2534_reg_2577;
        else 
            grp_modp_NTT2_ext_1_fu_915_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_NTT2_ext_1_fu_915_ap_start <= grp_modp_NTT2_ext_1_fu_915_ap_start_reg;

    grp_modp_NTT2_ext_1_fu_915_stride_assign_proc : process(zext_ln2536_1_reg_2521, ap_CS_fsm_state22, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_modp_NTT2_ext_1_fu_915_stride <= zext_ln2536_1_reg_2521;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_modp_NTT2_ext_1_fu_915_stride <= ap_const_lv64_1;
        else 
            grp_modp_NTT2_ext_1_fu_915_stride <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_iNTT2_ext_1_fu_928_ap_start <= grp_modp_iNTT2_ext_1_fu_928_ap_start_reg;

    grp_modp_montymul_fu_660_a_assign_proc : process(vla1_q1, reg_497, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_506, ap_CS_fsm_state14, tmp_168_fu_1421_p3, ap_CS_fsm_state29, ap_CS_fsm_state10, icmp_ln779_fu_1373_p2, icmp_ln781_fu_1389_p2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln954_fu_1400_p2, ap_CS_fsm_state16, ap_CS_fsm_state17, icmp_ln962_fu_1469_p2, ap_CS_fsm_state18, zext_ln757_9_reg_2698, ap_CS_fsm_state9, ap_CS_fsm_state15, ap_CS_fsm_state25, r_10_reg_435, z_84_reg_445, g_assign_6_reg_476, ap_phi_mux_z_63_phi_fu_500_p4, x1_2_reg_517, x_14_reg_594, ap_CS_fsm_state30, z_fu_1310_p2, zext_ln937_fu_1395_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_modp_montymul_fu_660_a <= vla1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_modp_montymul_fu_660_a <= x_14_reg_594;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln962_fu_1469_p2 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_660_a <= x1_2_reg_517;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_660_a <= zext_ln757_9_reg_2698;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_modp_montymul_fu_660_a <= reg_506;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_660_a <= ap_phi_mux_z_63_phi_fu_500_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_660_a <= g_assign_6_reg_476;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_modp_montymul_fu_660_a <= zext_ln937_fu_1395_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_modp_montymul_fu_660_a <= r_10_reg_435;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln781_fu_1389_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1373_p2 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_660_a <= z_84_reg_445;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_modp_montymul_fu_660_a <= reg_497;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_modp_montymul_fu_660_a <= z_fu_1310_p2;
        else 
            grp_modp_montymul_fu_660_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_660_b_assign_proc : process(vla1_q0, reg_497, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_506, ap_CS_fsm_state14, tmp_168_fu_1421_p3, ap_CS_fsm_state29, ap_CS_fsm_state10, icmp_ln779_fu_1373_p2, icmp_ln781_fu_1389_p2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln954_fu_1400_p2, ig_reg_833, ap_CS_fsm_state16, ap_CS_fsm_state17, icmp_ln962_fu_1469_p2, ap_CS_fsm_state18, zext_ln757_9_reg_2698, ap_CS_fsm_state9, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_phi_mux_r_10_phi_fu_438_p4, r_10_reg_435, ap_phi_mux_g_assign_6_phi_fu_479_p4, g_assign_6_reg_476, ap_phi_mux_z_63_phi_fu_500_p4, ap_CS_fsm_state30, z_fu_1310_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_modp_montymul_fu_660_b <= vla1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_modp_montymul_fu_660_b <= ig_reg_833;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_660_b <= reg_506;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln962_fu_1469_p2 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_660_b <= g_assign_6_reg_476;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_660_b <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_660_b <= ap_phi_mux_z_63_phi_fu_500_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_660_b <= ap_phi_mux_g_assign_6_phi_fu_479_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_modp_montymul_fu_660_b <= zext_ln757_9_reg_2698;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_modp_montymul_fu_660_b <= r_10_reg_435;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln781_fu_1389_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1373_p2 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_660_b <= ap_phi_mux_r_10_phi_fu_438_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_modp_montymul_fu_660_b <= reg_497;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_modp_montymul_fu_660_b <= z_fu_1310_p2;
        else 
            grp_modp_montymul_fu_660_b <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_660_p_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state14, tmp_168_fu_1421_p3, ap_CS_fsm_state29, ap_CS_fsm_state10, icmp_ln779_fu_1373_p2, icmp_ln781_fu_1389_p2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln954_fu_1400_p2, ap_CS_fsm_state16, ap_CS_fsm_state17, icmp_ln962_fu_1469_p2, ap_CS_fsm_state18, zext_ln1584_fu_1255_p1, zext_ln1584_reg_2675, ap_CS_fsm_state9, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln962_fu_1469_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln781_fu_1389_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1373_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_660_p <= zext_ln1584_reg_2675;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_modp_montymul_fu_660_p <= zext_ln1584_fu_1255_p1;
        else 
            grp_modp_montymul_fu_660_p <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_660_p0i_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state14, tmp_168_fu_1421_p3, ap_CS_fsm_state29, ap_CS_fsm_state10, icmp_ln779_fu_1373_p2, icmp_ln781_fu_1389_p2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln954_fu_1400_p2, ap_CS_fsm_state16, ap_CS_fsm_state17, icmp_ln962_fu_1469_p2, ap_CS_fsm_state18, zext_ln1584_1_fu_1259_p1, zext_ln1584_1_reg_2684, ap_CS_fsm_state9, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln962_fu_1469_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln954_fu_1400_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln781_fu_1389_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1373_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_168_fu_1421_p3 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_660_p0i <= zext_ln1584_1_reg_2684;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_modp_montymul_fu_660_p0i <= zext_ln1584_1_fu_1259_p1;
        else 
            grp_modp_montymul_fu_660_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_zint_rebuild_CRT_1_fu_898_ap_start <= grp_zint_rebuild_CRT_1_fu_898_ap_start_reg;
    i_11_fu_1378_p2 <= std_logic_vector(unsigned(i_reg_424) + unsigned(ap_const_lv32_1));
    i_12_fu_1429_p2 <= std_logic_vector(signed(i_9_reg_486) + signed(ap_const_lv6_3F));
    icmp_ln1597_fu_1799_p2 <= "1" when (u_191_fu_1760_p2 = ap_const_lv9_0) else "0";
    icmp_ln2361_fu_2229_p2 <= "1" when (unsigned(reg_651) < unsigned(Flen)) else "0";
    icmp_ln2370_fu_2239_p2 <= "1" when (unsigned(v_fu_2234_p2) < unsigned(zext_ln2536_1_reg_2521)) else "0";
    icmp_ln2551_fu_1137_p2 <= "1" when (u_112_fu_202 = tlen_reg_2516) else "0";
    icmp_ln2562_fu_1562_p2 <= "1" when (v_021_reg_539 = n_reg_2502) else "0";
    icmp_ln2568_fu_1692_p2 <= "1" when (v_27_reg_550 = n_reg_2502) else "0";
    icmp_ln2574_fu_2017_p2 <= "1" when (v_28_reg_605 = n_reg_2502) else "0";
    icmp_ln2590_fu_2134_p2 <= "1" when (u_fu_214 = n_reg_2502) else "0";
    icmp_ln779_fu_1373_p2 <= "1" when (unsigned(shl_ln779_fu_1363_p2) > unsigned(x_assign_85_cast_reg_2587)) else "0";
    icmp_ln781_fu_1389_p2 <= "1" when (and_ln781_fu_1384_p2 = ap_const_lv8_0) else "0";
    icmp_ln954_fu_1400_p2 <= "1" when (unsigned(k_7_reg_467) < unsigned(ap_const_lv4_A)) else "0";
    icmp_ln962_fu_1469_p2 <= "1" when (u_116_reg_528 = n_reg_2502) else "0";
    igm_fu_1026_p2 <= std_logic_vector(unsigned(zext_ln2542_fu_1022_p1) + unsigned(tmp));
    k_10_fu_1406_p2 <= std_logic_vector(unsigned(k_7_reg_467) + unsigned(ap_const_lv4_1));
    k_9_cast43_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_9_fu_1110_p2),10));
    k_9_fu_1110_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(empty_fu_970_p1));
    logn_cast7_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),32));
    lshr_ln1621_2_fu_1908_p4 <= add_ln1621_2_fu_1903_p2(13 downto 2);
    lshr_ln2358_1_fu_2172_p4 <= add_ln2358_1_fu_2167_p2(13 downto 2);
    lshr_ln2564_1_fu_1674_p4 <= add_ln2564_2_fu_1669_p2(13 downto 2);
    lshr_ln2577_1_fu_2091_p4 <= x_21_fu_2045_p2(13 downto 2);
    lshr_ln25_fu_2303_p4 <= add_ln2374_1_fu_2298_p2(13 downto 2);
    lshr_ln26_fu_1507_p4 <= add_ln967_fu_1502_p2(13 downto 2);
    lshr_ln27_fu_1547_p4 <= add_ln968_1_fu_1542_p2(13 downto 2);
    lshr_ln28_fu_1594_p4 <= add_ln2564_fu_1589_p2(13 downto 2);
    lshr_ln29_fu_1784_p4 <= add_ln1601_2_fu_1779_p2(13 downto 2);
    lshr_ln30_fu_2076_p4 <= add_ln2577_1_fu_2071_p2(13 downto 2);
    lshr_ln813_fu_1441_p2 <= std_logic_vector(shift_right(unsigned(e_reg_2729),to_integer(unsigned('0' & sext_ln808_reg_2734(31-1 downto 0)))));
    lshr_ln_fu_2266_p4 <= add_ln2370_1_fu_2261_p2(13 downto 2);
    mul_ln656_fu_1181_p0 <= sext_ln1584_fu_1167_p1(25 - 1 downto 0);
    mul_ln656_fu_1181_p1 <= zext_ln656_fu_1177_p1(24 - 1 downto 0);
    mul_ln657_fu_1199_p0 <= sext_ln1584_fu_1167_p1(25 - 1 downto 0);
    mul_ln658_fu_1217_p0 <= sext_ln1584_reg_2656(25 - 1 downto 0);
    mul_ln659_fu_1232_p0 <= sext_ln1584_reg_2656(25 - 1 downto 0);
    n_fu_982_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv10_1),to_integer(unsigned('0' & zext_ln2539_1_fu_978_p1(10-1 downto 0)))));
    p0i_fu_1249_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_fu_1232_p2));
    p0i_fu_1249_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_56_fu_1227_p2));
    scl_cast_fu_946_p0 <= scl;
        scl_cast_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(scl_cast_fu_946_p0),32));

    select_ln1602_fu_1818_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_170_fu_1810_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln635_fu_1625_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_169_fu_1617_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_7_fu_1864_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_171_fu_1856_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_fu_1289_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_166_fu_1281_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln697_fu_1985_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_172_fu_1977_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln757_fu_1322_p3 <= 
        ap_const_lv25_1FFFFFF when (trunc_ln735_fu_1318_p1(0) = '1') else 
        ap_const_lv25_0;
    select_ln813_fu_1449_p3 <= 
        ap_const_lv32_FFFFFFFF when (trunc_ln813_fu_1445_p1(0) = '1') else 
        ap_const_lv32_0;
    sext_ln1584_fu_1167_p0 <= PRIMES_p_q0;
        sext_ln1584_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1584_fu_1167_p0),31));

        sext_ln1587_fu_1756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(phi_ln1587_reg_585),12));

        sext_ln1598_fu_1831_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln1602_fu_1826_p2),31));

        sext_ln1621_fu_1962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1621_fu_1956_p2),32));

        sext_ln2358_fu_2217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ysign_fu_2207_p4),31));

        sext_ln635_fu_1638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln635_fu_1633_p2),31));

        sext_ln685_5_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_5_fu_1872_p2),31));

        sext_ln685_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_fu_1297_p2),31));

        sext_ln697_fu_1998_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln697_fu_1993_p2),31));

        sext_ln757_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln757_fu_1330_p2),31));

        sext_ln808_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_9_reg_486),32));

    shl_ln2371_fu_2354_p2 <= std_logic_vector(shift_left(unsigned(wy_fu_2348_p3),to_integer(unsigned('0' & scl_cast_reg_2471(31-1 downto 0)))));
    shl_ln2534_1_fu_2037_p3 <= (add_ln2534_3_fu_2032_p2 & ap_const_lv2_0);
    shl_ln2544_1_fu_1082_p3 <= (add_ln2544_fu_1076_p2 & ap_const_lv2_0);
    shl_ln2544_2_fu_1064_p3 <= (n_fu_982_p2 & ap_const_lv1_0);
    shl_ln2544_fu_1054_p2 <= std_logic_vector(shift_left(unsigned(zext_ln2536_4_fu_1010_p1),to_integer(unsigned('0' & zext_ln2539_fu_974_p1(16-1 downto 0)))));
    shl_ln2564_1_fu_1661_p3 <= (add_ln2564_1_fu_1656_p2 & ap_const_lv2_0);
    shl_ln56_fu_1036_p3 <= (n_fu_982_p2 & ap_const_lv3_0);
    shl_ln57_fu_2159_p3 <= (add_ln2358_2_fu_2154_p2 & ap_const_lv2_0);
    shl_ln58_fu_2253_p3 <= (add_ln2370_fu_2248_p2 & ap_const_lv2_0);
    shl_ln59_fu_2290_p3 <= (add_ln2374_fu_2285_p2 & ap_const_lv2_0);
    shl_ln60_fu_1490_p3 <= (REV10_q0 & ap_const_lv2_0);
    shl_ln61_fu_1531_p3 <= (add_ln968_reg_2765 & ap_const_lv2_0);
    shl_ln62_fu_1577_p3 <= (trunc_ln2564_fu_1573_p1 & ap_const_lv2_0);
    shl_ln63_fu_1735_p3 <= (add_ln2534_reg_2788 & ap_const_lv2_0);
    shl_ln64_fu_1712_p3 <= (add_ln2534_1_fu_1707_p2 & ap_const_lv2_0);
    shl_ln65_fu_1771_p3 <= (add_ln1601_3_fu_1766_p2 & ap_const_lv2_0);
    shl_ln66_fu_2063_p3 <= (add_ln2577_fu_2058_p2 & ap_const_lv2_0);
    shl_ln67_fu_1895_p3 <= (add_ln1621_fu_1891_p2 & ap_const_lv2_0);
    shl_ln685_fu_1269_p2 <= std_logic_vector(shift_left(unsigned(z_83_fu_1263_p2),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln779_fu_1363_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & i_reg_424(31-1 downto 0)))));
    shl_ln966_fu_1480_p2 <= std_logic_vector(shift_left(unsigned(u_116_reg_528),to_integer(unsigned('0' & k_9_cast43_reg_2592(10-1 downto 0)))));
    shl_ln_fu_1014_p3 <= (n_fu_982_p2 & ap_const_lv2_0);
    sub9_i_fu_2122_p1 <= scl;
    sub9_i_fu_2122_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(sub9_i_fu_2122_p1));
    sub_ln1621_fu_1956_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln1621_3_fu_1952_p1));
    sub_ln2358_fu_2201_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln2358_1_fu_2197_p1));
    sub_ln2374_fu_2382_p2 <= std_logic_vector(unsigned(vla1_q1) - unsigned(zext_ln2364_fu_2369_p1));
    sub_ln685_fu_1275_p2 <= std_logic_vector(unsigned(shl_ln685_fu_1269_p2) - unsigned(zext_ln1584_fu_1255_p1));
    sub_ln697_fu_1972_p2 <= std_logic_vector(unsigned(x_22_reg_2843) - unsigned(and_ln1621_fu_1966_p2));
    t1_fu_1090_p2 <= std_logic_vector(unsigned(shl_ln2544_1_fu_1082_p3) + unsigned(tmp));
    tlen_fu_992_p2 <= std_logic_vector(unsigned(flen_r) + unsigned(ap_const_lv8_1));
    tmp_166_fu_1281_p3 <= sub_ln685_fu_1275_p2(31 downto 31);
    tmp_168_fu_1421_p3 <= i_9_reg_486(5 downto 5);
    tmp_169_fu_1617_p3 <= vla1_q0(31 downto 31);
    tmp_170_fu_1810_p3 <= w_54_fu_1805_p2(31 downto 31);
    tmp_171_fu_1856_p3 <= add_ln685_10_fu_1850_p2(31 downto 31);
    tmp_172_fu_1977_p3 <= sub_ln697_fu_1972_p2(31 downto 31);
    tmp_cast_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp),64));
    trunc_ln1584_fu_1163_p0 <= PRIMES_p_q0;
    trunc_ln1584_fu_1163_p1 <= trunc_ln1584_fu_1163_p0(24 - 1 downto 0);
    trunc_ln22_fu_1942_p4 <= vla1_q0(31 downto 30);
    trunc_ln2364_fu_2398_p1 <= w_fu_2392_p2(31 - 1 downto 0);
    trunc_ln2370_fu_2244_p1 <= v_fu_2234_p2(12 - 1 downto 0);
    trunc_ln2371_fu_2359_p1 <= shl_ln2371_fu_2354_p2(31 - 1 downto 0);
    trunc_ln2374_1_fu_2378_p1 <= tw_1_fu_2373_p2(31 - 1 downto 0);
    trunc_ln2374_2_fu_2281_p1 <= reg_651(12 - 1 downto 0);
    trunc_ln2374_fu_2225_p1 <= idx97_fu_206(12 - 1 downto 0);
    trunc_ln2534_1_fu_1703_p1 <= idx91_reg_573(12 - 1 downto 0);
    trunc_ln2534_2_fu_2028_p1 <= idx93_reg_616(12 - 1 downto 0);
    trunc_ln2534_fu_2145_p1 <= idx95_fu_210(12 - 1 downto 0);
    trunc_ln2544_fu_1060_p1 <= shl_ln2544_fu_1054_p2(12 - 1 downto 0);
    trunc_ln2564_fu_1573_p1 <= v_021_reg_539(9 - 1 downto 0);
    trunc_ln2568_fu_1725_p1 <= idx_reg_561(12 - 1 downto 0);
    trunc_ln2577_fu_2050_p1 <= v_28_reg_605(9 - 1 downto 0);
    trunc_ln735_fu_1318_p1 <= grp_modp_montymul_fu_660_ap_return(1 - 1 downto 0);
    trunc_ln779_fu_1369_p1 <= shl_ln779_fu_1363_p2(8 - 1 downto 0);
    trunc_ln813_fu_1445_p1 <= lshr_ln813_fu_1441_p2(1 - 1 downto 0);
    trunc_ln_fu_2187_p4 <= vla1_q1(31 downto 30);
    tw_1_fu_2373_p2 <= std_logic_vector(shift_right(unsigned(wy_fu_2348_p3),to_integer(unsigned('0' & zext_ln2590_reg_2899(31-1 downto 0)))));
    u_112_cast_cast_cast_cast_fu_2118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_112_cast_cast_cast_fu_2115_p1),64));
        u_112_cast_cast_cast_fu_2115_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sch),32));

    u_188_fu_2318_p2 <= std_logic_vector(unsigned(reg_651) + unsigned(ap_const_lv64_1));
    u_189_fu_2139_p2 <= std_logic_vector(unsigned(u_fu_214) + unsigned(ap_const_lv10_1));
    u_190_fu_1474_p2 <= std_logic_vector(unsigned(u_116_reg_528) + unsigned(ap_const_lv10_1));
    u_191_fu_1760_p2 <= std_logic_vector(signed(phi_ln1587_reg_585) + signed(ap_const_lv9_1FF));
    u_192_fu_1142_p2 <= std_logic_vector(unsigned(u_112_fu_202) + unsigned(ap_const_lv8_1));
    v_26_fu_1567_p2 <= std_logic_vector(unsigned(v_021_reg_539) + unsigned(ap_const_lv10_1));
    v_29_fu_2022_p2 <= std_logic_vector(unsigned(v_28_reg_605) + unsigned(ap_const_lv10_1));
    v_30_fu_1697_p2 <= std_logic_vector(unsigned(v_27_reg_550) + unsigned(ap_const_lv10_1));
    v_fu_2234_p2 <= std_logic_vector(unsigned(reg_651) - unsigned(u_112_cast_cast_cast_cast_reg_2893));

    vla1_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, icmp_ln2562_fu_1562_p2, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state28, icmp_ln2574_fu_2017_p2, ap_CS_fsm_state32, ap_CS_fsm_state35, grp_zint_rebuild_CRT_1_fu_898_vla1_address0, grp_modp_NTT2_ext_1_fu_915_vla1_address0, grp_modp_iNTT2_ext_1_fu_928_vla1_address0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state31, zext_ln967_1_fu_1517_p1, zext_ln968_2_fu_1557_p1, zext_ln2564_1_fu_1604_p1, zext_ln2564_3_fu_1684_p1, zext_ln1601_fu_1794_p1, zext_ln1621_fu_1918_p1, zext_ln2571_fu_2013_p1, zext_ln2577_2_fu_2101_p1, zext_ln2370_fu_2276_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            vla1_address0 <= zext_ln2370_fu_2276_p1(12 - 1 downto 0);
        elsif (((icmp_ln2574_fu_2017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_address0 <= zext_ln2577_2_fu_2101_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            vla1_address0 <= zext_ln2571_fu_2013_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            vla1_address0 <= zext_ln1621_fu_1918_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            vla1_address0 <= zext_ln1601_fu_1794_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            vla1_address0 <= zext_ln2564_3_fu_1684_p1(12 - 1 downto 0);
        elsif (((icmp_ln2562_fu_1562_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            vla1_address0 <= zext_ln2564_1_fu_1604_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            vla1_address0 <= zext_ln968_2_fu_1557_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla1_address0 <= zext_ln967_1_fu_1517_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_address0 <= grp_modp_iNTT2_ext_1_fu_928_vla1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_address0 <= grp_modp_NTT2_ext_1_fu_915_vla1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_address0 <= grp_zint_rebuild_CRT_1_fu_898_vla1_address0;
        else 
            vla1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    vla1_address1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state28, icmp_ln2574_fu_2017_p2, vla1_addr_292_reg_2882, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state35, vla1_addr_285_reg_2945, ap_CS_fsm_state36, grp_zint_rebuild_CRT_1_fu_898_vla1_address1, grp_modp_NTT2_ext_1_fu_915_vla1_address1, grp_modp_iNTT2_ext_1_fu_928_vla1_address1, ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state31, zext_ln2577_1_fu_2086_p1, zext_ln2358_fu_2182_p1, zext_ln2374_fu_2313_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            vla1_address1 <= vla1_addr_285_reg_2945;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            vla1_address1 <= zext_ln2374_fu_2313_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            vla1_address1 <= zext_ln2358_fu_2182_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            vla1_address1 <= vla1_addr_292_reg_2882;
        elsif (((icmp_ln2574_fu_2017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_address1 <= zext_ln2577_1_fu_2086_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_address1 <= grp_modp_iNTT2_ext_1_fu_928_vla1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_address1 <= grp_modp_NTT2_ext_1_fu_915_vla1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_address1 <= grp_zint_rebuild_CRT_1_fu_898_vla1_address1;
        else 
            vla1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    vla1_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, icmp_ln2562_fu_1562_p2, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state28, icmp_ln2574_fu_2017_p2, ap_CS_fsm_state32, ap_CS_fsm_state35, grp_zint_rebuild_CRT_1_fu_898_vla1_ce0, grp_modp_NTT2_ext_1_fu_915_vla1_ce0, grp_modp_iNTT2_ext_1_fu_928_vla1_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state18) or ((icmp_ln2574_fu_2017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((icmp_ln2562_fu_1562_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            vla1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_ce0 <= grp_modp_iNTT2_ext_1_fu_928_vla1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_ce0 <= grp_modp_NTT2_ext_1_fu_915_vla1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_ce0 <= grp_zint_rebuild_CRT_1_fu_898_vla1_ce0;
        else 
            vla1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vla1_ce1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state28, icmp_ln2574_fu_2017_p2, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state35, ap_CS_fsm_state36, grp_zint_rebuild_CRT_1_fu_898_vla1_ce1, grp_modp_NTT2_ext_1_fu_915_vla1_ce1, grp_modp_iNTT2_ext_1_fu_928_vla1_ce1, ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((icmp_ln2574_fu_2017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            vla1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_ce1 <= grp_modp_iNTT2_ext_1_fu_928_vla1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_ce1 <= grp_modp_NTT2_ext_1_fu_915_vla1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_ce1 <= grp_zint_rebuild_CRT_1_fu_898_vla1_ce1;
        else 
            vla1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vla1_d0_assign_proc : process(reg_506, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state32, grp_zint_rebuild_CRT_1_fu_898_vla1_d0, grp_modp_NTT2_ext_1_fu_915_vla1_d0, grp_modp_iNTT2_ext_1_fu_928_vla1_d0, ap_CS_fsm_state19, x1_2_reg_517, ap_CS_fsm_state21, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state31, w_53_fu_1646_p2, z_82_fu_2006_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            vla1_d0 <= z_82_fu_2006_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            vla1_d0 <= w_53_fu_1646_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            vla1_d0 <= reg_506;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla1_d0 <= x1_2_reg_517;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_d0 <= grp_modp_iNTT2_ext_1_fu_928_vla1_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_d0 <= grp_modp_NTT2_ext_1_fu_915_vla1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_d0 <= grp_zint_rebuild_CRT_1_fu_898_vla1_d0;
        else 
            vla1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla1_d1_assign_proc : process(grp_modp_montymul_fu_660_ap_return, ap_CS_fsm_state22, ap_CS_fsm_state32, ap_CS_fsm_state36, grp_zint_rebuild_CRT_1_fu_898_vla1_d1, grp_modp_NTT2_ext_1_fu_915_vla1_d1, grp_modp_iNTT2_ext_1_fu_928_vla1_d1, ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state31, zext_ln2375_fu_2402_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            vla1_d1 <= zext_ln2375_fu_2402_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            vla1_d1 <= grp_modp_montymul_fu_660_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_d1 <= grp_modp_iNTT2_ext_1_fu_928_vla1_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_d1 <= grp_modp_NTT2_ext_1_fu_915_vla1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_d1 <= grp_zint_rebuild_CRT_1_fu_898_vla1_d1;
        else 
            vla1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla1_we0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state32, grp_zint_rebuild_CRT_1_fu_898_vla1_we0, grp_modp_NTT2_ext_1_fu_915_vla1_we0, grp_modp_iNTT2_ext_1_fu_928_vla1_we0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            vla1_we0 <= ap_const_lv4_F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_we0 <= grp_modp_iNTT2_ext_1_fu_928_vla1_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_we0 <= grp_modp_NTT2_ext_1_fu_915_vla1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_we0 <= grp_zint_rebuild_CRT_1_fu_898_vla1_we0;
        else 
            vla1_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    vla1_we1_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state32, ap_CS_fsm_state36, grp_zint_rebuild_CRT_1_fu_898_vla1_we1, grp_modp_NTT2_ext_1_fu_915_vla1_we1, grp_modp_iNTT2_ext_1_fu_928_vla1_we1, ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            vla1_we1 <= ap_const_lv4_F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla1_we1 <= grp_modp_iNTT2_ext_1_fu_928_vla1_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_we1 <= grp_modp_NTT2_ext_1_fu_915_vla1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_we1 <= grp_zint_rebuild_CRT_1_fu_898_vla1_we1;
        else 
            vla1_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    w_53_fu_1646_p2 <= std_logic_vector(unsigned(vla1_q0) + unsigned(zext_ln635_fu_1642_p1));
    w_54_fu_1805_p2 <= std_logic_vector(unsigned(vla1_q0) - unsigned(zext_ln1584_reg_2675));
    w_56_fu_1839_p2 <= std_logic_vector(unsigned(grp_modp_montymul_fu_660_ap_return) - unsigned(zext_ln1584_reg_2675));
    w_fu_2392_p2 <= std_logic_vector(unsigned(sub_ln2374_fu_2382_p2) - unsigned(zext_ln2361_fu_2388_p1));
    wy_fu_2348_p3 <= 
        vla1_q0 when (icmp_ln2370_reg_2935(0) = '1') else 
        zext_ln2358_2_reg_2922;
    wys_fu_2363_p1 <= reg_639(31 - 1 downto 0);
    wys_fu_2363_p2 <= (wys_fu_2363_p1 or trunc_ln2371_fu_2359_p1);
    x_16_fu_1720_p2 <= std_logic_vector(unsigned(shl_ln64_fu_1712_p3) + unsigned(tmp));
    x_21_fu_2045_p2 <= std_logic_vector(unsigned(shl_ln2534_1_fu_2037_p3) + unsigned(tmp));
    x_22_fu_1885_p2 <= std_logic_vector(unsigned(zext_ln685_7_fu_1881_p1) + unsigned(add_ln685_10_fu_1850_p2));
    x_assign_85_cast_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_fu_1100_p2),32));
    x_assign_fu_1100_p2 <= std_logic_vector(unsigned(flen_r) + unsigned(ap_const_lv8_FF));
    x_fu_1746_p2 <= std_logic_vector(unsigned(zext_ln2567_1_fu_1742_p1) + unsigned(tmp));
    xor_ln813_fu_1435_p2 <= (reg_506 xor grp_modp_montymul_fu_660_ap_return);
    y_53_fu_1171_p2 <= std_logic_vector(unsigned(ap_const_lv24_2) - unsigned(trunc_ln1584_fu_1163_p1));
    y_54_fu_1193_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_fu_1181_p2));
    y_54_fu_1193_p1 <= zext_ln656_fu_1177_p1(24 - 1 downto 0);
    y_55_fu_1211_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_fu_1199_p2));
    y_56_fu_1227_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_fu_1217_p2));
    ysign_fu_2207_p4 <= sub_ln2358_fu_2201_p2(2 downto 1);
    z_80_fu_1463_p2 <= (reg_506 xor and_ln813_fu_1457_p2);
    z_82_fu_2006_p2 <= std_logic_vector(unsigned(zext_ln697_fu_2002_p1) + unsigned(sub_ln697_fu_1972_p2));
    z_83_fu_1263_p2 <= std_logic_vector(signed(ap_const_lv32_80000000) - signed(zext_ln1584_fu_1255_p1));
    z_fu_1310_p2 <= std_logic_vector(unsigned(zext_ln685_fu_1306_p1) + unsigned(sub_ln685_fu_1275_p2));
    zext_ln1584_1_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p0i_reg_2669),32));
    zext_ln1584_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1584_reg_2656),32));
    zext_ln1598_fu_1835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1598_fu_1831_p1),32));
    zext_ln1601_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln29_fu_1784_p4),64));
    zext_ln1621_3_fu_1952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln22_fu_1942_p4),3));
    zext_ln1621_fu_1918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1621_2_fu_1908_p4),64));
    zext_ln2358_1_fu_2197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_2187_p4),3));
    zext_ln2358_2_fu_2221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2358_fu_2217_p1),32));
    zext_ln2358_fu_2182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2358_1_fu_2172_p4),64));
    zext_ln2361_fu_2388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_reg_627),32));
    zext_ln2364_fu_2369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wys_fu_2363_p2),32));
    zext_ln2370_fu_2276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_2266_p4),64));
    zext_ln2374_fu_2313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln25_fu_2303_p4),64));
    zext_ln2375_fu_2402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2364_fu_2398_p1),32));
    zext_ln2534_1_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_112_fu_202),11));
    zext_ln2534_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t1_fu_1090_p2),64));
    zext_ln2536_1_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_992_p2),64));
    zext_ln2536_2_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_992_p2),9));
    zext_ln2536_3_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_992_p2),17));
    zext_ln2536_4_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_992_p2),16));
    zext_ln2536_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_fu_982_p2),64));
    zext_ln2539_1_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),10));
    zext_ln2539_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),16));
    zext_ln2542_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1014_p3),14));
    zext_ln2543_1_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln56_fu_1036_p3),14));
    zext_ln2543_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_fu_982_p2),11));
    zext_ln2544_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2544_2_fu_1064_p3),12));
    zext_ln2551_1_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_112_fu_202),64));
    zext_ln2551_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(flen_r),12));
    zext_ln2564_1_fu_1604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln28_fu_1594_p4),64));
    zext_ln2564_2_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2564_reg_2778),12));
    zext_ln2564_3_fu_1684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2564_1_fu_1674_p4),64));
    zext_ln2564_fu_1585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln62_fu_1577_p3),14));
    zext_ln2567_1_fu_1742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln63_fu_1735_p3),14));
    zext_ln2567_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2534_reg_2788),12));
    zext_ln2571_fu_2013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln31_reg_2854),64));
    zext_ln2573_fu_1751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_1746_p2),64));
    zext_ln2577_1_fu_2086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln30_fu_2076_p4),64));
    zext_ln2577_2_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2577_1_fu_2091_p4),64));
    zext_ln2577_fu_2054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2577_fu_2050_p1),12));
    zext_ln2590_fu_2127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub9_i_fu_2122_p2),32));
    zext_ln635_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln635_fu_1638_p1),32));
    zext_ln656_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_53_fu_1171_p2),31));
    zext_ln685_7_fu_1881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_5_fu_1877_p1),32));
    zext_ln685_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_fu_1302_p1),32));
    zext_ln697_fu_2002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln697_fu_1998_p1),32));
    zext_ln757_9_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(R2_fu_1349_p4),32));
    zext_ln757_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln757_fu_1335_p1),32));
    zext_ln937_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PRIMES_g_q0),32));
    zext_ln966_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln966_fu_1480_p2),64));
    zext_ln967_1_fu_1517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln26_fu_1507_p4),64));
    zext_ln967_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln60_fu_1490_p3),14));
    zext_ln968_1_fu_1538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln61_fu_1531_p3),14));
    zext_ln968_2_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln27_fu_1547_p4),64));
    zext_ln968_fu_1522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(REV10_q0),11));
end behav;
