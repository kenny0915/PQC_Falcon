-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity solve_NTRU_zint_bezout_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    vla1_ce0 : OUT STD_LOGIC;
    vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    vla1_ce1 : OUT STD_LOGIC;
    vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of solve_NTRU_zint_bezout_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_6A : STD_LOGIC_VECTOR (6 downto 0) := "1101010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv7_69 : STD_LOGIC_VECTOR (6 downto 0) := "1101001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv8_A8 : STD_LOGIC_VECTOR (7 downto 0) := "10101000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_6A0 : STD_LOGIC_VECTOR (11 downto 0) := "011010100000";
    constant ap_const_lv12_848 : STD_LOGIC_VECTOR (11 downto 0) := "100001001000";
    constant ap_const_lv11_4F8 : STD_LOGIC_VECTOR (10 downto 0) := "10011111000";
    constant ap_const_lv11_350 : STD_LOGIC_VECTOR (10 downto 0) := "01101010000";
    constant ap_const_lv64_D4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011010100";
    constant ap_const_lv64_13E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000100111110";
    constant ap_const_lv64_6A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001101010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv64_212 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001000010010";
    constant ap_const_lv64_27C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001001111100";
    constant ap_const_lv64_2E6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001011100110";
    constant ap_const_lv64_2E5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001011100101";
    constant ap_const_lv64_34F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101001111";
    constant ap_const_lv13_19CA : STD_LOGIC_VECTOR (12 downto 0) := "1100111001010";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_9F0 : STD_LOGIC_VECTOR (11 downto 0) := "100111110000";
    constant ap_const_lv12_B98 : STD_LOGIC_VECTOR (11 downto 0) := "101110011000";
    constant ap_const_lv10_1A8 : STD_LOGIC_VECTOR (9 downto 0) := "0110101000";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv13_1D : STD_LOGIC_VECTOR (12 downto 0) := "0000000011101";
    constant ap_const_lv12_9EC : STD_LOGIC_VECTOR (11 downto 0) := "100111101100";
    constant ap_const_lv12_B94 : STD_LOGIC_VECTOR (11 downto 0) := "101110010100";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv13_1FE2 : STD_LOGIC_VECTOR (12 downto 0) := "1111111100010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal vla1_addr_reg_2660 : STD_LOGIC_VECTOR (11 downto 0);
    signal vla1_addr_28_reg_2665 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln651_fu_702_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln651_reg_2670 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal y_7_fu_742_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_7_reg_2676 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln651_1_fu_748_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln651_1_reg_2682 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_11_fu_770_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_11_reg_2689 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_fu_776_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_reg_2695 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal y_12_fu_790_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_12_reg_2700 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_2_fu_795_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_2_reg_2705 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_fu_803_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_2713 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sub_ln658_1_fu_880_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln658_1_reg_2733 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal exitcond97_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_15_fu_885_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_15_reg_2738 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_890_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_reg_2743 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_fu_903_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_reg_2751 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal y_17_fu_975_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_17_reg_2771 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond96_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln659_fu_984_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln659_reg_2777 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal sub_ln659_1_fu_993_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln659_1_reg_2782 : STD_LOGIC_VECTOR (30 downto 0);
    signal x0i_fu_1087_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal x0i_reg_2807 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal exitcond94_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1100_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_reg_2815 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal y0i_fu_1177_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y0i_reg_2835 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal exitcond93_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1190_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_reg_2843 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal a0_1_fu_1354_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal a1_1_fu_1372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_1_fu_1390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_1_fu_1408_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c0_fu_1448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_5_fu_1454_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_hi_fu_1524_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_hi_reg_2952 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln2143_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_hi_fu_1546_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_hi_reg_2957 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_1_fu_1562_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal a_lo_3_fu_1822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln2184_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pa_2_fu_1842_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_2_fu_1854_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_hi_3_fu_1894_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_lo_3_fu_1914_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal qa_2_fu_1926_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_2_fu_1938_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_hi_3_fu_1970_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_34_fu_1982_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal u_34_reg_3023 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal zext_ln1830_1_fu_1996_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1830_1_reg_3028 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1826_fu_1976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1834_fu_2042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1834_reg_3044 : STD_LOGIC_VECTOR (0 downto 0);
    signal nega_fu_2058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal nega_reg_3048 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1784_fu_2066_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1784_reg_3054 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1797_fu_2074_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln1797_reg_3059 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal u_33_fu_2230_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal u_33_reg_3077 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal vla1_addr_52_reg_3082 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1793_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal negb_fu_2269_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal negb_reg_3088 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1784_1_fu_2277_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1784_1_reg_3094 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1797_1_fu_2285_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln1797_1_reg_3099 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal u_35_fu_2346_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal u_35_reg_3112 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal vla1_addr_53_reg_3117 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1793_1_fu_2340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pa_3_fu_2404_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pa_3_reg_3123 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_3_fu_2423_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_3_reg_3128 : STD_LOGIC_VECTOR (63 downto 0);
    signal qa_3_fu_2449_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qa_3_reg_3133 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_3_fu_2468_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_3_reg_3138 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal icmp_ln2270_fu_2546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_ap_start : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_ap_done : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_ap_idle : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_ap_ready : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_ce0 : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_ce1 : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_a : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_b : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_m : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_m0i : STD_LOGIC_VECTOR (30 downto 0);
    signal j_reg_410 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln2120_fu_1277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_reg_421 : STD_LOGIC_VECTOR (6 downto 0);
    signal b1_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal c0_2_reg_489 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_502 : STD_LOGIC_VECTOR (4 downto 0);
    signal qb_reg_513 : STD_LOGIC_VECTOR (63 downto 0);
    signal qa_reg_525 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_reg_537 : STD_LOGIC_VECTOR (63 downto 0);
    signal pa_reg_549 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_lo_1_reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_lo_1_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_hi_1_reg_579 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_hi_1_reg_588 : STD_LOGIC_VECTOR (63 downto 0);
    signal ccb_reg_597 : STD_LOGIC_VECTOR (32 downto 0);
    signal cca_reg_609 : STD_LOGIC_VECTOR (32 downto 0);
    signal u_reg_621 : STD_LOGIC_VECTOR (6 downto 0);
    signal cc_reg_632 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_20_reg_642 : STD_LOGIC_VECTOR (6 downto 0);
    signal cc_12_reg_653 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_23_reg_663 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal p_cast9_fu_831_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast10_fu_855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast11_fu_931_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast12_fu_955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast13_fu_1036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_cast14_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast15_fu_1128_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast16_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast17_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast18_fu_1242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln2146_fu_1316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2147_fu_1337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1830_fu_2016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1831_fu_2037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1835_fu_2170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1836_fu_2199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1796_fu_2264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1796_1_fu_2380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2271_fu_2580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index26_fu_154 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_159_fu_860_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_index20_fu_158 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_162_fu_960_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_172_fu_162 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ptr7_sum_fu_1002_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond95_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_164_fu_166 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_165_fu_1065_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_index14_fu_170 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_168_fu_1157_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_index_fu_174 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_171_fu_1247_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond92_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_fu_178 : STD_LOGIC_VECTOR (12 downto 0);
    signal num_3_fu_2475_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal j_3_fu_182 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_7_fu_2585_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal rc_1_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal rc_2_fu_2596_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rc_fu_2532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal add_ln2114_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1841_fu_2048_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1842_fu_2053_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1835_1_fu_2150_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1836_1_fu_2179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1798_fu_2327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1798_1_fu_2519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_706_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_fu_712_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_6_fu_724_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_6_fu_724_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_fu_730_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_7_fu_742_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_10_fu_752_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_3_fu_758_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_11_fu_770_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_3_fu_780_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_12_fu_790_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast_fu_811_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_815_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_821_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast1_fu_836_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_158_fu_839_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_845_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_15_fu_885_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast2_fu_911_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_160_fu_915_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_fu_921_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast3_fu_936_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_161_fu_939_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_945_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln659_1_fu_989_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_1008_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast4_fu_1016_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_163_fu_1020_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_1026_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x0i_fu_1087_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast5_fu_1108_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_166_fu_1112_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_fu_1118_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast6_fu_1133_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_167_fu_1136_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_1142_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal y0i_fu_1177_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast7_fu_1198_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_169_fu_1202_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_11_fu_1208_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast8_fu_1223_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_170_fu_1226_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_1232_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_1288_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2146_1_fu_1296_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2146_fu_1300_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln_fu_1306_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln2147_fu_1321_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln10_fu_1327_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln2148_fu_1342_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2148_fu_1348_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2149_fu_1360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2149_fu_1366_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2150_fu_1378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2150_fu_1384_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2151_fu_1396_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2151_fu_1402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln2153_fu_1414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2153_fu_1420_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1426_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2153_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2153_fu_1440_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2162_fu_1466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2163_fu_1478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2164_fu_1490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_2_fu_1484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln14_fu_1508_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal a1_2_fu_1472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2166_fu_1516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2166_1_fu_1520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal b0_2_fu_1502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln15_fu_1530_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal b1_2_fu_1496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2167_fu_1538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2167_1_fu_1542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rz_fu_1568_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2205_fu_1580_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2204_fu_1574_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2205_fu_1586_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2204_1_fu_1592_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2184_fu_1552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln2217_fu_1606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln2218_fu_1616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2219_fu_1622_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal rt_fu_1598_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2219_fu_1626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal oa_fu_1612_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2220_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2220_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2221_fu_1656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cAB_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2226_fu_1668_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2226_fu_1676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2227_fu_1688_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2227_fu_1696_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2228_fu_1708_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2229_fu_1720_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cBA_fu_1650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_lo_2_fu_1682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2230_fu_1732_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2230_fu_1740_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_hi_2_fu_1702_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2231_fu_1752_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2231_fu_1760_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pa_1_fu_1714_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2232_fu_1772_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_1_fu_1726_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2233_fu_1784_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2238_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2238_1_fu_1802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2238_fu_1808_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2238_fu_1816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2239_fu_1828_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2239_fu_1836_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2240_fu_1848_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln12_fu_1860_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln2241_fu_1870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cA_fu_1662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2241_fu_1874_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2241_fu_1880_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2241_fu_1888_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_lo_2_fu_1746_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2242_fu_1900_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2242_fu_1908_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal qa_1_fu_1778_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2243_fu_1920_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_1_fu_1790_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2244_fu_1932_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_hi_2_fu_1766_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln13_fu_1944_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln2245_fu_1954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2245_fu_1958_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2245_fu_1964_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln17_fu_1988_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1830_fu_2000_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln14_fu_2006_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1831_fu_2021_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln15_fu_2027_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1832_fu_2086_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1832_fu_2082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1832_1_fu_2096_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1832_1_fu_2092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1826_fu_2102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1832_1_fu_2096_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1832_fu_2106_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1832_fu_2086_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1833_fu_2118_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1833_1_fu_2124_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1826_1_fu_2130_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1833_1_fu_2124_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1833_fu_2134_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1833_fu_2118_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal za_fu_2112_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1835_fu_2146_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1835_fu_2155_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln16_fu_2160_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zb_fu_2140_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1836_fu_2175_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1836_fu_2184_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln17_fu_2189_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln18_fu_2236_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1796_2_fu_2244_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1796_fu_2248_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln18_fu_2254_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1797_fu_2293_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln1797_fu_2297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1793_fu_2311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1797_2_fu_2306_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1797_fu_2302_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1794_fu_2321_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal aw_6_fu_2315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1796_1_fu_2352_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1796_3_fu_2360_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1796_1_fu_2364_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln1796_1_fu_2370_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln2255_fu_2385_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2255_fu_2391_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2255_fu_2398_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2256_fu_2411_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2256_fu_2417_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2257_fu_2430_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2257_fu_2436_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2257_fu_2443_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2258_fu_2456_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2258_fu_2462_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1797_1_fu_2485_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln1797_1_fu_2489_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1793_1_fu_2503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1797_3_fu_2498_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1797_1_fu_2494_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1794_1_fu_2513_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal aw_8_fu_2507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln16_fu_2552_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2271_1_fu_2560_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2271_fu_2564_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln11_fu_2570_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln2273_fu_2607_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln2273_fu_2613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_2619_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2273_fu_2633_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2273_fu_2627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2273_fu_2641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2273_1_fu_2637_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2273_1_fu_2647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component solve_NTRU_zint_co_reduce_mod_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce1 : OUT STD_LOGIC;
        vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (7 downto 0);
        b : IN STD_LOGIC_VECTOR (11 downto 0);
        m : IN STD_LOGIC_VECTOR (10 downto 0);
        m0i : IN STD_LOGIC_VECTOR (30 downto 0);
        xa : IN STD_LOGIC_VECTOR (63 downto 0);
        xb : IN STD_LOGIC_VECTOR (63 downto 0);
        ya : IN STD_LOGIC_VECTOR (63 downto 0);
        yb : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component solve_NTRU_mul_31s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_64s_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_zint_co_reduce_mod_1_fu_674 : component solve_NTRU_zint_co_reduce_mod_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zint_co_reduce_mod_1_fu_674_ap_start,
        ap_done => grp_zint_co_reduce_mod_1_fu_674_ap_done,
        ap_idle => grp_zint_co_reduce_mod_1_fu_674_ap_idle,
        ap_ready => grp_zint_co_reduce_mod_1_fu_674_ap_ready,
        vla1_address0 => grp_zint_co_reduce_mod_1_fu_674_vla1_address0,
        vla1_ce0 => grp_zint_co_reduce_mod_1_fu_674_vla1_ce0,
        vla1_we0 => grp_zint_co_reduce_mod_1_fu_674_vla1_we0,
        vla1_d0 => grp_zint_co_reduce_mod_1_fu_674_vla1_d0,
        vla1_q0 => vla1_q0,
        vla1_address1 => grp_zint_co_reduce_mod_1_fu_674_vla1_address1,
        vla1_ce1 => grp_zint_co_reduce_mod_1_fu_674_vla1_ce1,
        vla1_we1 => grp_zint_co_reduce_mod_1_fu_674_vla1_we1,
        vla1_d1 => grp_zint_co_reduce_mod_1_fu_674_vla1_d1,
        vla1_q1 => vla1_q1,
        a => grp_zint_co_reduce_mod_1_fu_674_a,
        b => grp_zint_co_reduce_mod_1_fu_674_b,
        m => grp_zint_co_reduce_mod_1_fu_674_m,
        m0i => grp_zint_co_reduce_mod_1_fu_674_m0i,
        xa => pa_3_reg_3123,
        xb => pb_3_reg_3128,
        ya => qa_3_reg_3133,
        yb => qb_3_reg_3138);

    mul_31s_31s_31_1_1_U174 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_fu_702_p1,
        din1 => y_fu_706_p2,
        dout => mul_ln656_fu_712_p2);

    mul_31s_31s_31_1_1_U175 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_6_fu_724_p0,
        din1 => y_fu_706_p2,
        dout => y_6_fu_724_p2);

    mul_31s_31s_31_1_1_U176 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_fu_702_p1,
        din1 => y_6_fu_724_p2,
        dout => mul_ln657_fu_730_p2);

    mul_31s_31s_31_1_1_U177 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_7_fu_742_p0,
        din1 => y_6_fu_724_p2,
        dout => y_7_fu_742_p2);

    mul_31s_31s_31_1_1_U178 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_fu_748_p1,
        din1 => y_10_fu_752_p2,
        dout => mul_ln656_3_fu_758_p2);

    mul_31s_31s_31_1_1_U179 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_11_fu_770_p0,
        din1 => y_10_fu_752_p2,
        dout => y_11_fu_770_p2);

    mul_31s_31s_31_1_1_U180 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_reg_2670,
        din1 => y_7_reg_2676,
        dout => mul_ln658_fu_776_p2);

    mul_31s_31s_31_1_1_U181 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_reg_2682,
        din1 => y_11_reg_2689,
        dout => mul_ln657_3_fu_780_p2);

    mul_31s_31s_31_1_1_U182 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_12_fu_790_p0,
        din1 => y_11_reg_2689,
        dout => y_12_fu_790_p2);

    mul_31s_31s_31_1_1_U183 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_reg_2682,
        din1 => y_12_fu_790_p2,
        dout => mul_ln658_2_fu_795_p2);

    mul_31s_31s_31_1_1_U184 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_15_fu_885_p0,
        din1 => y_7_reg_2676,
        dout => y_15_fu_885_p2);

    mul_31s_31s_31_1_1_U185 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_reg_2670,
        din1 => y_15_fu_885_p2,
        dout => mul_ln659_fu_890_p2);

    mul_31s_31s_31_1_1_U186 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln658_1_reg_2733,
        din1 => y_12_reg_2700,
        dout => y_17_fu_975_p2);

    mul_31s_31s_31_1_1_U187 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_reg_2682,
        din1 => y_17_reg_2771,
        dout => mul_ln659_1_fu_989_p2);

    mul_31s_31s_31_1_1_U188 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln659_reg_2777,
        din1 => x0i_fu_1087_p1,
        dout => x0i_fu_1087_p2);

    mul_31s_31s_31_1_1_U189 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln659_1_reg_2782,
        din1 => y0i_fu_1177_p1,
        dout => y0i_fu_1177_p2);

    mul_64s_32ns_64_1_1_U190 : component solve_NTRU_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => pa_reg_549,
        din1 => mul_ln1832_fu_2086_p1,
        dout => mul_ln1832_fu_2086_p2);

    mul_64s_32ns_64_1_1_U191 : component solve_NTRU_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => pb_reg_537,
        din1 => mul_ln1832_1_fu_2096_p1,
        dout => mul_ln1832_1_fu_2096_p2);

    mul_64s_32ns_64_1_1_U192 : component solve_NTRU_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => qa_reg_525,
        din1 => mul_ln1833_fu_2118_p1,
        dout => mul_ln1833_fu_2118_p2);

    mul_64s_32ns_64_1_1_U193 : component solve_NTRU_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => qb_reg_513,
        din1 => mul_ln1833_1_fu_2124_p1,
        dout => mul_ln1833_1_fu_2124_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                    ap_return_preg <= and_ln2273_1_fu_2647_p2;
                end if; 
            end if;
        end if;
    end process;


    grp_zint_co_reduce_mod_1_fu_674_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zint_co_reduce_mod_1_fu_674_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((icmp_ln1793_1_fu_2340_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
                    grp_zint_co_reduce_mod_1_fu_674_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zint_co_reduce_mod_1_fu_674_ap_ready = ap_const_logic_1)) then 
                    grp_zint_co_reduce_mod_1_fu_674_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a0_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                a0_reg_467 <= a0_1_fu_1354_p2;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                a0_reg_467 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    a1_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                a1_reg_456 <= a1_1_fu_1372_p2;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                a1_reg_456 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    a_hi_1_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                a_hi_1_reg_588 <= a_hi_3_fu_1894_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                a_hi_1_reg_588 <= a_hi_reg_2952;
            end if; 
        end if;
    end process;

    a_lo_1_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                a_lo_1_reg_570 <= a_lo_3_fu_1822_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                a_lo_1_reg_570 <= vla1_q1;
            end if; 
        end if;
    end process;

    b0_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                b0_reg_445 <= b0_1_fu_1390_p2;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                b0_reg_445 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    b1_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                b1_reg_434 <= b1_1_fu_1408_p2;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                b1_reg_434 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    b_hi_1_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                b_hi_1_reg_579 <= b_hi_3_fu_1970_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                b_hi_1_reg_579 <= b_hi_reg_2957;
            end if; 
        end if;
    end process;

    b_lo_1_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                b_lo_1_reg_561 <= b_lo_3_fu_1914_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                b_lo_1_reg_561 <= vla1_q0;
            end if; 
        end if;
    end process;

    c0_2_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                c0_2_reg_489 <= c0_fu_1448_p2;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                c0_2_reg_489 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    c1_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                c1_reg_478 <= c0_2_reg_489;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                c1_reg_478 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    cc_12_reg_653_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                cc_12_reg_653 <= aw_8_fu_2507_p2(31 downto 31);
            elsif (((icmp_ln1793_fu_2224_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                cc_12_reg_653 <= ccb_reg_597(32 downto 32);
            end if; 
        end if;
    end process;

    cc_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                cc_reg_632 <= aw_6_fu_2315_p2(31 downto 31);
            elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                cc_reg_632 <= cca_reg_609(32 downto 32);
            end if; 
        end if;
    end process;

    cca_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                cca_reg_609 <= ap_const_lv33_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                cca_reg_609 <= za_fu_2112_p2(63 downto 31);
            end if; 
        end if;
    end process;

    ccb_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                ccb_reg_597 <= ap_const_lv33_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                ccb_reg_597 <= zb_fu_2140_p2(63 downto 31);
            end if; 
        end if;
    end process;

    empty_164_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond95_fu_1041_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                empty_164_fu_166 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond94_fu_1071_p2 = ap_const_lv1_0))) then 
                empty_164_fu_166 <= empty_165_fu_1065_p2;
            end if; 
        end if;
    end process;

    empty_172_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond96_fu_965_p2 = ap_const_lv1_1))) then 
                empty_172_fu_162 <= ap_const_lv7_0;
            elsif (((exitcond95_fu_1041_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                empty_172_fu_162 <= add_ptr7_sum_fu_1002_p2;
            end if; 
        end if;
    end process;

    i_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                i_reg_502 <= i_1_fu_1562_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_reg_502 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_1_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                j_1_reg_421 <= j_5_fu_1454_p2;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                j_1_reg_421 <= ap_const_lv7_69;
            end if; 
        end if;
    end process;

    j_3_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                j_3_fu_182 <= ap_const_lv7_1;
            elsif (((icmp_ln2270_fu_2546_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                j_3_fu_182 <= j_7_fu_2585_p2;
            end if; 
        end if;
    end process;

    j_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                j_reg_410 <= j_1_reg_421;
            elsif (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                j_reg_410 <= ap_const_lv7_6A;
            end if; 
        end if;
    end process;

    loop_index14_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond94_fu_1071_p2 = ap_const_lv1_1))) then 
                loop_index14_fu_170 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond93_fu_1162_p2 = ap_const_lv1_0))) then 
                loop_index14_fu_170 <= empty_168_fu_1157_p2;
            end if; 
        end if;
    end process;

    loop_index20_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond97_fu_865_p2 = ap_const_lv1_1))) then 
                loop_index20_fu_158 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond96_fu_965_p2 = ap_const_lv1_0))) then 
                loop_index20_fu_158 <= empty_162_fu_960_p2;
            end if; 
        end if;
    end process;

    loop_index26_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                loop_index26_fu_154 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond97_fu_865_p2 = ap_const_lv1_0))) then 
                loop_index26_fu_154 <= empty_159_fu_860_p2;
            end if; 
        end if;
    end process;

    loop_index_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond93_fu_1162_p2 = ap_const_lv1_1))) then 
                loop_index_fu_174 <= ap_const_lv7_0;
            elsif (((exitcond92_fu_1252_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                loop_index_fu_174 <= empty_171_fu_1247_p2;
            end if; 
        end if;
    end process;

    num_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond92_fu_1252_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                num_fu_178 <= ap_const_lv13_19CA;
            elsif (((icmp_ln1793_1_fu_2340_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                num_fu_178 <= num_3_fu_2475_p2;
            end if; 
        end if;
    end process;

    pa_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                pa_reg_549 <= pa_2_fu_1842_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                pa_reg_549 <= ap_const_lv64_1;
            end if; 
        end if;
    end process;

    pb_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                pb_reg_537 <= pb_2_fu_1854_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                pb_reg_537 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    qa_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                qa_reg_525 <= qa_2_fu_1926_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                qa_reg_525 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    qb_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                qb_reg_513 <= qb_2_fu_1938_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                qb_reg_513 <= ap_const_lv64_1;
            end if; 
        end if;
    end process;

    rc_1_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                rc_1_fu_186 <= rc_fu_2532_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                rc_1_fu_186 <= rc_2_fu_2596_p2;
            end if; 
        end if;
    end process;

    u_20_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                u_20_reg_642 <= u_33_reg_3077;
            elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                u_20_reg_642 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    u_23_reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                u_23_reg_663 <= u_35_reg_3112;
            elsif (((icmp_ln1793_fu_2224_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                u_23_reg_663 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    u_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                u_reg_621 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                u_reg_621 <= u_34_reg_3023;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                a_hi_reg_2952 <= a_hi_fu_1524_p2;
                b_hi_reg_2957 <= b_hi_fu_1546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                icmp_ln1834_reg_3044 <= icmp_ln1834_fu_2042_p2;
                    zext_ln1830_1_reg_3028(8 downto 2) <= zext_ln1830_1_fu_1996_p1(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_ln658_2_reg_2705 <= mul_ln658_2_fu_795_p2;
                mul_ln658_reg_2695 <= mul_ln658_fu_776_p2;
                y_12_reg_2700 <= y_12_fu_790_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond97_fu_865_p2 = ap_const_lv1_1))) then
                mul_ln659_reg_2743 <= mul_ln659_fu_890_p2;
                sub_ln658_1_reg_2733 <= sub_ln658_1_fu_880_p2;
                y_15_reg_2738 <= y_15_fu_885_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                nega_reg_3048 <= cca_reg_609(32 downto 32);
                    select_ln1784_reg_3054(30 downto 0) <= select_ln1784_fu_2066_p3(30 downto 0);
                select_ln1797_reg_3059 <= select_ln1797_fu_2074_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1793_fu_2224_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                negb_reg_3088 <= ccb_reg_597(32 downto 32);
                    select_ln1784_1_reg_3094(30 downto 0) <= select_ln1784_1_fu_2277_p3(30 downto 0);
                select_ln1797_1_reg_3099 <= select_ln1797_1_fu_2285_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1793_1_fu_2340_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                pa_3_reg_3123 <= pa_3_fu_2404_p2;
                pb_3_reg_3128 <= pb_3_fu_2423_p2;
                qa_3_reg_3133 <= qa_3_fu_2449_p2;
                qb_3_reg_3138 <= qb_3_fu_2468_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                sub_ln659_1_reg_2782 <= sub_ln659_1_fu_993_p2;
                sub_ln659_reg_2777 <= sub_ln659_fu_984_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                    tmp_10_reg_2843(8 downto 2) <= tmp_10_fu_1190_p3(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    tmp_3_reg_2751(8 downto 2) <= tmp_3_fu_903_p3(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                    tmp_8_reg_2815(8 downto 2) <= tmp_8_fu_1100_p3(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    tmp_reg_2713(8 downto 2) <= tmp_fu_803_p3(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                trunc_ln651_1_reg_2682 <= trunc_ln651_1_fu_748_p1;
                trunc_ln651_reg_2670 <= trunc_ln651_fu_702_p1;
                y_11_reg_2689 <= y_11_fu_770_p2;
                y_7_reg_2676 <= y_7_fu_742_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                u_33_reg_3077 <= u_33_fu_2230_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                u_34_reg_3023 <= u_34_fu_1982_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                u_35_reg_3112 <= u_35_fu_2346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1793_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    vla1_addr_52_reg_3082(9 downto 0) <= zext_ln1796_fu_2264_p1(12 - 1 downto 0)(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1793_1_fu_2340_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    vla1_addr_53_reg_3117(9 downto 0) <= zext_ln1796_1_fu_2380_p1(12 - 1 downto 0)(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond94_fu_1071_p2 = ap_const_lv1_1))) then
                x0i_reg_2807 <= x0i_fu_1087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond93_fu_1162_p2 = ap_const_lv1_1))) then
                y0i_reg_2835 <= y0i_fu_1177_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond96_fu_965_p2 = ap_const_lv1_1))) then
                y_17_reg_2771 <= y_17_fu_975_p2;
            end if;
        end if;
    end process;
    tmp_reg_2713(1 downto 0) <= "00";
    tmp_3_reg_2751(1 downto 0) <= "00";
    tmp_8_reg_2815(1 downto 0) <= "00";
    tmp_10_reg_2843(1 downto 0) <= "00";
    zext_ln1830_1_reg_3028(1 downto 0) <= "00";
    zext_ln1830_1_reg_3028(11 downto 9) <= "000";
    select_ln1784_reg_3054(31) <= '0';
    vla1_addr_52_reg_3082(11 downto 10) <= "00";
    select_ln1784_1_reg_3094(31) <= '0';
    vla1_addr_53_reg_3117(11 downto 10) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, exitcond97_fu_865_p2, ap_CS_fsm_state7, exitcond96_fu_965_p2, ap_CS_fsm_state10, exitcond94_fu_1071_p2, ap_CS_fsm_state12, exitcond93_fu_1162_p2, ap_CS_fsm_state19, icmp_ln2143_fu_1460_p2, ap_CS_fsm_state21, icmp_ln2184_fu_1556_p2, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, ap_CS_fsm_state24, icmp_ln1793_fu_2224_p2, ap_CS_fsm_state26, icmp_ln1793_1_fu_2340_p2, ap_CS_fsm_state32, icmp_ln2270_fu_2546_p2, grp_zint_co_reduce_mod_1_fu_674_ap_done, ap_CS_fsm_state17, icmp_ln2120_fu_1277_p2, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state9, ap_CS_fsm_state14, exitcond95_fu_1041_p2, exitcond92_fu_1252_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond97_fu_865_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond96_fu_965_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((exitcond95_fu_1041_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond94_fu_1071_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond93_fu_1162_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((exitcond92_fu_1252_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln2120_fu_1277_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln2143_fu_1460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln2184_fu_1556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln1793_fu_2224_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln1793_1_fu_2340_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state28 => 
                if (((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((icmp_ln2270_fu_2546_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a0_1_fu_1354_p2 <= (and_ln2148_fu_1348_p2 xor a0_reg_467);
    a0_2_fu_1484_p2 <= (xor_ln2163_fu_1478_p2 and a0_reg_467);
    a1_1_fu_1372_p2 <= (and_ln2149_fu_1366_p2 xor a1_reg_456);
    a1_2_fu_1472_p2 <= (and_ln2162_fu_1466_p2 or a1_1_fu_1372_p2);
    a_hi_2_fu_1702_p2 <= std_logic_vector(unsigned(a_hi_1_reg_588) - unsigned(and_ln2227_fu_1696_p2));
    a_hi_3_fu_1894_p2 <= (and_ln2241_fu_1888_p2 xor a_hi_2_fu_1702_p2);
    a_hi_fu_1524_p2 <= std_logic_vector(unsigned(zext_ln2166_fu_1516_p1) + unsigned(zext_ln2166_1_fu_1520_p1));
    a_lo_2_fu_1682_p2 <= std_logic_vector(unsigned(a_lo_1_reg_570) - unsigned(and_ln2226_fu_1676_p2));
    a_lo_3_fu_1822_p2 <= std_logic_vector(unsigned(and_ln2238_fu_1816_p2) + unsigned(a_lo_2_fu_1682_p2));
    add_ln1794_1_fu_2513_p2 <= std_logic_vector(unsigned(xor_ln1797_3_fu_2498_p2) + unsigned(zext_ln1797_1_fu_2494_p1));
    add_ln1794_fu_2321_p2 <= std_logic_vector(unsigned(xor_ln1797_2_fu_2306_p2) + unsigned(zext_ln1797_fu_2302_p1));
    add_ln1796_1_fu_2364_p2 <= std_logic_vector(unsigned(zext_ln1796_3_fu_2360_p1) + unsigned(ap_const_lv12_B98));
    add_ln1796_fu_2248_p2 <= std_logic_vector(unsigned(zext_ln1796_2_fu_2244_p1) + unsigned(ap_const_lv12_9F0));
    add_ln1830_fu_2000_p2 <= std_logic_vector(unsigned(zext_ln1830_1_fu_1996_p1) + unsigned(ap_const_lv12_9F0));
    add_ln1831_fu_2021_p2 <= std_logic_vector(unsigned(zext_ln1830_1_fu_1996_p1) + unsigned(ap_const_lv12_B98));
    add_ln1832_fu_2106_p2 <= std_logic_vector(signed(sext_ln1826_fu_2102_p1) + signed(mul_ln1832_1_fu_2096_p2));
    add_ln1833_fu_2134_p2 <= std_logic_vector(signed(sext_ln1826_1_fu_2130_p1) + signed(mul_ln1833_1_fu_2124_p2));
    add_ln1835_fu_2155_p2 <= std_logic_vector(unsigned(zext_ln1830_1_reg_3028) + unsigned(ap_const_lv12_9EC));
    add_ln1836_fu_2184_p2 <= std_logic_vector(unsigned(zext_ln1830_1_reg_3028) + unsigned(ap_const_lv12_B94));
    add_ln2114_fu_1267_p2 <= std_logic_vector(unsigned(vla1_q1) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln2146_fu_1300_p2 <= std_logic_vector(unsigned(zext_ln2146_1_fu_1296_p1) + unsigned(ap_const_lv12_9EC));
    add_ln2147_fu_1321_p2 <= std_logic_vector(unsigned(zext_ln2146_1_fu_1296_p1) + unsigned(ap_const_lv12_B94));
    add_ln2153_fu_1420_p2 <= std_logic_vector(unsigned(or_ln2153_fu_1414_p2) + unsigned(ap_const_lv32_7FFFFFFF));
    add_ln2271_fu_2564_p2 <= std_logic_vector(unsigned(zext_ln2271_1_fu_2560_p1) + unsigned(ap_const_lv12_9F0));
    add_ptr7_sum_fu_1002_p2 <= std_logic_vector(unsigned(empty_172_fu_162) + unsigned(ap_const_lv7_1));
    and_ln2148_fu_1348_p2 <= (xor_ln2148_fu_1342_p2 and c0_2_reg_489);
    and_ln2149_fu_1366_p2 <= (xor_ln2149_fu_1360_p2 and c1_reg_478);
    and_ln2150_fu_1384_p2 <= (xor_ln2150_fu_1378_p2 and c0_2_reg_489);
    and_ln2151_fu_1402_p2 <= (xor_ln2151_fu_1396_p2 and c1_reg_478);
    and_ln2162_fu_1466_p2 <= (c0_2_reg_489 and a0_1_fu_1354_p2);
    and_ln2164_fu_1490_p2 <= (c0_2_reg_489 and b0_1_fu_1390_p2);
    and_ln2205_fu_1586_p2 <= (xor_ln2205_fu_1580_p2 and xor_ln2204_fu_1574_p2);
    and_ln2219_fu_1626_p2 <= (trunc_ln2219_fu_1622_p1 and rt_fu_1598_p3);
    and_ln2220_fu_1638_p2 <= (trunc_ln2219_fu_1622_p1 and oa_fu_1612_p1);
    and_ln2226_fu_1676_p2 <= (select_ln2226_fu_1668_p3 and b_lo_1_reg_561);
    and_ln2227_fu_1696_p2 <= (select_ln2227_fu_1688_p3 and b_hi_1_reg_579);
    and_ln2228_fu_1708_p2 <= (select_ln2227_fu_1688_p3 and qa_reg_525);
    and_ln2229_fu_1720_p2 <= (select_ln2227_fu_1688_p3 and qb_reg_513);
    and_ln2230_fu_1740_p2 <= (select_ln2230_fu_1732_p3 and a_lo_2_fu_1682_p2);
    and_ln2231_fu_1760_p2 <= (select_ln2231_fu_1752_p3 and a_hi_2_fu_1702_p2);
    and_ln2232_fu_1772_p2 <= (select_ln2231_fu_1752_p3 and pa_1_fu_1714_p2);
    and_ln2233_fu_1784_p2 <= (select_ln2231_fu_1752_p3 and pb_1_fu_1726_p2);
    and_ln2238_1_fu_1802_p2 <= (xor_ln2238_fu_1796_p2 and oa_fu_1612_p1);
    and_ln2238_fu_1816_p2 <= (select_ln2238_fu_1808_p3 and a_lo_2_fu_1682_p2);
    and_ln2239_fu_1836_p2 <= (select_ln2239_fu_1828_p3 and pa_1_fu_1714_p2);
    and_ln2240_fu_1848_p2 <= (select_ln2239_fu_1828_p3 and pb_1_fu_1726_p2);
    and_ln2241_fu_1888_p2 <= (xor_ln2241_fu_1874_p2 and select_ln2241_fu_1880_p3);
    and_ln2242_fu_1908_p2 <= (select_ln2242_fu_1900_p3 and b_lo_2_fu_1746_p2);
    and_ln2243_fu_1920_p2 <= (select_ln2241_fu_1880_p3 and qa_1_fu_1778_p2);
    and_ln2244_fu_1932_p2 <= (select_ln2241_fu_1880_p3 and qb_1_fu_1790_p2);
    and_ln2245_fu_1964_p2 <= (xor_ln2245_fu_1958_p2 and select_ln2239_fu_1828_p3);
    and_ln2255_fu_2398_p2 <= (shl_ln2255_fu_2385_p2 and select_ln2255_fu_2391_p3);
    and_ln2256_fu_2417_p2 <= (shl_ln2256_fu_2411_p2 and select_ln2255_fu_2391_p3);
    and_ln2257_fu_2443_p2 <= (shl_ln2257_fu_2430_p2 and select_ln2257_fu_2436_p3);
    and_ln2258_fu_2462_p2 <= (shl_ln2258_fu_2456_p2 and select_ln2257_fu_2436_p3);
    and_ln2273_1_fu_2647_p2 <= (trunc_ln2273_1_fu_2637_p1 and and_ln2273_fu_2641_p2);
    and_ln2273_fu_2641_p2 <= (xor_ln2273_fu_2627_p2 and trunc_ln2273_fu_2633_p1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_zint_co_reduce_mod_1_fu_674_ap_done)
    begin
        if ((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(grp_zint_co_reduce_mod_1_fu_674_ap_done)
    begin
        if ((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state34, and_ln2273_1_fu_2647_p2, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            ap_return <= and_ln2273_1_fu_2647_p2;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    aw_6_fu_2315_p2 <= std_logic_vector(unsigned(xor_ln1797_fu_2297_p2) + unsigned(zext_ln1793_fu_2311_p1));
    aw_8_fu_2507_p2 <= std_logic_vector(unsigned(xor_ln1797_1_fu_2489_p2) + unsigned(zext_ln1793_1_fu_2503_p1));
    b0_1_fu_1390_p2 <= (b0_reg_445 xor and_ln2150_fu_1384_p2);
    b0_2_fu_1502_p2 <= (xor_ln2163_fu_1478_p2 and b0_reg_445);
    b1_1_fu_1408_p2 <= (b1_reg_434 xor and_ln2151_fu_1402_p2);
    b1_2_fu_1496_p2 <= (b1_1_fu_1408_p2 or and_ln2164_fu_1490_p2);
    b_hi_2_fu_1766_p2 <= std_logic_vector(unsigned(b_hi_1_reg_579) - unsigned(and_ln2231_fu_1760_p2));
    b_hi_3_fu_1970_p2 <= (b_hi_2_fu_1766_p2 xor and_ln2245_fu_1964_p2);
    b_hi_fu_1546_p2 <= std_logic_vector(unsigned(zext_ln2167_fu_1538_p1) + unsigned(zext_ln2167_1_fu_1542_p1));
    b_lo_2_fu_1746_p2 <= std_logic_vector(unsigned(b_lo_1_reg_561) - unsigned(and_ln2230_fu_1740_p2));
    b_lo_3_fu_1914_p2 <= std_logic_vector(unsigned(and_ln2242_fu_1908_p2) + unsigned(b_lo_2_fu_1746_p2));
    c0_fu_1448_p2 <= (select_ln2153_fu_1440_p3 and c0_2_reg_489);
    cAB_fu_1632_p2 <= (oa_fu_1612_p1 and and_ln2219_fu_1626_p2);
    cA_fu_1662_p2 <= (xor_ln2221_fu_1656_p2 or and_ln2219_fu_1626_p2);
    cBA_fu_1650_p2 <= (xor_ln2220_fu_1644_p2 and and_ln2220_fu_1638_p2);
    empty_158_fu_839_p2 <= std_logic_vector(unsigned(p_cast1_fu_836_p1) + unsigned(ap_const_lv12_9F0));
    empty_159_fu_860_p2 <= std_logic_vector(unsigned(loop_index26_fu_154) + unsigned(ap_const_lv7_1));
    empty_160_fu_915_p2 <= std_logic_vector(unsigned(p_cast2_fu_911_p1) + unsigned(ap_const_lv11_4F8));
    empty_161_fu_939_p2 <= std_logic_vector(unsigned(p_cast3_fu_936_p1) + unsigned(ap_const_lv12_B98));
    empty_162_fu_960_p2 <= std_logic_vector(unsigned(loop_index20_fu_158) + unsigned(ap_const_lv7_1));
    empty_163_fu_1020_p2 <= std_logic_vector(unsigned(p_cast4_fu_1016_p1) + unsigned(ap_const_lv10_1A8));
    empty_165_fu_1065_p2 <= std_logic_vector(unsigned(empty_164_fu_166) + unsigned(ap_const_lv7_1));
    empty_166_fu_1112_p2 <= std_logic_vector(unsigned(p_cast5_fu_1108_p1) + unsigned(ap_const_lv11_4F8));
    empty_167_fu_1136_p2 <= std_logic_vector(unsigned(p_cast6_fu_1133_p1) + unsigned(ap_const_lv12_6A0));
    empty_168_fu_1157_p2 <= std_logic_vector(unsigned(loop_index14_fu_170) + unsigned(ap_const_lv7_1));
    empty_169_fu_1202_p2 <= std_logic_vector(unsigned(p_cast7_fu_1198_p1) + unsigned(ap_const_lv11_350));
    empty_170_fu_1226_p2 <= std_logic_vector(unsigned(p_cast8_fu_1223_p1) + unsigned(ap_const_lv12_848));
    empty_171_fu_1247_p2 <= std_logic_vector(unsigned(loop_index_fu_174) + unsigned(ap_const_lv7_1));
    empty_fu_815_p2 <= std_logic_vector(unsigned(p_cast_fu_811_p1) + unsigned(ap_const_lv11_350));
    exitcond92_fu_1252_p2 <= "1" when (loop_index_fu_174 = ap_const_lv7_69) else "0";
    exitcond93_fu_1162_p2 <= "1" when (loop_index14_fu_170 = ap_const_lv7_69) else "0";
    exitcond94_fu_1071_p2 <= "1" when (empty_164_fu_166 = ap_const_lv7_69) else "0";
    exitcond95_fu_1041_p2 <= "1" when (empty_172_fu_162 = ap_const_lv7_68) else "0";
    exitcond96_fu_965_p2 <= "1" when (loop_index20_fu_158 = ap_const_lv7_69) else "0";
    exitcond97_fu_865_p2 <= "1" when (loop_index26_fu_154 = ap_const_lv7_69) else "0";

    grp_zint_co_reduce_mod_1_fu_674_a_assign_proc : process(ap_CS_fsm_state28, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_zint_co_reduce_mod_1_fu_674_a <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_zint_co_reduce_mod_1_fu_674_a <= ap_const_lv8_A8;
        else 
            grp_zint_co_reduce_mod_1_fu_674_a <= "XXXXXXXX";
        end if; 
    end process;

    grp_zint_co_reduce_mod_1_fu_674_ap_start <= grp_zint_co_reduce_mod_1_fu_674_ap_start_reg;

    grp_zint_co_reduce_mod_1_fu_674_b_assign_proc : process(ap_CS_fsm_state28, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_zint_co_reduce_mod_1_fu_674_b <= ap_const_lv12_848;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_zint_co_reduce_mod_1_fu_674_b <= ap_const_lv12_6A0;
        else 
            grp_zint_co_reduce_mod_1_fu_674_b <= "XXXXXXXXXXXX";
        end if; 
    end process;


    grp_zint_co_reduce_mod_1_fu_674_m_assign_proc : process(ap_CS_fsm_state28, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_zint_co_reduce_mod_1_fu_674_m <= ap_const_lv11_350;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_zint_co_reduce_mod_1_fu_674_m <= ap_const_lv11_4F8;
        else 
            grp_zint_co_reduce_mod_1_fu_674_m <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_zint_co_reduce_mod_1_fu_674_m0i_assign_proc : process(x0i_reg_2807, y0i_reg_2835, ap_CS_fsm_state28, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_zint_co_reduce_mod_1_fu_674_m0i <= x0i_reg_2807;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_zint_co_reduce_mod_1_fu_674_m0i <= y0i_reg_2835;
        else 
            grp_zint_co_reduce_mod_1_fu_674_m0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_1562_p2 <= std_logic_vector(unsigned(i_reg_502) + unsigned(ap_const_lv5_1));
    icmp_ln1793_1_fu_2340_p2 <= "1" when (u_23_reg_663 = ap_const_lv7_6A) else "0";
    icmp_ln1793_fu_2224_p2 <= "1" when (u_20_reg_642 = ap_const_lv7_6A) else "0";
    icmp_ln1826_fu_1976_p2 <= "1" when (u_reg_621 = ap_const_lv7_6A) else "0";
    icmp_ln1834_fu_2042_p2 <= "1" when (u_reg_621 = ap_const_lv7_0) else "0";
    icmp_ln2120_fu_1277_p2 <= "1" when (unsigned(num_fu_178) > unsigned(ap_const_lv13_1D)) else "0";
    icmp_ln2143_fu_1460_p2 <= "1" when (j_1_reg_421 = ap_const_lv7_0) else "0";
    icmp_ln2184_fu_1556_p2 <= "1" when (i_reg_502 = ap_const_lv5_1F) else "0";
    icmp_ln2270_fu_2546_p2 <= "1" when (j_3_fu_182 = ap_const_lv7_6A) else "0";
    j_5_fu_1454_p2 <= std_logic_vector(unsigned(j_1_reg_421) + unsigned(ap_const_lv7_7F));
    j_7_fu_2585_p2 <= std_logic_vector(unsigned(j_3_fu_182) + unsigned(ap_const_lv7_1));
    lshr_ln10_fu_1327_p4 <= add_ln2147_fu_1321_p2(11 downto 2);
    lshr_ln11_fu_2570_p4 <= add_ln2271_fu_2564_p2(11 downto 2);
    lshr_ln12_fu_1860_p4 <= a_hi_2_fu_1702_p2(63 downto 1);
    lshr_ln13_fu_1944_p4 <= b_hi_2_fu_1766_p2(63 downto 1);
    lshr_ln14_fu_2006_p4 <= add_ln1830_fu_2000_p2(11 downto 2);
    lshr_ln15_fu_2027_p4 <= add_ln1831_fu_2021_p2(11 downto 2);
    lshr_ln16_fu_2160_p4 <= add_ln1835_fu_2155_p2(11 downto 2);
    lshr_ln1796_1_fu_2370_p4 <= add_ln1796_1_fu_2364_p2(11 downto 2);
    lshr_ln17_fu_2189_p4 <= add_ln1836_fu_2184_p2(11 downto 2);
    lshr_ln18_fu_2254_p4 <= add_ln1796_fu_2248_p2(11 downto 2);
    lshr_ln2217_fu_1606_p2 <= std_logic_vector(shift_right(unsigned(a_lo_1_reg_570),to_integer(unsigned('0' & zext_ln2184_fu_1552_p1(31-1 downto 0)))));
    lshr_ln2218_fu_1616_p2 <= std_logic_vector(shift_right(unsigned(b_lo_1_reg_561),to_integer(unsigned('0' & zext_ln2184_fu_1552_p1(31-1 downto 0)))));
    lshr_ln_fu_1306_p4 <= add_ln2146_fu_1300_p2(11 downto 2);
    mul_ln1832_1_fu_2096_p1 <= zext_ln1832_1_fu_2092_p1(32 - 1 downto 0);
    mul_ln1832_fu_2086_p1 <= zext_ln1832_fu_2082_p1(32 - 1 downto 0);
    mul_ln1833_1_fu_2124_p1 <= zext_ln1832_1_fu_2092_p1(32 - 1 downto 0);
    mul_ln1833_fu_2118_p1 <= zext_ln1832_fu_2082_p1(32 - 1 downto 0);
    nega_fu_2058_p3 <= cca_reg_609(32 downto 32);
    negb_fu_2269_p3 <= ccb_reg_597(32 downto 32);
    num_3_fu_2475_p2 <= std_logic_vector(unsigned(num_fu_178) + unsigned(ap_const_lv13_1FE2));
    oa_fu_1612_p1 <= lshr_ln2217_fu_1606_p2(1 - 1 downto 0);
    or_ln2153_fu_1414_p2 <= (vla1_q1 or vla1_q0);
    or_ln2273_fu_2613_p2 <= (sub_ln2273_fu_2607_p2 or rc_1_fu_186);
    p_cast10_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_845_p4),64));
    p_cast11_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_921_p4),64));
    p_cast12_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_945_p4),64));
    p_cast13_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1026_p4),64));
    p_cast14_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_164_fu_166),64));
    p_cast15_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1118_p4),64));
    p_cast16_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1142_p4),64));
    p_cast17_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1208_p4),64));
    p_cast18_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1232_p4),64));
    p_cast1_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_2713),12));
    p_cast2_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_903_p3),11));
    p_cast3_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2751),12));
    p_cast4_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1008_p3),10));
    p_cast5_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1100_p3),11));
    p_cast6_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_2815),12));
    p_cast7_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1190_p3),11));
    p_cast8_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_2843),12));
    p_cast9_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_821_p4),64));
    p_cast_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_803_p3),11));
    pa_1_fu_1714_p2 <= std_logic_vector(signed(pa_reg_549) - signed(and_ln2228_fu_1708_p2));
    pa_2_fu_1842_p2 <= std_logic_vector(unsigned(and_ln2239_fu_1836_p2) + unsigned(pa_1_fu_1714_p2));
    pa_3_fu_2404_p2 <= std_logic_vector(signed(pa_reg_549) - signed(and_ln2255_fu_2398_p2));
    pb_1_fu_1726_p2 <= std_logic_vector(signed(pb_reg_537) - signed(and_ln2229_fu_1720_p2));
    pb_2_fu_1854_p2 <= std_logic_vector(unsigned(and_ln2240_fu_1848_p2) + unsigned(pb_1_fu_1726_p2));
    pb_3_fu_2423_p2 <= std_logic_vector(signed(pb_reg_537) - signed(and_ln2256_fu_2417_p2));
    qa_1_fu_1778_p2 <= std_logic_vector(signed(qa_reg_525) - signed(and_ln2232_fu_1772_p2));
    qa_2_fu_1926_p2 <= std_logic_vector(unsigned(and_ln2243_fu_1920_p2) + unsigned(qa_1_fu_1778_p2));
    qa_3_fu_2449_p2 <= std_logic_vector(signed(qa_reg_525) - signed(and_ln2257_fu_2443_p2));
    qb_1_fu_1790_p2 <= std_logic_vector(signed(qb_reg_513) - signed(and_ln2233_fu_1784_p2));
    qb_2_fu_1938_p2 <= std_logic_vector(unsigned(and_ln2244_fu_1932_p2) + unsigned(qb_1_fu_1790_p2));
    qb_3_fu_2468_p2 <= std_logic_vector(signed(qb_reg_513) - signed(and_ln2258_fu_2462_p2));
    rc_2_fu_2596_p2 <= (vla1_q0 or rc_1_fu_186);
    rc_fu_2532_p2 <= (vla1_q1 xor ap_const_lv32_1);
    rt_fu_1598_p3 <= xor_ln2204_1_fu_1592_p2(63 downto 63);
    rz_fu_1568_p2 <= std_logic_vector(unsigned(b_hi_1_reg_579) - unsigned(a_hi_1_reg_588));
    select_ln1784_1_fu_2277_p3 <= 
        ap_const_lv32_7FFFFFFF when (negb_fu_2269_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln1784_fu_2066_p3 <= 
        ap_const_lv32_7FFFFFFF when (nega_fu_2058_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln1797_1_fu_2285_p3 <= 
        ap_const_lv31_7FFFFFFF when (negb_fu_2269_p3(0) = '1') else 
        ap_const_lv31_0;
    select_ln1797_fu_2074_p3 <= 
        ap_const_lv31_7FFFFFFF when (nega_fu_2058_p3(0) = '1') else 
        ap_const_lv31_0;
    select_ln2153_fu_1440_p3 <= 
        ap_const_lv32_FFFFFFFF when (xor_ln2153_fu_1434_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2226_fu_1668_p3 <= 
        ap_const_lv32_FFFFFFFF when (cAB_fu_1632_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2227_fu_1688_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (cAB_fu_1632_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2230_fu_1732_p3 <= 
        ap_const_lv32_FFFFFFFF when (cBA_fu_1650_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2231_fu_1752_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (cBA_fu_1650_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2238_fu_1808_p3 <= 
        ap_const_lv32_FFFFFFFF when (and_ln2238_1_fu_1802_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2239_fu_1828_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (and_ln2238_1_fu_1802_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2241_fu_1880_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (cA_fu_1662_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2242_fu_1900_p3 <= 
        ap_const_lv32_FFFFFFFF when (cA_fu_1662_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2255_fu_2391_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (nega_reg_3048(0) = '1') else 
        ap_const_lv64_0;
    select_ln2257_fu_2436_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (negb_reg_3088(0) = '1') else 
        ap_const_lv64_0;
        sext_ln1826_1_fu_2130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ccb_reg_597),64));

        sext_ln1826_fu_2102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cca_reg_609),64));

    shl_ln14_fu_1508_p3 <= (a0_2_fu_1484_p2 & ap_const_lv31_0);
    shl_ln15_fu_1530_p3 <= (b0_2_fu_1502_p2 & ap_const_lv31_0);
    shl_ln16_fu_2552_p3 <= (j_3_fu_182 & ap_const_lv2_0);
    shl_ln1796_1_fu_2352_p3 <= (u_23_reg_663 & ap_const_lv2_0);
    shl_ln17_fu_1988_p3 <= (u_reg_621 & ap_const_lv2_0);
    shl_ln18_fu_2236_p3 <= (u_20_reg_642 & ap_const_lv2_0);
    shl_ln2255_fu_2385_p2 <= std_logic_vector(shift_left(unsigned(pa_reg_549),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln2256_fu_2411_p2 <= std_logic_vector(shift_left(unsigned(pb_reg_537),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln2257_fu_2430_p2 <= std_logic_vector(shift_left(unsigned(qa_reg_525),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln2258_fu_2456_p2 <= std_logic_vector(shift_left(unsigned(qb_reg_513),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln_fu_1288_p3 <= (j_reg_410 & ap_const_lv2_0);
    sub_ln2273_fu_2607_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(rc_1_fu_186));
    sub_ln658_1_fu_880_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_2_reg_2705));
    sub_ln659_1_fu_993_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_1_fu_989_p2));
    sub_ln659_fu_984_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_reg_2743));
    tmp_10_fu_1190_p3 <= (loop_index_fu_174 & ap_const_lv2_0);
    tmp_11_fu_1208_p4 <= empty_169_fu_1202_p2(10 downto 2);
    tmp_12_fu_1232_p4 <= empty_170_fu_1226_p2(11 downto 2);
    tmp_15_fu_1426_p3 <= add_ln2153_fu_1420_p2(31 downto 31);
    tmp_16_fu_2619_p3 <= or_ln2273_fu_2613_p2(31 downto 31);
    tmp_1_fu_821_p4 <= empty_fu_815_p2(10 downto 2);
    tmp_2_fu_845_p4 <= empty_158_fu_839_p2(11 downto 2);
    tmp_3_fu_903_p3 <= (loop_index20_fu_158 & ap_const_lv2_0);
    tmp_4_fu_921_p4 <= empty_160_fu_915_p2(10 downto 2);
    tmp_5_fu_945_p4 <= empty_161_fu_939_p2(11 downto 2);
    tmp_6_fu_1008_p3 <= (add_ptr7_sum_fu_1002_p2 & ap_const_lv2_0);
    tmp_7_fu_1026_p4 <= empty_163_fu_1020_p2(9 downto 2);
    tmp_8_fu_1100_p3 <= (loop_index14_fu_170 & ap_const_lv2_0);
    tmp_9_fu_1118_p4 <= empty_166_fu_1112_p2(10 downto 2);
    tmp_fu_803_p3 <= (loop_index26_fu_154 & ap_const_lv2_0);
    tmp_s_fu_1142_p4 <= empty_167_fu_1136_p2(11 downto 2);
    trunc_ln1797_1_fu_2485_p1 <= vla1_q0(31 - 1 downto 0);
    trunc_ln1797_fu_2293_p1 <= vla1_q0(31 - 1 downto 0);
    trunc_ln1835_fu_2146_p1 <= za_fu_2112_p2(31 - 1 downto 0);
    trunc_ln1836_fu_2175_p1 <= zb_fu_2140_p2(31 - 1 downto 0);
    trunc_ln1841_fu_2048_p1 <= cca_reg_609(32 - 1 downto 0);
    trunc_ln1842_fu_2053_p1 <= ccb_reg_597(32 - 1 downto 0);
    trunc_ln2219_fu_1622_p1 <= lshr_ln2218_fu_1616_p2(1 - 1 downto 0);
    trunc_ln2273_1_fu_2637_p1 <= vla1_q0(1 - 1 downto 0);
    trunc_ln2273_fu_2633_p1 <= vla1_q1(1 - 1 downto 0);
    trunc_ln651_1_fu_748_p1 <= vla1_q0(31 - 1 downto 0);
    trunc_ln651_fu_702_p1 <= vla1_q1(31 - 1 downto 0);
    u_33_fu_2230_p2 <= std_logic_vector(unsigned(u_20_reg_642) + unsigned(ap_const_lv7_1));
    u_34_fu_1982_p2 <= std_logic_vector(unsigned(u_reg_621) + unsigned(ap_const_lv7_1));
    u_35_fu_2346_p2 <= std_logic_vector(unsigned(u_23_reg_663) + unsigned(ap_const_lv7_1));
    vla1_addr_28_reg_2665 <= ap_const_lv64_13E(12 - 1 downto 0);
    vla1_addr_reg_2660 <= ap_const_lv64_D4(12 - 1 downto 0);

    vla1_address0_assign_proc : process(ap_CS_fsm_state1, vla1_addr_28_reg_2665, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state26, icmp_ln1793_1_fu_2340_p2, ap_CS_fsm_state32, icmp_ln2270_fu_2546_p2, grp_zint_co_reduce_mod_1_fu_674_vla1_address0, ap_CS_fsm_state28, ap_CS_fsm_state30, p_cast9_fu_831_p1, p_cast11_fu_931_p1, p_cast14_fu_1060_p1, p_cast16_fu_1152_p1, p_cast18_fu_1242_p1, ap_CS_fsm_state14, zext_ln2147_fu_1337_p1, zext_ln1831_fu_2037_p1, zext_ln1836_fu_2199_p1, zext_ln1796_fu_2264_p1, zext_ln1796_1_fu_2380_p1, zext_ln2271_fu_2580_p1)
    begin
        if (((icmp_ln2270_fu_2546_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla1_address0 <= vla1_addr_28_reg_2665;
        elsif (((icmp_ln2270_fu_2546_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla1_address0 <= zext_ln2271_fu_2580_p1(12 - 1 downto 0);
        elsif (((icmp_ln1793_1_fu_2340_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            vla1_address0 <= zext_ln1796_1_fu_2380_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            vla1_address0 <= zext_ln1796_fu_2264_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            vla1_address0 <= zext_ln1836_fu_2199_p1(12 - 1 downto 0);
        elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_address0 <= ap_const_lv64_34F(12 - 1 downto 0);
        elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_address0 <= zext_ln1831_fu_2037_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            vla1_address0 <= ap_const_lv64_2E6(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla1_address0 <= zext_ln2147_fu_1337_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            vla1_address0 <= ap_const_lv64_212(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            vla1_address0 <= p_cast18_fu_1242_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vla1_address0 <= p_cast16_fu_1152_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            vla1_address0 <= p_cast14_fu_1060_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            vla1_address0 <= ap_const_lv64_6A(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            vla1_address0 <= p_cast11_fu_931_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            vla1_address0 <= p_cast9_fu_831_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            vla1_address0 <= ap_const_lv64_13E(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_address0 <= grp_zint_co_reduce_mod_1_fu_674_vla1_address0;
        else 
            vla1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    vla1_address1_assign_proc : process(ap_CS_fsm_state1, vla1_addr_reg_2660, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, ap_CS_fsm_state23, vla1_addr_52_reg_3082, ap_CS_fsm_state25, vla1_addr_53_reg_3117, ap_CS_fsm_state27, ap_CS_fsm_state32, grp_zint_co_reduce_mod_1_fu_674_vla1_address1, ap_CS_fsm_state17, ap_CS_fsm_state28, ap_CS_fsm_state30, p_cast10_fu_855_p1, p_cast12_fu_955_p1, p_cast13_fu_1036_p1, ap_CS_fsm_state9, p_cast15_fu_1128_p1, p_cast17_fu_1218_p1, zext_ln2146_fu_1316_p1, zext_ln1830_fu_2016_p1, zext_ln1835_fu_2170_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vla1_address1 <= vla1_addr_reg_2660;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            vla1_address1 <= vla1_addr_53_reg_3117;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            vla1_address1 <= vla1_addr_52_reg_3082;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            vla1_address1 <= zext_ln1835_fu_2170_p1(12 - 1 downto 0);
        elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_address1 <= ap_const_lv64_2E5(12 - 1 downto 0);
        elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_address1 <= zext_ln1830_fu_2016_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla1_address1 <= zext_ln2146_fu_1316_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            vla1_address1 <= ap_const_lv64_27C(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            vla1_address1 <= ap_const_lv64_212(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            vla1_address1 <= p_cast17_fu_1218_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            vla1_address1 <= p_cast15_fu_1128_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            vla1_address1 <= p_cast13_fu_1036_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            vla1_address1 <= p_cast12_fu_955_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            vla1_address1 <= p_cast10_fu_855_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            vla1_address1 <= ap_const_lv64_D4(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_address1 <= grp_zint_co_reduce_mod_1_fu_674_vla1_address1;
        else 
            vla1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    vla1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state26, icmp_ln1793_1_fu_2340_p2, ap_CS_fsm_state32, icmp_ln2270_fu_2546_p2, grp_zint_co_reduce_mod_1_fu_674_vla1_ce0, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((icmp_ln2270_fu_2546_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln2270_fu_2546_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((icmp_ln1793_1_fu_2340_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln1826_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            vla1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_ce0 <= grp_zint_co_reduce_mod_1_fu_674_vla1_ce0;
        else 
            vla1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vla1_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state32, grp_zint_co_reduce_mod_1_fu_674_vla1_ce1, ap_CS_fsm_state17, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln1826_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            vla1_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_ce1 <= grp_zint_co_reduce_mod_1_fu_674_vla1_ce1;
        else 
            vla1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vla1_d0_assign_proc : process(vla1_q1, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, ap_CS_fsm_state23, grp_zint_co_reduce_mod_1_fu_674_vla1_d0, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state14, add_ln2114_fu_1267_p2, trunc_ln1842_fu_2053_p1, zext_ln1836_1_fu_2179_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            vla1_d0 <= zext_ln1836_1_fu_2179_p1;
        elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_d0 <= trunc_ln1842_fu_2053_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            vla1_d0 <= add_ln2114_fu_1267_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            vla1_d0 <= vla1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            vla1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            vla1_d0 <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_d0 <= grp_zint_co_reduce_mod_1_fu_674_vla1_d0;
        else 
            vla1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla1_d1_assign_proc : process(vla1_q0, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_zint_co_reduce_mod_1_fu_674_vla1_d1, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state9, trunc_ln1841_fu_2048_p1, zext_ln1835_1_fu_2150_p1, zext_ln1798_fu_2327_p1, zext_ln1798_1_fu_2519_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            vla1_d1 <= zext_ln1798_1_fu_2519_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            vla1_d1 <= zext_ln1798_fu_2327_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            vla1_d1 <= zext_ln1835_1_fu_2150_p1;
        elsif (((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla1_d1 <= trunc_ln1841_fu_2048_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            vla1_d1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            vla1_d1 <= vla1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_d1 <= grp_zint_co_reduce_mod_1_fu_674_vla1_d1;
        else 
            vla1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla1_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, icmp_ln1834_reg_3044, ap_CS_fsm_state23, grp_zint_co_reduce_mod_1_fu_674_vla1_we0, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln1834_reg_3044 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            vla1_we0 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_we0 <= grp_zint_co_reduce_mod_1_fu_674_vla1_we0;
        else 
            vla1_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    vla1_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state22, icmp_ln1826_fu_1976_p2, icmp_ln1834_reg_3044, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_zint_co_reduce_mod_1_fu_674_vla1_we1, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln1834_reg_3044 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln1826_fu_1976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            vla1_we1 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            vla1_we1 <= grp_zint_co_reduce_mod_1_fu_674_vla1_we1;
        else 
            vla1_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    x0i_fu_1087_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_15_reg_2738));
    xor_ln1797_1_fu_2489_p2 <= (vla1_q0 xor select_ln1784_1_reg_3094);
    xor_ln1797_2_fu_2306_p2 <= (trunc_ln1797_fu_2293_p1 xor select_ln1797_reg_3059);
    xor_ln1797_3_fu_2498_p2 <= (trunc_ln1797_1_fu_2485_p1 xor select_ln1797_1_reg_3099);
    xor_ln1797_fu_2297_p2 <= (vla1_q0 xor select_ln1784_reg_3054);
    xor_ln2148_fu_1342_p2 <= (vla1_q1 xor a0_reg_467);
    xor_ln2149_fu_1360_p2 <= (vla1_q1 xor a1_reg_456);
    xor_ln2150_fu_1378_p2 <= (vla1_q0 xor b0_reg_445);
    xor_ln2151_fu_1396_p2 <= (vla1_q0 xor b1_reg_434);
    xor_ln2153_fu_1434_p2 <= (tmp_15_fu_1426_p3 xor ap_const_lv1_1);
    xor_ln2163_fu_1478_p2 <= (c0_2_reg_489 xor ap_const_lv32_FFFFFFFF);
    xor_ln2204_1_fu_1592_p2 <= (rz_fu_1568_p2 xor and_ln2205_fu_1586_p2);
    xor_ln2204_fu_1574_p2 <= (b_hi_1_reg_579 xor a_hi_1_reg_588);
    xor_ln2205_fu_1580_p2 <= (rz_fu_1568_p2 xor a_hi_1_reg_588);
    xor_ln2220_fu_1644_p2 <= (rt_fu_1598_p3 xor ap_const_lv1_1);
    xor_ln2221_fu_1656_p2 <= (oa_fu_1612_p1 xor ap_const_lv1_1);
    xor_ln2238_fu_1796_p2 <= (ap_const_lv1_1 xor and_ln2219_fu_1626_p2);
    xor_ln2241_fu_1874_p2 <= (zext_ln2241_fu_1870_p1 xor a_hi_2_fu_1702_p2);
    xor_ln2245_fu_1958_p2 <= (zext_ln2245_fu_1954_p1 xor b_hi_2_fu_1766_p2);
    xor_ln2273_fu_2627_p2 <= (tmp_16_fu_2619_p3 xor ap_const_lv1_1);
    y0i_fu_1177_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_17_reg_2771));
    y_10_fu_752_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(trunc_ln651_1_fu_748_p1));
    y_11_fu_770_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_3_fu_758_p2));
    y_12_fu_790_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_3_fu_780_p2));
    y_15_fu_885_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_reg_2695));
    y_6_fu_724_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_fu_712_p2));
    y_7_fu_742_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_fu_730_p2));
    y_fu_706_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(trunc_ln651_fu_702_p1));
    za_fu_2112_p2 <= std_logic_vector(unsigned(add_ln1832_fu_2106_p2) + unsigned(mul_ln1832_fu_2086_p2));
    zb_fu_2140_p2 <= std_logic_vector(unsigned(add_ln1833_fu_2134_p2) + unsigned(mul_ln1833_fu_2118_p2));
    zext_ln1793_1_fu_2503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_12_reg_653),32));
    zext_ln1793_fu_2311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_reg_632),32));
    zext_ln1796_1_fu_2380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1796_1_fu_2370_p4),64));
    zext_ln1796_2_fu_2244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln18_fu_2236_p3),12));
    zext_ln1796_3_fu_2360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1796_1_fu_2352_p3),12));
    zext_ln1796_fu_2264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln18_fu_2254_p4),64));
    zext_ln1797_1_fu_2494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_12_reg_653),31));
    zext_ln1797_fu_2302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_reg_632),31));
    zext_ln1798_1_fu_2519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1794_1_fu_2513_p2),32));
    zext_ln1798_fu_2327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1794_fu_2321_p2),32));
    zext_ln1830_1_fu_1996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln17_fu_1988_p3),12));
    zext_ln1830_fu_2016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln14_fu_2006_p4),64));
    zext_ln1831_fu_2037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln15_fu_2027_p4),64));
    zext_ln1832_1_fu_2092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vla1_q0),64));
    zext_ln1832_fu_2082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vla1_q1),64));
    zext_ln1835_1_fu_2150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1835_fu_2146_p1),32));
    zext_ln1835_fu_2170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln16_fu_2160_p4),64));
    zext_ln1836_1_fu_2179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1836_fu_2175_p1),32));
    zext_ln1836_fu_2199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln17_fu_2189_p4),64));
    zext_ln2146_1_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1288_p3),12));
    zext_ln2146_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1306_p4),64));
    zext_ln2147_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln10_fu_1327_p4),64));
    zext_ln2166_1_fu_1520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a1_2_fu_1472_p2),64));
    zext_ln2166_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln14_fu_1508_p3),64));
    zext_ln2167_1_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b1_2_fu_1496_p2),64));
    zext_ln2167_fu_1538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln15_fu_1530_p3),64));
    zext_ln2184_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_502),32));
    zext_ln2241_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln12_fu_1860_p4),64));
    zext_ln2245_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_fu_1944_p4),64));
    zext_ln2271_1_fu_2560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln16_fu_2552_p3),12));
    zext_ln2271_fu_2580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln11_fu_2570_p4),64));
end behav;
