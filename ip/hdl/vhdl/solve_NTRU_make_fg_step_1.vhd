-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity solve_NTRU_make_fg_step_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    vla1_ce0 : OUT STD_LOGIC;
    vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    vla1_ce1 : OUT STD_LOGIC;
    vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    data : IN STD_LOGIC_VECTOR (63 downto 0);
    logn : IN STD_LOGIC_VECTOR (31 downto 0);
    depth : IN STD_LOGIC_VECTOR (3 downto 0);
    in_ntt : IN STD_LOGIC_VECTOR (0 downto 0);
    out_ntt : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_modp_montymul_fu_289_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_289_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_289_p_din3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_289_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_289_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_289_p_ready : IN STD_LOGIC );
end;


architecture behav of solve_NTRU_make_fg_step_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (63 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (63 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (63 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (63 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (63 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (63 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (63 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (63 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv24_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv25_1FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111111111";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal MAX_BL_SMALL_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal MAX_BL_SMALL_ce0 : STD_LOGIC;
    signal MAX_BL_SMALL_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal MAX_BL_SMALL_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal MAX_BL_SMALL_ce1 : STD_LOGIC;
    signal MAX_BL_SMALL_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PRIMES_p_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal PRIMES_p_ce0 : STD_LOGIC;
    signal PRIMES_p_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal PRIMES_g_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal PRIMES_g_ce0 : STD_LOGIC;
    signal PRIMES_g_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal reg_879 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal reg_885 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_modp_mkgm2_1_fu_824_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln2957_fu_1616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal out_ntt_read_read_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_fu_912_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_reg_3381 : STD_LOGIC_VECTOR (13 downto 0);
    signal n_fu_920_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_reg_3415 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_3424 : STD_LOGIC_VECTOR (62 downto 0);
    signal u_201_reg_3432 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1587_fu_946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1587_reg_3440 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1587_1_fu_950_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1587_1_reg_3448 : STD_LOGIC_VECTOR (8 downto 0);
    signal tlen_reg_3455 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln2917_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2917_reg_3460 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2917_1_fu_958_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2917_1_reg_3468 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln2935_fu_972_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2935_reg_3473 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2918_fu_1002_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2918_reg_3479 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln2936_2_fu_1014_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln2936_2_reg_3486 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln2936_1_fu_1022_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2936_1_reg_3491 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2936_fu_1038_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln2936_reg_3497 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln2936_1_fu_1044_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2936_1_reg_3502 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_57_fu_1058_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_57_reg_3508 : STD_LOGIC_VECTOR (13 downto 0);
    signal gm_fu_1078_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal gm_reg_3513 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2918_fu_1084_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2918_reg_3519 : STD_LOGIC_VECTOR (63 downto 0);
    signal igm_fu_1106_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal igm_reg_3524 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2939_fu_1112_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2939_reg_3530 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2918_1_fu_1132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2918_1_reg_3546 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2940_fu_1140_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2940_reg_3551 : STD_LOGIC_VECTOR (63 downto 0);
    signal compare_src_dst_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compare_src_dst_reg_3556 : STD_LOGIC_VECTOR (0 downto 0);
    signal compare_n_to_0_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compare_n_to_0_reg_3560 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_319_fu_1158_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_319_reg_3571 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_fu_1171_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_reg_3583 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal empty_323_fu_1213_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_323_reg_3593 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_169_reg_3599 : STD_LOGIC_VECTOR (11 downto 0);
    signal index_increment_fu_1233_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal index_increment_reg_3604 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_329_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_329_reg_3609 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_fu_1356_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_3623 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_318_fu_1345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal empty_312_fu_1403_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_312_reg_3636 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_166_reg_3642 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2946_1_fu_1432_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2946_1_reg_3650 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal u_208_fu_1441_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_208_reg_3661 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln2946_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2948_fu_1451_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln2948_reg_3683 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln2948_fu_1455_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln2948_reg_3688 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_63_fu_1499_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_63_reg_3695 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1537_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_reg_3701 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln2948_fu_1543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2948_reg_3708 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2948_1_fu_1547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2948_1_reg_3714 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2949_fu_1612_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2949_reg_3720 : STD_LOGIC_VECTOR (11 downto 0);
    signal v_35_fu_1621_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_35_reg_3729 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2958_fu_1664_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2958_reg_3739 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2957_2_fu_1668_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2957_2_reg_3744 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_58_fu_1738_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_58_reg_3749 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln757_12_fu_1759_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_12_reg_3754 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_38_fu_1774_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_38_reg_3759 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal v_37_fu_1784_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_37_reg_3767 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal trunc_ln2949_1_fu_1790_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2949_1_reg_3772 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln2963_fu_1779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2963_1_fu_1878_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2963_1_reg_3787 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2949_5_fu_1915_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2949_5_reg_3792 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal v_43_fu_1924_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_43_reg_3801 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln2975_fu_1919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2976_fu_1967_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2976_reg_3811 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2975_2_fu_1971_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2975_2_reg_3816 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_59_fu_1983_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_59_reg_3821 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2949_9_fu_2020_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2949_9_reg_3826 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal x_54_fu_2032_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_54_reg_3831 : STD_LOGIC_VECTOR (13 downto 0);
    signal v_47_fu_2042_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_47_reg_3839 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal add_ln2949_8_fu_2052_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2949_8_reg_3844 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln2981_fu_2037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2981_1_fu_2141_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2981_1_reg_3859 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_131_fu_2177_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_131_reg_3864 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal x_assign_93_cast_fu_2182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_93_cast_reg_3869 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_cast26_fu_2186_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal x_assign_cast26_reg_3874 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1587_2_fu_2189_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1587_2_reg_3880 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln3009_fu_2193_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3009_reg_3886 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3009_1_fu_2200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3009_1_reg_3895 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal zext_ln3009_2_fu_2205_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3009_2_reg_3900 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln3009_fu_2209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1584_fu_2218_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1584_reg_3914 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_67_fu_2262_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_67_reg_3921 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_4_fu_2300_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_4_reg_3927 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal zext_ln1584_fu_2306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1584_reg_3934 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1584_2_fu_2310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1584_2_reg_3944 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_101_fu_2314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_101_reg_3951 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_11_fu_2412_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_11_reg_3956 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal i_15_fu_2431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_15_reg_3965 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln779_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln781_fu_2442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_modp_montymul_fu_812_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal r_reg_3978 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_41_fu_2453_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_41_reg_3991 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal trunc_ln3012_fu_2459_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln3012_reg_3996 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln3020_fu_2448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal u_204_fu_2505_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal u_204_reg_4006 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1597_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1597_reg_4011 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_60_fu_2594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_60_reg_4015 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal trunc_ln3021_fu_2637_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln3021_reg_4026 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3020_1_fu_2641_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln3020_1_reg_4031 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln3020_fu_2646_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln3020_reg_4036 : STD_LOGIC_VECTOR (61 downto 0);
    signal x_42_fu_2756_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_42_reg_4041 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal v_39_fu_2766_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_39_reg_4049 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal trunc_ln3012_1_fu_2772_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln3012_1_reg_4054 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln3024_fu_2761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln3024_1_fu_2860_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln3024_1_reg_4069 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln3012_fu_2865_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3012_reg_4074 : STD_LOGIC_VECTOR (11 downto 0);
    signal v_46_fu_2901_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_46_reg_4082 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal trunc_ln3012_2_fu_2907_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln3012_2_reg_4087 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln3033_fu_2896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln3012_3_fu_2911_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3012_3_reg_4092 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal u_206_fu_2957_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal u_206_reg_4103 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1597_1_fu_2963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1597_1_reg_4108 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_61_fu_3046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_61_reg_4112 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal lshr_ln52_reg_4123 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3033_1_fu_3121_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln3033_1_reg_4128 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln3033_fu_3126_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln3033_reg_4133 : STD_LOGIC_VECTOR (61 downto 0);
    signal x_51_fu_3204_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_51_reg_4138 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal v_45_fu_3214_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_45_reg_4146 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal icmp_ln3038_fu_3209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln51_reg_4161 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3038_1_fu_3336_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln3038_1_reg_4166 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_ap_start : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_ap_done : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_ap_idle : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_ap_ready : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_ce0 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_ce1 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_xx : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_modp_montymul_fu_797_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_797_b : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_797_p : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_797_p0i : STD_LOGIC_VECTOR (31 downto 0);
    signal r_modp_montymul_fu_812_ap_ready : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_824_ap_start : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_824_ap_idle : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_824_ap_ready : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_824_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_mkgm2_1_fu_824_vla1_ce0 : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_824_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_mkgm2_1_fu_824_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_mkgm2_1_fu_824_p0i : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_ap_start : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_839_ap_done : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_839_ap_idle : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_839_ap_ready : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_839_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_vla1_ce0 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_839_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_vla1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_vla1_ce1 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_839_vla1_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_vla1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_p : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_839_p0i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_ap_start : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_852_ap_done : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_852_ap_idle : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_852_ap_ready : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_ce0 : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_ce1 : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_vla1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_a : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_stride : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_logn : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_852_p0i : STD_LOGIC_VECTOR (30 downto 0);
    signal v_reg_498 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal idx_reg_509 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_34_reg_520 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal idx177_reg_531 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_38_reg_542 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state19_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal idx179_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_44_reg_564 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_state22_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal idx181_reg_575 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal r_11_reg_597 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_117_reg_606 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_96_reg_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv62_reg_628 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal v_33_reg_638 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx183_reg_650 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_reg_662 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_29_reg_671 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_36_reg_682 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal idx185_reg_693 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvars_iv_reg_704 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal v_40_reg_714 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx187_reg_726 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_205_reg_738 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_36_reg_747 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_42_reg_758 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal idx189_reg_769 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal z_fu_1604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_104_fu_2362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_mkgm2_1_fu_824_ap_start_reg : STD_LOGIC := '0';
    signal grp_modp_NTT2_ext_1_fu_839_ap_start_reg : STD_LOGIC := '0';
    signal grp_modp_iNTT2_ext_1_fu_852_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal zext_ln2926_fu_896_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2927_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast9_cast_fu_1208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast12_cast_fu_1286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast7_cast_fu_1341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast4_cast_fu_1398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2946_fu_1426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2958_fu_1659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2958_1_fu_1700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2966_fu_1834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2967_fu_1873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2968_fu_1910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2976_fu_1962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2976_1_fu_2015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2984_fu_2097_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2985_fu_2136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2986_fu_2168_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1601_fu_2500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1621_fu_2632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3021_fu_2740_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3028_fu_2816_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3029_fu_2855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3030_fu_2891_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1601_1_fu_2952_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1621_5_fu_3084_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3035_fu_3193_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3042_fu_3282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3043_fu_3321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln3044_fu_3341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal index_ptr53_fu_178 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_307_fu_182 : STD_LOGIC_VECTOR (63 downto 0);
    signal index_ptr_fu_1294_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_132_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state30_on_subcall_done : BOOLEAN;
    signal u_133_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_207_fu_3345_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state64_on_subcall_done : BOOLEAN;
    signal empty_328_fu_1279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_327_fu_1272_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_317_fu_1334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_316_fu_1327_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal z_112_fu_2706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_114_fu_3186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2927_fu_901_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln2924_fu_916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln2935_fu_966_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln2935_fu_966_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal mul_ln2935_fu_966_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln2935_2_fu_984_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_976_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2935_1_fu_988_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln2936_fu_1008_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2936_fu_1030_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln2936_2_fu_1034_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2936_1_fu_1050_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2937_fu_1064_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln79_fu_1070_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln2938_fu_1088_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2938_fu_1092_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln80_fu_1098_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln81_fu_1118_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal t1_fu_1126_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal fs_fu_996_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2940_fu_1136_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_308_fu_1167_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_320_fu_1185_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_322_fu_1193_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_167_fu_1198_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_321_fu_1189_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_326_fu_1218_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_168_fu_1244_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast24_fu_1251_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_324_fu_1255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_325_fu_1261_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast25_fu_1269_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_cast11_cast_fu_1265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_fu_1299_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast22_fu_1306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_313_fu_1310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_314_fu_1316_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast23_fu_1324_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_cast6_cast_fu_1320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_310_fu_1373_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal index_ptr_cast_fu_1377_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_311_fu_1383_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_164_fu_1388_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_309_fu_1369_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_315_fu_1408_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln2948_fu_1451_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln2948_fu_1455_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_fu_1459_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln656_fu_1469_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln656_fu_1469_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln656_fu_1465_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_fu_1469_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_60_fu_1481_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_60_fu_1481_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln657_fu_1487_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_60_fu_1481_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_fu_1487_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_63_fu_1499_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_fu_1505_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln658_fu_1505_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_64_fu_1515_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1520_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_64_fu_1515_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1520_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1537_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1537_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln685_5_fu_1551_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln82_fu_1556_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln685_fu_1564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln685_fu_1568_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_178_fu_1574_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_fu_1582_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_fu_1590_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_fu_1596_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_8_fu_1600_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2949_fu_1627_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2949_1_fu_1631_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln84_fu_1636_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_fu_1644_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln_fu_1649_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2958_fu_1673_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln85_fu_1677_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2958_1_fu_1685_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln2958_1_fu_1690_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln757_fu_1705_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln757_4_fu_1709_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln757_4_fu_1717_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln2957_fu_1723_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln83_fu_1731_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2957_fu_1727_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln757_4_fu_1743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_116_fu_1749_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln86_fu_1763_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2963_fu_1770_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln2966_fu_1794_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln88_fu_1798_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2966_fu_1806_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2966_1_fu_1811_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2966_1_fu_1819_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln40_fu_1824_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln2967_fu_1839_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2967_fu_1845_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln89_fu_1850_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2967_1_fu_1858_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln41_fu_1863_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2949_3_fu_1883_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2949_1_fu_1887_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_43_fu_1895_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln42_fu_1900_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2949_2_fu_1930_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2949_6_fu_1934_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2949_2_fu_1939_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_50_fu_1947_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln48_fu_1952_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln96_fu_1976_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2976_fu_1988_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln97_fu_1992_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2976_1_fu_2000_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln2976_1_fu_2005_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln99_fu_2024_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln2949_3_fu_2048_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2984_fu_2057_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln103_fu_2061_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2984_fu_2069_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2984_1_fu_2074_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2984_1_fu_2082_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln53_fu_2087_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln2985_fu_2102_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2985_fu_2108_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln104_fu_2113_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln2985_1_fu_2121_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln54_fu_2126_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2949_3_fu_2146_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_56_fu_2153_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln55_fu_2158_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1584_fu_2214_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1584_fu_2218_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1584_fu_2214_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal y_65_fu_2222_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln656_14_fu_2232_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln656_14_fu_2232_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln656_4_fu_2228_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_14_fu_2232_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_66_fu_2244_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_66_fu_2244_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln657_14_fu_2250_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_66_fu_2244_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_14_fu_2250_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_67_fu_2262_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_14_fu_2268_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln658_14_fu_2268_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_68_fu_2278_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_5_fu_2283_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_68_fu_2278_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_5_fu_2283_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_4_fu_2300_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_4_fu_2300_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln685_fu_2320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln685_4_fu_2326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_179_fu_2332_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_8_fu_2340_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_6_fu_2348_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_6_fu_2354_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_9_fu_2358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln735_fu_2370_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln757_fu_2374_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln757_fu_2382_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln757_fu_2388_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln757_fu_2392_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln757_fu_2396_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_12_fu_2402_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln779_fu_2416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln779_fu_2422_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_fu_2437_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1601_1_fu_2463_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1601_fu_2467_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln160131_fu_2472_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln90_fu_2477_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1601_3_fu_2485_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln43_fu_2490_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_fu_2517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_180_fu_2522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1602_fu_2530_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln1602_fu_2538_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1598_fu_2544_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1598_fu_2548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_fu_2552_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_864_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_14_fu_2558_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_181_fu_2564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_9_fu_2572_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_7_fu_2580_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_7_fu_2586_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_10_fu_2590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln3020_fu_2600_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1621_fu_2604_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln94_fu_2609_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1621_3_fu_2617_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln1621_3_fu_2622_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_869_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1621_4_fu_2651_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1621_fu_2655_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln1621_fu_2661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1621_fu_2665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln697_fu_2671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_182_fu_2676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_fu_2684_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln697_fu_2692_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln697_fu_2698_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln697_fu_2702_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3021_fu_2713_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln95_fu_2717_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln3021_1_fu_2725_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln47_fu_2730_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln87_fu_2745_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln3024_fu_2752_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln3028_fu_2776_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln92_fu_2780_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3028_fu_2788_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln3028_1_fu_2793_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln3028_1_fu_2801_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln44_fu_2806_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln3029_fu_2821_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3029_fu_2827_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln93_fu_2832_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln3029_1_fu_2840_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln45_fu_2845_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln91_fu_2869_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_49_fu_2876_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln46_fu_2881_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1601_fu_2915_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1601_4_fu_2919_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1601_6_fu_2924_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1601_1_fu_2929_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1601_5_fu_2937_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln1601_1_fu_2942_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_60_fu_2969_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_183_fu_2974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1602_1_fu_2982_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln1602_1_fu_2990_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1598_1_fu_2996_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1598_1_fu_3000_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_16_fu_3004_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_17_fu_3010_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_184_fu_3016_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_10_fu_3024_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_8_fu_3032_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_8_fu_3038_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_11_fu_3042_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln3033_fu_3052_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1621_4_fu_3056_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1621_1_fu_3061_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1621_5_fu_3069_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln1621_4_fu_3074_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln3035_fu_3089_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3035_fu_3093_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln102_fu_3098_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln3035_1_fu_3106_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1621_6_fu_3131_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1621_1_fu_3135_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln1621_1_fu_3141_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1621_1_fu_3145_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln697_2_fu_3151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_185_fu_3156_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_2_fu_3164_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln697_1_fu_3172_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln697_1_fu_3178_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln697_1_fu_3182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln98_fu_3197_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln3012_3_fu_3220_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3012_2_fu_3224_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln3012_1_fu_3229_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln3042_fu_3242_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln100_fu_3246_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3042_fu_3254_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln3042_1_fu_3259_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln3042_1_fu_3267_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln49_fu_3272_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln3043_fu_3287_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3043_fu_3293_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln101_fu_3298_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln3043_1_fu_3306_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln50_fu_3311_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_55_fu_3237_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_block_state26_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal mul_ln2935_fu_966_p00 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component solve_NTRU_zint_rebuild_CRT_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce1 : OUT STD_LOGIC;
        vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        xx : IN STD_LOGIC_VECTOR (13 downto 0);
        xlen : IN STD_LOGIC_VECTOR (8 downto 0);
        xstride : IN STD_LOGIC_VECTOR (8 downto 0);
        num : IN STD_LOGIC_VECTOR (63 downto 0);
        normalize_signed : IN STD_LOGIC_VECTOR (0 downto 0);
        tmp : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component solve_NTRU_modp_montymul IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (31 downto 0);
        b : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (31 downto 0);
        p0i : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solve_NTRU_modp_mkgm2_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        gm : IN STD_LOGIC_VECTOR (13 downto 0);
        igm : IN STD_LOGIC_VECTOR (13 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        g : IN STD_LOGIC_VECTOR (30 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_modp_NTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce1 : OUT STD_LOGIC;
        vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        stride : IN STD_LOGIC_VECTOR (63 downto 0);
        gm : IN STD_LOGIC_VECTOR (63 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (31 downto 0);
        p0i : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solve_NTRU_modp_iNTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce0 : OUT STD_LOGIC;
        vla1_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        vla1_ce1 : OUT STD_LOGIC;
        vla1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (13 downto 0);
        stride : IN STD_LOGIC_VECTOR (8 downto 0);
        igm : IN STD_LOGIC_VECTOR (13 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_8ns_61s_61_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (60 downto 0);
        dout : OUT STD_LOGIC_VECTOR (60 downto 0) );
    end component;


    component solve_NTRU_mul_25s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_31s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_25s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_mul_31s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component solve_NTRU_make_fg_step_1_MAX_BL_SMALL_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component solve_NTRU_zint_rebuild_CRT_1_PRIMES_p_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component solve_NTRU_make_fg_step_1_PRIMES_g_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;



begin
    MAX_BL_SMALL_U : component solve_NTRU_make_fg_step_1_MAX_BL_SMALL_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => MAX_BL_SMALL_address0,
        ce0 => MAX_BL_SMALL_ce0,
        q0 => MAX_BL_SMALL_q0,
        address1 => MAX_BL_SMALL_address1,
        ce1 => MAX_BL_SMALL_ce1,
        q1 => MAX_BL_SMALL_q1);

    PRIMES_p_U : component solve_NTRU_zint_rebuild_CRT_1_PRIMES_p_ROM_AUTO_1R
    generic map (
        DataWidth => 25,
        AddressRange => 522,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => PRIMES_p_address0,
        ce0 => PRIMES_p_ce0,
        q0 => PRIMES_p_q0);

    PRIMES_g_U : component solve_NTRU_make_fg_step_1_PRIMES_g_ROM_AUTO_1R
    generic map (
        DataWidth => 31,
        AddressRange => 522,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => PRIMES_g_address0,
        ce0 => PRIMES_g_ce0,
        q0 => PRIMES_g_q0);

    grp_zint_rebuild_CRT_1_fu_780 : component solve_NTRU_zint_rebuild_CRT_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zint_rebuild_CRT_1_fu_780_ap_start,
        ap_done => grp_zint_rebuild_CRT_1_fu_780_ap_done,
        ap_idle => grp_zint_rebuild_CRT_1_fu_780_ap_idle,
        ap_ready => grp_zint_rebuild_CRT_1_fu_780_ap_ready,
        vla1_address0 => grp_zint_rebuild_CRT_1_fu_780_vla1_address0,
        vla1_ce0 => grp_zint_rebuild_CRT_1_fu_780_vla1_ce0,
        vla1_we0 => grp_zint_rebuild_CRT_1_fu_780_vla1_we0,
        vla1_d0 => grp_zint_rebuild_CRT_1_fu_780_vla1_d0,
        vla1_q0 => vla1_q0,
        vla1_address1 => grp_zint_rebuild_CRT_1_fu_780_vla1_address1,
        vla1_ce1 => grp_zint_rebuild_CRT_1_fu_780_vla1_ce1,
        vla1_we1 => grp_zint_rebuild_CRT_1_fu_780_vla1_we1,
        vla1_d1 => grp_zint_rebuild_CRT_1_fu_780_vla1_d1,
        vla1_q1 => vla1_q1,
        xx => grp_zint_rebuild_CRT_1_fu_780_xx,
        xlen => zext_ln1587_1_reg_3448,
        xstride => zext_ln1587_1_reg_3448,
        num => n_reg_3415,
        normalize_signed => ap_const_lv1_1,
        tmp => gm_reg_3513);

    r_modp_montymul_fu_812 : component solve_NTRU_modp_montymul
    port map (
        ap_ready => r_modp_montymul_fu_812_ap_ready,
        a => r_11_reg_597,
        b => r_11_reg_597,
        p => zext_ln1584_reg_3934,
        p0i => zext_ln1584_2_reg_3944,
        ap_return => r_modp_montymul_fu_812_ap_return);

    grp_modp_mkgm2_1_fu_824 : component solve_NTRU_modp_mkgm2_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_mkgm2_1_fu_824_ap_start,
        ap_done => grp_modp_mkgm2_1_fu_824_ap_done,
        ap_idle => grp_modp_mkgm2_1_fu_824_ap_idle,
        ap_ready => grp_modp_mkgm2_1_fu_824_ap_ready,
        vla1_address0 => grp_modp_mkgm2_1_fu_824_vla1_address0,
        vla1_ce0 => grp_modp_mkgm2_1_fu_824_vla1_ce0,
        vla1_we0 => grp_modp_mkgm2_1_fu_824_vla1_we0,
        vla1_d0 => grp_modp_mkgm2_1_fu_824_vla1_d0,
        gm => gm_reg_3513,
        igm => igm_reg_3524,
        logn => logn,
        g => reg_885,
        p => reg_879,
        p0i => grp_modp_mkgm2_1_fu_824_p0i);

    grp_modp_NTT2_ext_1_fu_839 : component solve_NTRU_modp_NTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_NTT2_ext_1_fu_839_ap_start,
        ap_done => grp_modp_NTT2_ext_1_fu_839_ap_done,
        ap_idle => grp_modp_NTT2_ext_1_fu_839_ap_idle,
        ap_ready => grp_modp_NTT2_ext_1_fu_839_ap_ready,
        vla1_address0 => grp_modp_NTT2_ext_1_fu_839_vla1_address0,
        vla1_ce0 => grp_modp_NTT2_ext_1_fu_839_vla1_ce0,
        vla1_we0 => grp_modp_NTT2_ext_1_fu_839_vla1_we0,
        vla1_d0 => grp_modp_NTT2_ext_1_fu_839_vla1_d0,
        vla1_q0 => vla1_q0,
        vla1_address1 => grp_modp_NTT2_ext_1_fu_839_vla1_address1,
        vla1_ce1 => grp_modp_NTT2_ext_1_fu_839_vla1_ce1,
        vla1_we1 => grp_modp_NTT2_ext_1_fu_839_vla1_we1,
        vla1_d1 => grp_modp_NTT2_ext_1_fu_839_vla1_d1,
        vla1_q1 => vla1_q1,
        a => zext_ln2918_1_reg_3546,
        stride => ap_const_lv64_1,
        gm => zext_ln2918_reg_3519,
        logn => logn,
        p => grp_modp_NTT2_ext_1_fu_839_p,
        p0i => grp_modp_NTT2_ext_1_fu_839_p0i);

    grp_modp_iNTT2_ext_1_fu_852 : component solve_NTRU_modp_iNTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_iNTT2_ext_1_fu_852_ap_start,
        ap_done => grp_modp_iNTT2_ext_1_fu_852_ap_done,
        ap_idle => grp_modp_iNTT2_ext_1_fu_852_ap_idle,
        ap_ready => grp_modp_iNTT2_ext_1_fu_852_ap_ready,
        vla1_address0 => grp_modp_iNTT2_ext_1_fu_852_vla1_address0,
        vla1_ce0 => grp_modp_iNTT2_ext_1_fu_852_vla1_ce0,
        vla1_we0 => grp_modp_iNTT2_ext_1_fu_852_vla1_we0,
        vla1_d0 => grp_modp_iNTT2_ext_1_fu_852_vla1_d0,
        vla1_q0 => vla1_q0,
        vla1_address1 => grp_modp_iNTT2_ext_1_fu_852_vla1_address1,
        vla1_ce1 => grp_modp_iNTT2_ext_1_fu_852_vla1_ce1,
        vla1_we1 => grp_modp_iNTT2_ext_1_fu_852_vla1_we1,
        vla1_d1 => grp_modp_iNTT2_ext_1_fu_852_vla1_d1,
        vla1_q1 => vla1_q1,
        a => grp_modp_iNTT2_ext_1_fu_852_a,
        stride => grp_modp_iNTT2_ext_1_fu_852_stride,
        igm => igm_reg_3524,
        logn => grp_modp_iNTT2_ext_1_fu_852_logn,
        p => reg_879,
        p0i => grp_modp_iNTT2_ext_1_fu_852_p0i);

    mul_8ns_61s_61_1_1_U119 : component solve_NTRU_mul_8ns_61s_61_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 61,
        dout_WIDTH => 61)
    port map (
        din0 => mul_ln2935_fu_966_p0,
        din1 => mul_ln2935_fu_966_p1,
        dout => mul_ln2935_fu_966_p2);

    mul_25s_24ns_31_1_1_U120 : component solve_NTRU_mul_25s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln656_fu_1469_p0,
        din1 => mul_ln656_fu_1469_p1,
        dout => mul_ln656_fu_1469_p2);

    mul_31s_24ns_31_1_1_U121 : component solve_NTRU_mul_31s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => y_60_fu_1481_p0,
        din1 => y_60_fu_1481_p1,
        dout => y_60_fu_1481_p2);

    mul_25s_31s_31_1_1_U122 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln657_fu_1487_p0,
        din1 => y_60_fu_1481_p2,
        dout => mul_ln657_fu_1487_p2);

    mul_31s_31s_31_1_1_U123 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_63_fu_1499_p0,
        din1 => y_60_fu_1481_p2,
        dout => y_63_fu_1499_p2);

    mul_25s_31s_31_1_1_U124 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln658_fu_1505_p0,
        din1 => y_63_reg_3695,
        dout => mul_ln658_fu_1505_p2);

    mul_31s_31s_31_1_1_U125 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_64_fu_1515_p0,
        din1 => y_63_reg_3695,
        dout => y_64_fu_1515_p2);

    mul_25s_31s_31_1_1_U126 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln659_fu_1520_p0,
        din1 => y_64_fu_1515_p2,
        dout => mul_ln659_fu_1520_p2);

    mul_31s_31s_31_1_1_U127 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => p0i_fu_1537_p0,
        din1 => p0i_fu_1537_p1,
        dout => p0i_fu_1537_p2);

    mul_25s_24ns_31_1_1_U128 : component solve_NTRU_mul_25s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln656_14_fu_2232_p0,
        din1 => mul_ln656_14_fu_2232_p1,
        dout => mul_ln656_14_fu_2232_p2);

    mul_31s_24ns_31_1_1_U129 : component solve_NTRU_mul_31s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => y_66_fu_2244_p0,
        din1 => y_66_fu_2244_p1,
        dout => y_66_fu_2244_p2);

    mul_25s_31s_31_1_1_U130 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln657_14_fu_2250_p0,
        din1 => y_66_fu_2244_p2,
        dout => mul_ln657_14_fu_2250_p2);

    mul_31s_31s_31_1_1_U131 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_67_fu_2262_p0,
        din1 => y_66_fu_2244_p2,
        dout => y_67_fu_2262_p2);

    mul_25s_31s_31_1_1_U132 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln658_14_fu_2268_p0,
        din1 => y_67_reg_3921,
        dout => mul_ln658_14_fu_2268_p2);

    mul_31s_31s_31_1_1_U133 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_68_fu_2278_p0,
        din1 => y_67_reg_3921,
        dout => y_68_fu_2278_p2);

    mul_25s_31s_31_1_1_U134 : component solve_NTRU_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln659_5_fu_2283_p0,
        din1 => y_68_fu_2278_p2,
        dout => mul_ln659_5_fu_2283_p2);

    mul_31s_31s_31_1_1_U135 : component solve_NTRU_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => p0i_4_fu_2300_p0,
        din1 => p0i_4_fu_2300_p1,
        dout => p0i_4_fu_2300_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_modp_NTT2_ext_1_fu_839_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_NTT2_ext_1_fu_839_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln3020_fu_2448_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((icmp_ln3033_fu_2896_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54)) or ((icmp_ln2975_fu_1919_p2 = ap_const_lv1_1) and (in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
                    grp_modp_NTT2_ext_1_fu_839_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_NTT2_ext_1_fu_839_ap_ready = ap_const_logic_1)) then 
                    grp_modp_NTT2_ext_1_fu_839_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_modp_iNTT2_ext_1_fu_852_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_iNTT2_ext_1_fu_852_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((icmp_ln3038_fu_3209_p2 = ap_const_lv1_1) and (out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59)) or ((icmp_ln2981_fu_2037_p2 = ap_const_lv1_1) and (in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln2963_fu_1779_p2 = ap_const_lv1_1) and (in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
                    grp_modp_iNTT2_ext_1_fu_852_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_iNTT2_ext_1_fu_852_ap_ready = ap_const_logic_1)) then 
                    grp_modp_iNTT2_ext_1_fu_852_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_modp_mkgm2_1_fu_824_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_mkgm2_1_fu_824_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                    grp_modp_mkgm2_1_fu_824_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_mkgm2_1_fu_824_ap_ready = ap_const_logic_1)) then 
                    grp_modp_mkgm2_1_fu_824_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_zint_rebuild_CRT_1_fu_780_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zint_rebuild_CRT_1_fu_780_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((icmp_ln2946_fu_1436_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                    grp_zint_rebuild_CRT_1_fu_780_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zint_rebuild_CRT_1_fu_780_ap_ready = ap_const_logic_1)) then 
                    grp_zint_rebuild_CRT_1_fu_780_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_307_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1152_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                empty_307_fu_182 <= shl_ln2940_fu_1140_p2;
            elsif (((empty_318_fu_1345_p2 = ap_const_lv1_0) and (compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                empty_307_fu_182 <= index_ptr_fu_1294_p2;
            end if; 
        end if;
    end process;

    i_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                i_reg_586 <= i_15_reg_3965;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                i_reg_586 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idx177_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                idx177_reg_531 <= add_ln2963_1_reg_3787;
            elsif (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                idx177_reg_531 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx179_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                idx179_reg_553 <= add_ln2975_2_reg_3816;
            elsif (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                idx179_reg_553 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx181_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                idx181_reg_575 <= add_ln2981_1_reg_3859;
            elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                idx181_reg_575 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx183_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_1))) then 
                idx183_reg_650 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                idx183_reg_650 <= add_ln3020_1_reg_4031;
            end if; 
        end if;
    end process;

    idx185_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                idx185_reg_693 <= add_ln3024_1_reg_4069;
            elsif (((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                idx185_reg_693 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx187_reg_726_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3024_fu_2761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                idx187_reg_726 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                idx187_reg_726 <= add_ln3033_1_reg_4128;
            end if; 
        end if;
    end process;

    idx189_reg_769_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                idx189_reg_769 <= add_ln3038_1_reg_4166;
            elsif (((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                idx189_reg_769 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                idx_reg_509 <= add_ln2957_2_reg_3744;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                idx_reg_509 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    index_ptr53_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1152_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                index_ptr53_fu_178 <= ap_const_lv64_0;
            elsif (((empty_329_reg_3609 = ap_const_lv1_0) and (compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                index_ptr53_fu_178 <= index_increment_reg_3604;
            end if; 
        end if;
    end process;

    indvars_iv62_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_1))) then 
                indvars_iv62_reg_628 <= shl_ln2936_2_reg_3486;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                indvars_iv62_reg_628 <= add_ln3020_reg_4036;
            end if; 
        end if;
    end process;

    indvars_iv_reg_704_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3024_fu_2761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                indvars_iv_reg_704 <= add_ln2936_reg_3497;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                indvars_iv_reg_704 <= add_ln3033_reg_4133;
            end if; 
        end if;
    end process;

    r_11_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                r_11_reg_597 <= r_reg_3978;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                r_11_reg_597 <= zext_ln757_11_fu_2412_p1;
            end if; 
        end if;
    end process;

    u_132_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((compare_n_to_0_reg_3560 = ap_const_lv1_1) or ((empty_318_fu_1345_p2 = ap_const_lv1_1) and (compare_src_dst_reg_3556 = ap_const_lv1_1))) or ((empty_329_reg_3609 = ap_const_lv1_1) and (compare_src_dst_reg_3556 = ap_const_lv1_0))))) then 
                u_132_fu_186 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_state30_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                u_132_fu_186 <= u_208_reg_3661;
            end if; 
        end if;
    end process;

    u_133_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2946_fu_1436_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                u_133_fu_190 <= u_201_reg_3432;
            elsif (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                u_133_fu_190 <= u_207_fu_3345_p2;
            end if; 
        end if;
    end process;

    u_205_reg_738_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3033_fu_2896_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                u_205_reg_738 <= zext_ln1587_2_reg_3880;
            elsif (((icmp_ln1597_1_reg_4108 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                u_205_reg_738 <= u_206_reg_4103;
            end if; 
        end if;
    end process;

    u_reg_662_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3020_fu_2448_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                u_reg_662 <= zext_ln1587_2_reg_3880;
            elsif (((icmp_ln1597_reg_4011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                u_reg_662 <= u_204_reg_4006;
            end if; 
        end if;
    end process;

    v_33_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_1))) then 
                v_33_reg_638 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                v_33_reg_638 <= v_41_reg_3991;
            end if; 
        end if;
    end process;

    v_34_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                v_34_reg_520 <= v_37_reg_3767;
            elsif (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                v_34_reg_520 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_36_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                v_36_reg_682 <= v_39_reg_4049;
            elsif (((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                v_36_reg_682 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_38_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                v_38_reg_542 <= v_43_reg_3801;
            elsif (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                v_38_reg_542 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    v_40_reg_714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3024_fu_2761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                v_40_reg_714 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                v_40_reg_714 <= v_46_reg_4082;
            end if; 
        end if;
    end process;

    v_42_reg_758_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                v_42_reg_758 <= v_45_reg_4146;
            elsif (((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                v_42_reg_758 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_44_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                v_44_reg_564 <= v_47_reg_3839;
            elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v_44_reg_564 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                v_reg_498 <= v_35_reg_3729;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                v_reg_498 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    x_29_reg_671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3020_fu_2448_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                x_29_reg_671 <= ap_const_lv32_0;
            elsif (((icmp_ln1597_reg_4011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                x_29_reg_671 <= x_60_fu_2594_p2;
            end if; 
        end if;
    end process;

    x_36_reg_747_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3033_fu_2896_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                x_36_reg_747 <= ap_const_lv32_0;
            elsif (((icmp_ln1597_1_reg_4108 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                x_36_reg_747 <= x_61_fu_3046_p2;
            end if; 
        end if;
    end process;

    z_117_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                z_117_reg_606 <= z_96_reg_616;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                z_117_reg_606 <= z_101_reg_3951;
            end if; 
        end if;
    end process;

    z_96_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln779_fu_2426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                if ((icmp_ln781_fu_2442_p2 = ap_const_lv1_1)) then 
                    z_96_reg_616 <= z_117_reg_606;
                elsif ((icmp_ln781_fu_2442_p2 = ap_const_lv1_0)) then 
                    z_96_reg_616 <= grp_modp_montymul_fu_289_p_dout0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln2918_reg_3479 <= add_ln2918_fu_1002_p2;
                add_ln2936_1_reg_3502 <= add_ln2936_1_fu_1044_p2;
                add_ln2936_reg_3497 <= add_ln2936_fu_1038_p2;
                add_ln2939_reg_3530 <= add_ln2939_fu_1112_p2;
                compare_n_to_0_reg_3560 <= compare_n_to_0_fu_1152_p2;
                compare_src_dst_reg_3556 <= compare_src_dst_fu_1146_p2;
                empty_reg_3381 <= empty_fu_912_p1;
                gm_reg_3513 <= gm_fu_1078_p2;
                igm_reg_3524 <= igm_fu_1106_p2;
                n_reg_3415 <= n_fu_920_p2;
                    shl_ln2936_2_reg_3486(61 downto 1) <= shl_ln2936_2_fu_1014_p3(61 downto 1);
                    shl_ln2940_reg_3551(63 downto 3) <= shl_ln2940_fu_1140_p2(63 downto 3);
                tlen_reg_3455 <= MAX_BL_SMALL_q0;
                trunc_ln2935_reg_3473 <= trunc_ln2935_fu_972_p1;
                    trunc_ln2936_1_reg_3491(11 downto 1) <= trunc_ln2936_1_fu_1022_p3(11 downto 1);
                trunc_ln_reg_3424 <= n_fu_920_p2(63 downto 1);
                u_201_reg_3432 <= MAX_BL_SMALL_q1;
                x_57_reg_3508 <= x_57_fu_1058_p2;
                    zext_ln1587_1_reg_3448(7 downto 0) <= zext_ln1587_1_fu_950_p1(7 downto 0);
                    zext_ln1587_reg_3440(7 downto 0) <= zext_ln1587_fu_946_p1(7 downto 0);
                    zext_ln2917_1_reg_3468(7 downto 0) <= zext_ln2917_1_fu_958_p1(7 downto 0);
                    zext_ln2917_reg_3460(7 downto 0) <= zext_ln2917_fu_954_p1(7 downto 0);
                    zext_ln2918_1_reg_3546(13 downto 0) <= zext_ln2918_1_fu_1132_p1(13 downto 0);
                    zext_ln2918_reg_3519(13 downto 0) <= zext_ln2918_fu_1084_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                add_ln2949_5_reg_3792 <= add_ln2949_5_fu_1915_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2981_fu_2037_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                add_ln2949_8_reg_3844 <= add_ln2949_8_fu_2052_p2;
                add_ln2981_1_reg_3859 <= add_ln2981_1_fu_2141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                add_ln2949_9_reg_3826 <= add_ln2949_9_fu_2020_p2;
                x_54_reg_3831 <= x_54_fu_2032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln2949_reg_3720 <= add_ln2949_fu_1612_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2957_fu_1616_p2 = ap_const_lv1_0))) then
                add_ln2957_2_reg_3744 <= add_ln2957_2_fu_1668_p2;
                trunc_ln2958_reg_3739 <= trunc_ln2958_fu_1664_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2963_fu_1779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                add_ln2963_1_reg_3787 <= add_ln2963_1_fu_1878_p2;
                trunc_ln2949_1_reg_3772 <= trunc_ln2949_1_fu_1790_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2975_fu_1919_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                add_ln2975_2_reg_3816 <= add_ln2975_2_fu_1971_p2;
                trunc_ln2976_reg_3811 <= trunc_ln2976_fu_1967_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3033_fu_2896_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                add_ln3012_3_reg_4092 <= add_ln3012_3_fu_2911_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                add_ln3012_reg_4074 <= add_ln3012_fu_2865_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1597_reg_4011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                add_ln3020_1_reg_4031 <= add_ln3020_1_fu_2641_p2;
                add_ln3020_reg_4036 <= add_ln3020_fu_2646_p2;
                trunc_ln3021_reg_4026 <= trunc_ln3021_fu_2637_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3024_fu_2761_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                add_ln3024_1_reg_4069 <= add_ln3024_1_fu_2860_p2;
                trunc_ln3012_1_reg_4054 <= trunc_ln3012_1_fu_2772_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1597_1_reg_4108 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                add_ln3033_1_reg_4128 <= add_ln3033_1_fu_3121_p2;
                add_ln3033_reg_4133 <= add_ln3033_fu_3126_p2;
                lshr_ln52_reg_4123 <= add_ln3035_1_fu_3106_p2(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3038_fu_3209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                add_ln3038_1_reg_4166 <= add_ln3038_1_fu_3336_p2;
                lshr_ln51_reg_4161 <= x_55_fu_3237_p2(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                empty_312_reg_3636 <= empty_312_fu_1403_p2;
                tmp_166_reg_3642 <= empty_315_fu_1408_p2(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1152_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                empty_319_reg_3571 <= empty_319_fu_1158_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                empty_323_reg_3593 <= empty_323_fu_1213_p2;
                empty_329_reg_3609 <= empty_329_fu_1239_p2;
                index_increment_reg_3604 <= index_increment_fu_1233_p2;
                tmp_169_reg_3599 <= empty_326_fu_1218_p2(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                i_15_reg_3965 <= i_15_fu_2431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                icmp_ln1597_1_reg_4108 <= icmp_ln1597_1_fu_2963_p2;
                u_206_reg_4103 <= u_206_fu_2957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                icmp_ln1597_reg_4011 <= icmp_ln1597_fu_2511_p2;
                u_204_reg_4006 <= u_204_fu_2505_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                p0i_4_reg_3927 <= p0i_4_fu_2300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                p0i_reg_3701 <= p0i_fu_1537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln779_fu_2426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                r_reg_3978 <= r_modp_montymul_fu_812_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_879 <= PRIMES_p_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_885 <= PRIMES_g_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2957_fu_1616_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_1)))) then
                reg_890 <= grp_modp_montymul_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                sext_ln1584_reg_3914 <= sext_ln1584_fu_2218_p1;
                y_67_reg_3921 <= y_67_fu_2262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                sext_ln2948_reg_3688 <= sext_ln2948_fu_1455_p1;
                trunc_ln2948_reg_3683 <= trunc_ln2948_fu_1451_p1;
                y_63_reg_3695 <= y_63_fu_1499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((compare_n_to_0_reg_3560 = ap_const_lv1_1) or ((empty_318_fu_1345_p2 = ap_const_lv1_1) and (compare_src_dst_reg_3556 = ap_const_lv1_1))) or ((empty_329_reg_3609 = ap_const_lv1_1) and (compare_src_dst_reg_3556 = ap_const_lv1_0))))) then
                sub_reg_3623 <= sub_fu_1356_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1152_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp1_reg_3583 <= tmp1_fu_1171_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3033_fu_2896_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                trunc_ln3012_2_reg_4087 <= trunc_ln3012_2_fu_2907_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln3020_fu_2448_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                trunc_ln3012_reg_3996 <= trunc_ln3012_fu_2459_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                u_131_reg_3864 <= u_131_fu_2177_p2;
                    x_assign_93_cast_reg_3869(7 downto 0) <= x_assign_93_cast_fu_2182_p1(7 downto 0);
                    x_assign_cast26_reg_3874(7 downto 0) <= x_assign_cast26_fu_2186_p1(7 downto 0);
                    zext_ln1587_2_reg_3880(7 downto 0) <= zext_ln1587_2_fu_2189_p1(7 downto 0);
                    zext_ln3009_reg_3886(7 downto 0) <= zext_ln3009_fu_2193_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                u_208_reg_3661 <= u_208_fu_1441_p2;
                    zext_ln2946_1_reg_3650(7 downto 0) <= zext_ln2946_1_fu_1432_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                v_35_reg_3729 <= v_35_fu_1621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                v_37_reg_3767 <= v_37_fu_1784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                v_39_reg_4049 <= v_39_fu_2766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                v_41_reg_3991 <= v_41_fu_2453_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                v_43_reg_3801 <= v_43_fu_1924_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                v_45_reg_4146 <= v_45_fu_3214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                v_46_reg_4082 <= v_46_fu_2901_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                v_47_reg_3839 <= v_47_fu_2042_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                x_38_reg_3759 <= x_38_fu_1774_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                x_42_reg_4041 <= x_42_fu_2756_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                x_51_reg_4138 <= x_51_fu_3204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                x_58_reg_3749 <= x_58_fu_1738_p2;
                    zext_ln757_12_reg_3754(30 downto 0) <= zext_ln757_12_fu_1759_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2975_fu_1919_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                x_59_reg_3821 <= x_59_fu_1983_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                x_60_reg_4015 <= x_60_fu_2594_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                x_61_reg_4112 <= x_61_fu_3046_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                z_101_reg_3951 <= z_101_fu_2314_p2;
                    zext_ln1584_2_reg_3944(30 downto 0) <= zext_ln1584_2_fu_2310_p1(30 downto 0);
                    zext_ln1584_reg_3934(30 downto 0) <= zext_ln1584_fu_2306_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    zext_ln2948_1_reg_3714(30 downto 0) <= zext_ln2948_1_fu_1547_p1(30 downto 0);
                    zext_ln2948_reg_3708(30 downto 0) <= zext_ln2948_fu_1543_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                    zext_ln3009_1_reg_3895(7 downto 0) <= zext_ln3009_1_fu_2200_p1(7 downto 0);
                    zext_ln3009_2_reg_3900(7 downto 0) <= zext_ln3009_2_fu_2205_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                    zext_ln757_11_reg_3956(30 downto 0) <= zext_ln757_11_fu_2412_p1(30 downto 0);
            end if;
        end if;
    end process;
    zext_ln1587_reg_3440(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1587_1_reg_3448(8) <= '0';
    zext_ln2917_reg_3460(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln2917_1_reg_3468(8) <= '0';
    shl_ln2936_2_reg_3486(0) <= '0';
    trunc_ln2936_1_reg_3491(0) <= '0';
    zext_ln2918_reg_3519(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln2918_1_reg_3546(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    shl_ln2940_reg_3551(2 downto 0) <= "000";
    zext_ln2946_1_reg_3650(11 downto 8) <= "0000";
    zext_ln2948_reg_3708(31) <= '0';
    zext_ln2948_1_reg_3714(31) <= '0';
    zext_ln757_12_reg_3754(31) <= '0';
    x_assign_93_cast_reg_3869(31 downto 8) <= "000000000000000000000000";
    x_assign_cast26_reg_3874(61 downto 8) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln1587_2_reg_3880(8) <= '0';
    zext_ln3009_reg_3886(11 downto 8) <= "0000";
    zext_ln3009_1_reg_3895(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln3009_2_reg_3900(11 downto 8) <= "0000";
    zext_ln1584_reg_3934(31) <= '0';
    zext_ln1584_2_reg_3944(31) <= '0';
    zext_ln757_11_reg_3956(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, out_ntt, ap_CS_fsm_state10, grp_modp_mkgm2_1_fu_824_ap_done, ap_CS_fsm_state12, icmp_ln2957_fu_1616_p2, out_ntt_read_read_fu_200_p2, ap_CS_fsm_state2, compare_src_dst_fu_1146_p2, compare_src_dst_reg_3556, compare_n_to_0_fu_1152_p2, compare_n_to_0_reg_3560, empty_329_reg_3609, ap_CS_fsm_state4, empty_318_fu_1345_p2, ap_CS_fsm_state6, icmp_ln2946_fu_1436_p2, ap_CS_fsm_state15, ap_CS_fsm_state16, icmp_ln2963_fu_1779_p2, ap_CS_fsm_state19, ap_CS_fsm_state20, icmp_ln2975_fu_1919_p2, ap_CS_fsm_state22, ap_CS_fsm_state23, icmp_ln2981_fu_2037_p2, ap_CS_fsm_state33, ap_CS_fsm_state34, icmp_ln3009_fu_2209_p2, ap_CS_fsm_state42, icmp_ln779_fu_2426_p2, ap_CS_fsm_state46, icmp_ln3020_fu_2448_p2, icmp_ln1597_reg_4011, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state51, icmp_ln3024_fu_2761_p2, ap_CS_fsm_state54, icmp_ln3033_fu_2896_p2, icmp_ln1597_1_reg_4108, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state59, icmp_ln3038_fu_3209_p2, grp_zint_rebuild_CRT_1_fu_780_ap_done, grp_modp_NTT2_ext_1_fu_839_ap_done, grp_modp_iNTT2_ext_1_fu_852_ap_done, ap_block_state15_on_subcall_done, ap_block_state19_on_subcall_done, ap_block_state22_on_subcall_done, ap_CS_fsm_state45, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64, ap_block_state30_on_subcall_done, ap_block_state64_on_subcall_done, ap_block_state26_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((compare_n_to_0_fu_1152_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((compare_n_to_0_fu_1152_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((compare_n_to_0_reg_3560 = ap_const_lv1_1) or ((empty_318_fu_1345_p2 = ap_const_lv1_1) and (compare_src_dst_reg_3556 = ap_const_lv1_1))) or ((empty_329_reg_3609 = ap_const_lv1_1) and (compare_src_dst_reg_3556 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((empty_318_fu_1345_p2 = ap_const_lv1_0) and (compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln2946_fu_1436_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2957_fu_1616_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln2963_fu_1779_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state19 => 
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln2975_fu_1919_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state22 => 
                if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln2981_fu_2037_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state26 => 
                if (((ap_const_boolean_0 = ap_block_state26_on_subcall_done) and (out_ntt_read_read_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif (((ap_const_boolean_0 = ap_block_state26_on_subcall_done) and (out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_boolean_0 = ap_block_state30_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln3009_fu_2209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if (((icmp_ln779_fu_2426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                if (((icmp_ln3020_fu_2448_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (((icmp_ln1597_reg_4011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state50 => 
                if (((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                if (((icmp_ln3024_fu_2761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state54 => 
                if (((icmp_ln3033_fu_2896_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((icmp_ln1597_1_reg_4108 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state58 => 
                if (((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                if (((icmp_ln3038_fu_3209_p2 = ap_const_lv1_1) and (out_ntt_read_read_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                elsif (((icmp_ln3038_fu_3209_p2 = ap_const_lv1_1) and (out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state62 => 
                if (((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    MAX_BL_SMALL_address0 <= zext_ln2927_fu_907_p1(4 - 1 downto 0);
    MAX_BL_SMALL_address1 <= zext_ln2926_fu_896_p1(4 - 1 downto 0);

    MAX_BL_SMALL_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            MAX_BL_SMALL_ce0 <= ap_const_logic_1;
        else 
            MAX_BL_SMALL_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    MAX_BL_SMALL_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            MAX_BL_SMALL_ce1 <= ap_const_logic_1;
        else 
            MAX_BL_SMALL_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    PRIMES_g_address0_assign_proc : process(ap_CS_fsm_state6, zext_ln3009_1_reg_3895, ap_CS_fsm_state42, zext_ln2946_fu_1426_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            PRIMES_g_address0 <= zext_ln3009_1_reg_3895(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            PRIMES_g_address0 <= zext_ln2946_fu_1426_p1(10 - 1 downto 0);
        else 
            PRIMES_g_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    PRIMES_g_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            PRIMES_g_ce0 <= ap_const_logic_1;
        else 
            PRIMES_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    PRIMES_p_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln2946_fu_1436_p2, ap_CS_fsm_state33, zext_ln3009_1_fu_2200_p1, ap_CS_fsm_state34, ap_CS_fsm_state31, zext_ln2946_fu_1426_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            PRIMES_p_address0 <= zext_ln3009_1_fu_2200_p1(10 - 1 downto 0);
        elsif (((icmp_ln2946_fu_1436_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            PRIMES_p_address0 <= zext_ln2946_fu_1426_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            PRIMES_p_address0 <= ap_const_lv10_0;
        else 
            PRIMES_p_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    PRIMES_p_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln2946_fu_1436_p2, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or ((icmp_ln2946_fu_1436_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            PRIMES_p_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            PRIMES_p_ce0 <= ap_const_logic_0;
        else 
            PRIMES_p_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln160131_fu_2472_p2 <= std_logic_vector(unsigned(add_ln1601_fu_2467_p2) + unsigned(trunc_ln3012_reg_3996));
    add_ln1601_3_fu_2485_p2 <= std_logic_vector(unsigned(shl_ln90_fu_2477_p3) + unsigned(empty_reg_3381));
    add_ln1601_4_fu_2919_p2 <= std_logic_vector(unsigned(add_ln2936_1_reg_3502) + unsigned(sext_ln1601_fu_2915_p1));
    add_ln1601_5_fu_2937_p2 <= std_logic_vector(unsigned(shl_ln1601_1_fu_2929_p3) + unsigned(empty_reg_3381));
    add_ln1601_6_fu_2924_p2 <= std_logic_vector(unsigned(add_ln1601_4_fu_2919_p2) + unsigned(trunc_ln3012_2_reg_4087));
    add_ln1601_fu_2467_p2 <= std_logic_vector(unsigned(trunc_ln2936_1_reg_3491) + unsigned(sext_ln1601_1_fu_2463_p1));
    add_ln1621_3_fu_2617_p2 <= std_logic_vector(unsigned(shl_ln94_fu_2609_p3) + unsigned(empty_reg_3381));
    add_ln1621_4_fu_3056_p2 <= std_logic_vector(unsigned(trunc_ln3033_fu_3052_p1) + unsigned(zext_ln3009_reg_3886));
    add_ln1621_5_fu_3069_p2 <= std_logic_vector(unsigned(shl_ln1621_1_fu_3061_p3) + unsigned(empty_reg_3381));
    add_ln1621_fu_2604_p2 <= std_logic_vector(unsigned(trunc_ln3020_fu_2600_p1) + unsigned(zext_ln3009_reg_3886));
    add_ln2918_fu_1002_p2 <= std_logic_vector(unsigned(trunc_ln2935_1_fu_988_p3) + unsigned(empty_fu_912_p1));
    add_ln2927_fu_901_p2 <= std_logic_vector(unsigned(depth) + unsigned(ap_const_lv4_1));
    add_ln2936_1_fu_1044_p2 <= std_logic_vector(unsigned(trunc_ln2936_1_fu_1022_p3) + unsigned(trunc_ln2936_2_fu_1034_p1));
    add_ln2936_fu_1038_p2 <= std_logic_vector(unsigned(shl_ln2936_2_fu_1014_p3) + unsigned(trunc_ln2936_fu_1030_p1));
    add_ln2937_fu_1064_p2 <= std_logic_vector(unsigned(add_ln2936_1_fu_1044_p2) + unsigned(trunc_ln2936_2_fu_1034_p1));
    add_ln2938_fu_1092_p2 <= std_logic_vector(unsigned(add_ln2937_fu_1064_p2) + unsigned(trunc_ln2938_fu_1088_p1));
    add_ln2939_fu_1112_p2 <= std_logic_vector(unsigned(add_ln2938_fu_1092_p2) + unsigned(trunc_ln2938_fu_1088_p1));
    add_ln2949_1_fu_1631_p2 <= std_logic_vector(unsigned(trunc_ln2949_fu_1627_p1) + unsigned(add_ln2949_reg_3720));
    add_ln2949_3_fu_1883_p2 <= std_logic_vector(unsigned(trunc_ln2949_1_reg_3772) + unsigned(zext_ln2946_1_reg_3650));
    add_ln2949_5_fu_1915_p2 <= std_logic_vector(unsigned(zext_ln2946_1_reg_3650) + unsigned(add_ln2936_1_reg_3502));
    add_ln2949_6_fu_1934_p2 <= std_logic_vector(unsigned(trunc_ln2949_2_fu_1930_p1) + unsigned(add_ln2949_5_reg_3792));
    add_ln2949_8_fu_2052_p2 <= std_logic_vector(unsigned(trunc_ln2949_3_fu_2048_p1) + unsigned(add_ln2949_9_reg_3826));
    add_ln2949_9_fu_2020_p2 <= std_logic_vector(unsigned(zext_ln2946_1_reg_3650) + unsigned(trunc_ln2935_reg_3473));
    add_ln2949_fu_1612_p2 <= std_logic_vector(unsigned(zext_ln2946_1_reg_3650) + unsigned(trunc_ln2936_1_reg_3491));
    add_ln2957_2_fu_1668_p2 <= std_logic_vector(unsigned(zext_ln1587_reg_3440) + unsigned(idx_reg_509));
    add_ln2958_1_fu_1685_p2 <= std_logic_vector(unsigned(shl_ln85_fu_1677_p3) + unsigned(empty_reg_3381));
    add_ln2958_fu_1673_p2 <= std_logic_vector(unsigned(trunc_ln2958_reg_3739) + unsigned(add_ln2939_reg_3530));
    add_ln2963_1_fu_1878_p2 <= std_logic_vector(unsigned(zext_ln2917_reg_3460) + unsigned(idx177_reg_531));
    add_ln2966_1_fu_1819_p2 <= std_logic_vector(unsigned(shl_ln2966_1_fu_1811_p3) + unsigned(empty_reg_3381));
    add_ln2966_fu_1806_p2 <= std_logic_vector(unsigned(shl_ln88_fu_1798_p3) + unsigned(add_ln2939_reg_3530));
    add_ln2967_1_fu_1858_p2 <= std_logic_vector(unsigned(shl_ln89_fu_1850_p3) + unsigned(empty_reg_3381));
    add_ln2967_fu_1845_p2 <= std_logic_vector(unsigned(or_ln2967_fu_1839_p2) + unsigned(add_ln2939_reg_3530));
    add_ln2975_2_fu_1971_p2 <= std_logic_vector(unsigned(zext_ln1587_reg_3440) + unsigned(idx179_reg_553));
    add_ln2976_1_fu_2000_p2 <= std_logic_vector(unsigned(shl_ln97_fu_1992_p3) + unsigned(empty_reg_3381));
    add_ln2976_fu_1988_p2 <= std_logic_vector(unsigned(trunc_ln2976_reg_3811) + unsigned(add_ln2939_reg_3530));
    add_ln2981_1_fu_2141_p2 <= std_logic_vector(unsigned(zext_ln2917_reg_3460) + unsigned(idx181_reg_575));
    add_ln2984_1_fu_2082_p2 <= std_logic_vector(unsigned(shl_ln2984_1_fu_2074_p3) + unsigned(empty_reg_3381));
    add_ln2984_fu_2069_p2 <= std_logic_vector(unsigned(shl_ln103_fu_2061_p3) + unsigned(add_ln2939_reg_3530));
    add_ln2985_1_fu_2121_p2 <= std_logic_vector(unsigned(shl_ln104_fu_2113_p3) + unsigned(empty_reg_3381));
    add_ln2985_fu_2108_p2 <= std_logic_vector(unsigned(or_ln2985_fu_2102_p2) + unsigned(add_ln2939_reg_3530));
    add_ln3012_2_fu_3224_p2 <= std_logic_vector(unsigned(trunc_ln3012_3_fu_3220_p1) + unsigned(add_ln3012_3_reg_4092));
    add_ln3012_3_fu_2911_p2 <= std_logic_vector(unsigned(zext_ln3009_2_reg_3900) + unsigned(trunc_ln2935_reg_3473));
    add_ln3012_fu_2865_p2 <= std_logic_vector(unsigned(trunc_ln3012_1_reg_4054) + unsigned(zext_ln3009_2_reg_3900));
    add_ln3020_1_fu_2641_p2 <= std_logic_vector(unsigned(zext_ln1587_reg_3440) + unsigned(idx183_reg_650));
    add_ln3020_fu_2646_p2 <= std_logic_vector(unsigned(x_assign_cast26_reg_3874) + unsigned(indvars_iv62_reg_628));
    add_ln3021_1_fu_2725_p2 <= std_logic_vector(unsigned(shl_ln95_fu_2717_p3) + unsigned(empty_reg_3381));
    add_ln3021_fu_2713_p2 <= std_logic_vector(unsigned(trunc_ln3021_reg_4026) + unsigned(add_ln2939_reg_3530));
    add_ln3024_1_fu_2860_p2 <= std_logic_vector(unsigned(zext_ln2917_reg_3460) + unsigned(idx185_reg_693));
    add_ln3028_1_fu_2801_p2 <= std_logic_vector(unsigned(shl_ln3028_1_fu_2793_p3) + unsigned(empty_reg_3381));
    add_ln3028_fu_2788_p2 <= std_logic_vector(unsigned(shl_ln92_fu_2780_p3) + unsigned(add_ln2939_reg_3530));
    add_ln3029_1_fu_2840_p2 <= std_logic_vector(unsigned(shl_ln93_fu_2832_p3) + unsigned(empty_reg_3381));
    add_ln3029_fu_2827_p2 <= std_logic_vector(unsigned(or_ln3029_fu_2821_p2) + unsigned(add_ln2939_reg_3530));
    add_ln3033_1_fu_3121_p2 <= std_logic_vector(unsigned(zext_ln1587_reg_3440) + unsigned(idx187_reg_726));
    add_ln3033_fu_3126_p2 <= std_logic_vector(unsigned(x_assign_cast26_reg_3874) + unsigned(indvars_iv_reg_704));
    add_ln3035_1_fu_3106_p2 <= std_logic_vector(unsigned(shl_ln102_fu_3098_p3) + unsigned(empty_reg_3381));
    add_ln3035_fu_3093_p2 <= std_logic_vector(unsigned(trunc_ln3035_fu_3089_p1) + unsigned(add_ln2939_reg_3530));
    add_ln3038_1_fu_3336_p2 <= std_logic_vector(unsigned(zext_ln2917_reg_3460) + unsigned(idx189_reg_769));
    add_ln3042_1_fu_3267_p2 <= std_logic_vector(unsigned(shl_ln3042_1_fu_3259_p3) + unsigned(empty_reg_3381));
    add_ln3042_fu_3254_p2 <= std_logic_vector(unsigned(shl_ln100_fu_3246_p3) + unsigned(add_ln2939_reg_3530));
    add_ln3043_1_fu_3306_p2 <= std_logic_vector(unsigned(shl_ln101_fu_3298_p3) + unsigned(empty_reg_3381));
    add_ln3043_fu_3293_p2 <= std_logic_vector(unsigned(or_ln3043_fu_3287_p2) + unsigned(add_ln2939_reg_3530));
    add_ln685_14_fu_2558_p2 <= std_logic_vector(unsigned(add_ln685_fu_2552_p2) + unsigned(grp_fu_864_p2));
    add_ln685_16_fu_3004_p2 <= std_logic_vector(unsigned(w_60_fu_2969_p2) + unsigned(zext_ln1598_1_fu_3000_p1));
    add_ln685_17_fu_3010_p2 <= std_logic_vector(unsigned(add_ln685_16_fu_3004_p2) + unsigned(grp_fu_864_p2));
    add_ln685_fu_2552_p2 <= std_logic_vector(unsigned(w_fu_2517_p2) + unsigned(zext_ln1598_fu_2548_p1));
    add_ln757_4_fu_1743_p2 <= std_logic_vector(unsigned(zext_ln2957_fu_1727_p1) + unsigned(grp_modp_montymul_fu_289_p_dout0));
    add_ln757_fu_2396_p2 <= std_logic_vector(unsigned(zext_ln757_fu_2392_p1) + unsigned(grp_modp_montymul_fu_289_p_dout0));
    and_ln1602_1_fu_2990_p2 <= (select_ln1602_1_fu_2982_p3 and reg_879);
    and_ln1602_fu_2538_p2 <= (select_ln1602_fu_2530_p3 and reg_879);
    and_ln1621_1_fu_3145_p2 <= (z_117_reg_606 and sext_ln1621_1_fu_3141_p1);
    and_ln1621_fu_2665_p2 <= (z_117_reg_606 and sext_ln1621_fu_2661_p1);
    and_ln685_6_fu_2348_p2 <= (select_ln685_8_fu_2340_p3 and reg_879);
    and_ln685_7_fu_2580_p2 <= (select_ln685_9_fu_2572_p3 and reg_879);
    and_ln685_8_fu_3032_p2 <= (select_ln685_10_fu_3024_p3 and reg_879);
    and_ln685_fu_1590_p2 <= (select_ln685_fu_1582_p3 and reg_879);
    and_ln697_1_fu_3172_p2 <= (select_ln697_2_fu_3164_p3 and reg_879);
    and_ln697_fu_2692_p2 <= (select_ln697_fu_2684_p3 and reg_879);
    and_ln757_4_fu_1717_p2 <= (select_ln757_4_fu_1709_p3 and reg_879);
    and_ln757_fu_2382_p2 <= (select_ln757_fu_2374_p3 and reg_879);
    and_ln781_fu_2437_p2 <= (u_131_reg_3864 and trunc_ln779_fu_2422_p1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_modp_mkgm2_1_fu_824_ap_done)
    begin
        if ((grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(ap_block_state15_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state15_on_subcall_done)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(ap_block_state19_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state19_on_subcall_done)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(ap_block_state22_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state22_on_subcall_done)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(ap_block_state26_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state26_on_subcall_done)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_modp_iNTT2_ext_1_fu_852_ap_done)
    begin
        if ((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(ap_block_state30_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state30_on_subcall_done)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state31_blk_assign_proc : process(grp_zint_rebuild_CRT_1_fu_780_ap_done)
    begin
        if ((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(grp_zint_rebuild_CRT_1_fu_780_ap_done)
    begin
        if ((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;

    ap_ST_fsm_state45_blk_assign_proc : process(grp_modp_mkgm2_1_fu_824_ap_done)
    begin
        if ((grp_modp_mkgm2_1_fu_824_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state45_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state45_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state50_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_839_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state50_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state50_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;

    ap_ST_fsm_state58_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_839_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;

    ap_ST_fsm_state62_blk_assign_proc : process(grp_modp_iNTT2_ext_1_fu_852_ap_done)
    begin
        if ((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state62_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state62_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state63_blk <= ap_const_logic_0;

    ap_ST_fsm_state64_blk_assign_proc : process(ap_block_state64_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state64_on_subcall_done)) then 
            ap_ST_fsm_state64_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state64_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state15_on_subcall_done_assign_proc : process(in_ntt, grp_modp_NTT2_ext_1_fu_839_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_0));
    end process;


    ap_block_state19_on_subcall_done_assign_proc : process(in_ntt, grp_modp_iNTT2_ext_1_fu_852_ap_done)
    begin
                ap_block_state19_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_1));
    end process;


    ap_block_state22_on_subcall_done_assign_proc : process(in_ntt, grp_modp_NTT2_ext_1_fu_839_ap_done)
    begin
                ap_block_state22_on_subcall_done <= ((grp_modp_NTT2_ext_1_fu_839_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_0));
    end process;


    ap_block_state26_on_subcall_done_assign_proc : process(in_ntt, grp_modp_iNTT2_ext_1_fu_852_ap_done)
    begin
                ap_block_state26_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_1));
    end process;


    ap_block_state30_on_subcall_done_assign_proc : process(out_ntt, grp_modp_iNTT2_ext_1_fu_852_ap_done)
    begin
                ap_block_state30_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_0) and (out_ntt = ap_const_lv1_0));
    end process;


    ap_block_state64_on_subcall_done_assign_proc : process(out_ntt, grp_modp_iNTT2_ext_1_fu_852_ap_done)
    begin
                ap_block_state64_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_852_ap_done = ap_const_logic_0) and (out_ntt = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state34, icmp_ln3009_fu_2209_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln3009_fu_2209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state34, icmp_ln3009_fu_2209_p2)
    begin
        if (((icmp_ln3009_fu_2209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compare_n_to_0_fu_1152_p2 <= "1" when (trunc_ln2940_fu_1136_p1 = ap_const_lv61_0) else "0";
    compare_src_dst_fu_1146_p2 <= "1" when (unsigned(fs_fu_996_p2) > unsigned(data)) else "0";
    empty_308_fu_1167_p1 <= data(2 - 1 downto 0);
    empty_309_fu_1369_p1 <= empty_307_fu_182(2 - 1 downto 0);
    empty_310_fu_1373_p1 <= empty_307_fu_182(14 - 1 downto 0);
    empty_311_fu_1383_p2 <= std_logic_vector(unsigned(index_ptr_cast_fu_1377_p2) + unsigned(empty_reg_3381));
    empty_312_fu_1403_p2 <= std_logic_vector(unsigned(tmp1_reg_3583) + unsigned(empty_309_fu_1369_p1));
    empty_313_fu_1310_p2 <= std_logic_vector(shift_right(unsigned(vla1_q0),to_integer(unsigned('0' & p_cast22_fu_1306_p1(31-1 downto 0)))));
    empty_314_fu_1316_p1 <= empty_313_fu_1310_p2(8 - 1 downto 0);
    empty_315_fu_1408_p2 <= std_logic_vector(unsigned(index_ptr_cast_fu_1377_p2) + unsigned(add_ln2918_reg_3479));
    empty_316_fu_1327_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & p_cast23_fu_1324_p1(4-1 downto 0)))));
    empty_317_fu_1334_p2 <= std_logic_vector(shift_left(unsigned(p_cast6_cast_fu_1320_p1),to_integer(unsigned('0' & p_cast22_fu_1306_p1(31-1 downto 0)))));
    empty_318_fu_1345_p2 <= "1" when (index_ptr_fu_1294_p2 = ap_const_lv64_0) else "0";
    empty_319_fu_1158_p1 <= data(2 - 1 downto 0);
    empty_320_fu_1185_p1 <= index_ptr53_fu_178(14 - 1 downto 0);
    empty_321_fu_1189_p1 <= index_ptr53_fu_178(2 - 1 downto 0);
    empty_322_fu_1193_p2 <= std_logic_vector(unsigned(empty_320_fu_1185_p1) + unsigned(empty_reg_3381));
    empty_323_fu_1213_p2 <= std_logic_vector(unsigned(empty_321_fu_1189_p1) + unsigned(empty_319_reg_3571));
    empty_324_fu_1255_p2 <= std_logic_vector(shift_right(unsigned(vla1_q0),to_integer(unsigned('0' & p_cast24_fu_1251_p1(31-1 downto 0)))));
    empty_325_fu_1261_p1 <= empty_324_fu_1255_p2(8 - 1 downto 0);
    empty_326_fu_1218_p2 <= std_logic_vector(unsigned(empty_320_fu_1185_p1) + unsigned(add_ln2918_reg_3479));
    empty_327_fu_1272_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & p_cast25_fu_1269_p1(4-1 downto 0)))));
    empty_328_fu_1279_p2 <= std_logic_vector(shift_left(unsigned(p_cast11_cast_fu_1265_p1),to_integer(unsigned('0' & p_cast24_fu_1251_p1(31-1 downto 0)))));
    empty_329_fu_1239_p2 <= "1" when (index_increment_fu_1233_p2 = shl_ln2940_reg_3551) else "0";
    empty_fu_912_p1 <= data(14 - 1 downto 0);
    fs_fu_996_p2 <= std_logic_vector(unsigned(shl_ln_fu_976_p3) + unsigned(data));
    gm_fu_1078_p2 <= std_logic_vector(unsigned(shl_ln79_fu_1070_p3) + unsigned(empty_fu_912_p1));
    grp_fu_864_p2 <= std_logic_vector(unsigned(grp_modp_montymul_fu_289_p_dout0) - unsigned(zext_ln1584_reg_3934));
    grp_fu_869_p4 <= vla1_q1(31 downto 30);
    grp_modp_NTT2_ext_1_fu_839_ap_start <= grp_modp_NTT2_ext_1_fu_839_ap_start_reg;

    grp_modp_NTT2_ext_1_fu_839_p_assign_proc : process(in_ntt, zext_ln2948_reg_3708, ap_CS_fsm_state15, ap_CS_fsm_state22, zext_ln1584_reg_3934, ap_CS_fsm_state50, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            grp_modp_NTT2_ext_1_fu_839_p <= zext_ln1584_reg_3934;
        elsif ((((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_modp_NTT2_ext_1_fu_839_p <= zext_ln2948_reg_3708;
        else 
            grp_modp_NTT2_ext_1_fu_839_p <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_NTT2_ext_1_fu_839_p0i_assign_proc : process(in_ntt, zext_ln2948_1_reg_3714, ap_CS_fsm_state15, ap_CS_fsm_state22, zext_ln1584_2_reg_3944, ap_CS_fsm_state50, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            grp_modp_NTT2_ext_1_fu_839_p0i <= zext_ln1584_2_reg_3944;
        elsif ((((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_modp_NTT2_ext_1_fu_839_p0i <= zext_ln2948_1_reg_3714;
        else 
            grp_modp_NTT2_ext_1_fu_839_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_iNTT2_ext_1_fu_852_a_assign_proc : process(in_ntt, out_ntt, x_58_reg_3749, x_38_reg_3759, ap_CS_fsm_state19, x_59_reg_3821, x_54_reg_3831, x_42_reg_4041, x_51_reg_4138, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64)
    begin
        if (((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            grp_modp_iNTT2_ext_1_fu_852_a <= x_51_reg_4138;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_modp_iNTT2_ext_1_fu_852_a <= x_42_reg_4041;
        elsif (((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_modp_iNTT2_ext_1_fu_852_a <= x_54_reg_3831;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_modp_iNTT2_ext_1_fu_852_a <= x_38_reg_3759;
        elsif (((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            grp_modp_iNTT2_ext_1_fu_852_a <= x_59_reg_3821;
        elsif (((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_modp_iNTT2_ext_1_fu_852_a <= x_58_reg_3749;
        else 
            grp_modp_iNTT2_ext_1_fu_852_a <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_iNTT2_ext_1_fu_852_ap_start <= grp_modp_iNTT2_ext_1_fu_852_ap_start_reg;

    grp_modp_iNTT2_ext_1_fu_852_logn_assign_proc : process(logn, in_ntt, out_ntt, sub_reg_3623, ap_CS_fsm_state19, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            grp_modp_iNTT2_ext_1_fu_852_logn <= sub_reg_3623;
        elsif ((((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            grp_modp_iNTT2_ext_1_fu_852_logn <= logn;
        else 
            grp_modp_iNTT2_ext_1_fu_852_logn <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_iNTT2_ext_1_fu_852_p0i_assign_proc : process(in_ntt, out_ntt, p0i_reg_3701, ap_CS_fsm_state19, p0i_4_reg_3927, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)))) then 
            grp_modp_iNTT2_ext_1_fu_852_p0i <= p0i_4_reg_3927;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            grp_modp_iNTT2_ext_1_fu_852_p0i <= p0i_reg_3701;
        else 
            grp_modp_iNTT2_ext_1_fu_852_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_iNTT2_ext_1_fu_852_stride_assign_proc : process(in_ntt, out_ntt, zext_ln1587_1_reg_3448, zext_ln2917_1_reg_3468, ap_CS_fsm_state19, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            grp_modp_iNTT2_ext_1_fu_852_stride <= zext_ln2917_1_reg_3468;
        elsif ((((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            grp_modp_iNTT2_ext_1_fu_852_stride <= zext_ln1587_1_reg_3448;
        else 
            grp_modp_iNTT2_ext_1_fu_852_stride <= "XXXXXXXXX";
        end if; 
    end process;

    grp_modp_mkgm2_1_fu_824_ap_start <= grp_modp_mkgm2_1_fu_824_ap_start_reg;

    grp_modp_mkgm2_1_fu_824_p0i_assign_proc : process(ap_CS_fsm_state10, p0i_reg_3701, p0i_4_reg_3927, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_modp_mkgm2_1_fu_824_p0i <= p0i_4_reg_3927;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_modp_mkgm2_1_fu_824_p0i <= p0i_reg_3701;
        else 
            grp_modp_mkgm2_1_fu_824_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_montymul_fu_289_p_din1 <= grp_modp_montymul_fu_797_a;
    grp_modp_montymul_fu_289_p_din2 <= grp_modp_montymul_fu_797_b;
    grp_modp_montymul_fu_289_p_din3 <= grp_modp_montymul_fu_797_p;
    grp_modp_montymul_fu_289_p_din4 <= grp_modp_montymul_fu_797_p0i;

    grp_modp_montymul_fu_797_a_assign_proc : process(vla1_q0, vla1_q1, reg_890, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln2957_fu_1616_p2, ap_CS_fsm_state17, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state52, ap_CS_fsm_state60, ap_CS_fsm_state14, ap_CS_fsm_state41, ap_CS_fsm_state42, icmp_ln779_fu_2426_p2, icmp_ln781_fu_2442_p2, ap_CS_fsm_state48, ap_CS_fsm_state56, ap_CS_fsm_state18, ap_CS_fsm_state25, z_117_reg_606, x_29_reg_671, ap_CS_fsm_state53, x_36_reg_747, ap_CS_fsm_state61, z_fu_1604_p2, z_104_fu_2362_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_modp_montymul_fu_797_a <= x_36_reg_747;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_modp_montymul_fu_797_a <= x_29_reg_671;
        elsif (((icmp_ln781_fu_2442_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            grp_modp_montymul_fu_797_a <= z_117_reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_modp_montymul_fu_797_a <= z_104_fu_2362_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            grp_modp_montymul_fu_797_a <= vla1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_modp_montymul_fu_797_a <= vla1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2957_fu_1616_p2 = ap_const_lv1_1)))) then 
            grp_modp_montymul_fu_797_a <= reg_890;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_a <= z_fu_1604_p2;
        else 
            grp_modp_montymul_fu_797_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_797_b_assign_proc : process(vla1_q0, vla1_q1, reg_890, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln2957_fu_1616_p2, ap_CS_fsm_state17, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state52, ap_CS_fsm_state60, ap_CS_fsm_state14, zext_ln757_12_reg_3754, zext_ln757_11_reg_3956, ap_CS_fsm_state41, ap_CS_fsm_state42, icmp_ln779_fu_2426_p2, icmp_ln781_fu_2442_p2, ap_CS_fsm_state48, ap_CS_fsm_state56, ap_CS_fsm_state18, ap_CS_fsm_state25, r_11_reg_597, ap_CS_fsm_state53, ap_CS_fsm_state61, z_fu_1604_p2, z_104_fu_2362_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_modp_montymul_fu_797_b <= zext_ln757_11_reg_3956;
        elsif (((icmp_ln781_fu_2442_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            grp_modp_montymul_fu_797_b <= r_11_reg_597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_modp_montymul_fu_797_b <= z_104_fu_2362_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            grp_modp_montymul_fu_797_b <= vla1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_modp_montymul_fu_797_b <= zext_ln757_12_reg_3754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_modp_montymul_fu_797_b <= vla1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2957_fu_1616_p2 = ap_const_lv1_1)))) then 
            grp_modp_montymul_fu_797_b <= reg_890;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_b <= z_fu_1604_p2;
        else 
            grp_modp_montymul_fu_797_b <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_797_p_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln2957_fu_1616_p2, ap_CS_fsm_state17, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state52, ap_CS_fsm_state60, zext_ln2948_fu_1543_p1, zext_ln2948_reg_3708, ap_CS_fsm_state14, zext_ln1584_fu_2306_p1, zext_ln1584_reg_3934, ap_CS_fsm_state41, ap_CS_fsm_state42, icmp_ln779_fu_2426_p2, icmp_ln781_fu_2442_p2, ap_CS_fsm_state48, ap_CS_fsm_state56, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state53, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or ((icmp_ln781_fu_2442_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            grp_modp_montymul_fu_797_p <= zext_ln1584_reg_3934;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_modp_montymul_fu_797_p <= zext_ln1584_fu_2306_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2957_fu_1616_p2 = ap_const_lv1_1)))) then 
            grp_modp_montymul_fu_797_p <= zext_ln2948_reg_3708;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_p <= zext_ln2948_fu_1543_p1;
        else 
            grp_modp_montymul_fu_797_p <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_797_p0i_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln2957_fu_1616_p2, ap_CS_fsm_state17, ap_CS_fsm_state24, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state52, ap_CS_fsm_state60, zext_ln2948_1_fu_1547_p1, zext_ln2948_1_reg_3714, ap_CS_fsm_state14, zext_ln1584_2_fu_2310_p1, zext_ln1584_2_reg_3944, ap_CS_fsm_state41, ap_CS_fsm_state42, icmp_ln779_fu_2426_p2, icmp_ln781_fu_2442_p2, ap_CS_fsm_state48, ap_CS_fsm_state56, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state53, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or ((icmp_ln781_fu_2442_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln1584_2_reg_3944;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln1584_2_fu_2310_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2957_fu_1616_p2 = ap_const_lv1_1)))) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln2948_1_reg_3714;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln2948_1_fu_1547_p1;
        else 
            grp_modp_montymul_fu_797_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_zint_rebuild_CRT_1_fu_780_ap_start <= grp_zint_rebuild_CRT_1_fu_780_ap_start_reg;

    grp_zint_rebuild_CRT_1_fu_780_xx_assign_proc : process(add_ln2918_reg_3479, x_57_reg_3508, ap_CS_fsm_state33, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_zint_rebuild_CRT_1_fu_780_xx <= x_57_reg_3508;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_zint_rebuild_CRT_1_fu_780_xx <= add_ln2918_reg_3479;
        else 
            grp_zint_rebuild_CRT_1_fu_780_xx <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    i_15_fu_2431_p2 <= std_logic_vector(unsigned(i_reg_586) + unsigned(ap_const_lv32_1));
    icmp_ln1597_1_fu_2963_p2 <= "1" when (u_205_reg_738 = ap_const_lv9_0) else "0";
    icmp_ln1597_fu_2511_p2 <= "1" when (u_reg_662 = ap_const_lv9_0) else "0";
    icmp_ln2946_fu_1436_p2 <= "1" when (u_132_fu_186 = u_201_reg_3432) else "0";
    icmp_ln2957_fu_1616_p2 <= "1" when (v_reg_498 = n_reg_3415) else "0";
    icmp_ln2963_fu_1779_p2 <= "1" when (v_34_reg_520 = trunc_ln_reg_3424) else "0";
    icmp_ln2975_fu_1919_p2 <= "1" when (v_38_reg_542 = n_reg_3415) else "0";
    icmp_ln2981_fu_2037_p2 <= "1" when (v_44_reg_564 = trunc_ln_reg_3424) else "0";
    icmp_ln3009_fu_2209_p2 <= "1" when (unsigned(u_133_fu_190) < unsigned(tlen_reg_3455)) else "0";
    icmp_ln3020_fu_2448_p2 <= "1" when (v_33_reg_638 = n_reg_3415) else "0";
    icmp_ln3024_fu_2761_p2 <= "1" when (v_36_reg_682 = trunc_ln_reg_3424) else "0";
    icmp_ln3033_fu_2896_p2 <= "1" when (v_40_reg_714 = n_reg_3415) else "0";
    icmp_ln3038_fu_3209_p2 <= "1" when (v_42_reg_758 = trunc_ln_reg_3424) else "0";
    icmp_ln779_fu_2426_p2 <= "1" when (unsigned(shl_ln779_fu_2416_p2) > unsigned(x_assign_93_cast_reg_3869)) else "0";
    icmp_ln781_fu_2442_p2 <= "1" when (and_ln781_fu_2437_p2 = ap_const_lv8_0) else "0";
    igm_fu_1106_p2 <= std_logic_vector(unsigned(shl_ln80_fu_1098_p3) + unsigned(empty_fu_912_p1));
    index_increment_fu_1233_p2 <= std_logic_vector(unsigned(index_ptr53_fu_178) + unsigned(ap_const_lv64_1));
    index_ptr_cast_fu_1377_p2 <= std_logic_vector(unsigned(empty_310_fu_1373_p1) + unsigned(ap_const_lv14_3FFF));
    index_ptr_fu_1294_p2 <= std_logic_vector(unsigned(empty_307_fu_182) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    lshr_ln1601_1_fu_2942_p4 <= add_ln1601_5_fu_2937_p2(13 downto 2);
    lshr_ln1621_3_fu_2622_p4 <= add_ln1621_3_fu_2617_p2(13 downto 2);
    lshr_ln1621_4_fu_3074_p4 <= add_ln1621_5_fu_3069_p2(13 downto 2);
    lshr_ln2958_1_fu_1690_p4 <= add_ln2958_1_fu_1685_p2(13 downto 2);
    lshr_ln2976_1_fu_2005_p4 <= add_ln2976_1_fu_2000_p2(13 downto 2);
    lshr_ln40_fu_1824_p4 <= add_ln2966_1_fu_1819_p2(13 downto 2);
    lshr_ln41_fu_1863_p4 <= add_ln2967_1_fu_1858_p2(13 downto 2);
    lshr_ln42_fu_1900_p4 <= x_43_fu_1895_p2(13 downto 2);
    lshr_ln43_fu_2490_p4 <= add_ln1601_3_fu_2485_p2(13 downto 2);
    lshr_ln44_fu_2806_p4 <= add_ln3028_1_fu_2801_p2(13 downto 2);
    lshr_ln45_fu_2845_p4 <= add_ln3029_1_fu_2840_p2(13 downto 2);
    lshr_ln46_fu_2881_p4 <= x_49_fu_2876_p2(13 downto 2);
    lshr_ln47_fu_2730_p4 <= add_ln3021_1_fu_2725_p2(13 downto 2);
    lshr_ln48_fu_1952_p4 <= x_50_fu_1947_p2(13 downto 2);
    lshr_ln49_fu_3272_p4 <= add_ln3042_1_fu_3267_p2(13 downto 2);
    lshr_ln50_fu_3311_p4 <= add_ln3043_1_fu_3306_p2(13 downto 2);
    lshr_ln53_fu_2087_p4 <= add_ln2984_1_fu_2082_p2(13 downto 2);
    lshr_ln54_fu_2126_p4 <= add_ln2985_1_fu_2121_p2(13 downto 2);
    lshr_ln55_fu_2158_p4 <= x_56_fu_2153_p2(13 downto 2);
    lshr_ln_fu_1649_p4 <= x_fu_1644_p2(13 downto 2);
    mul_ln2935_fu_966_p0 <= mul_ln2935_fu_966_p00(8 - 1 downto 0);
    mul_ln2935_fu_966_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q0),61));
    mul_ln2935_fu_966_p1 <= n_fu_920_p2(61 downto 1);
    mul_ln656_14_fu_2232_p0 <= sext_ln1584_fu_2218_p1(25 - 1 downto 0);
    mul_ln656_14_fu_2232_p1 <= zext_ln656_4_fu_2228_p1(24 - 1 downto 0);
    mul_ln656_fu_1469_p0 <= sext_ln2948_fu_1455_p1(25 - 1 downto 0);
    mul_ln656_fu_1469_p1 <= zext_ln656_fu_1465_p1(24 - 1 downto 0);
    mul_ln657_14_fu_2250_p0 <= sext_ln1584_fu_2218_p1(25 - 1 downto 0);
    mul_ln657_fu_1487_p0 <= sext_ln2948_fu_1455_p1(25 - 1 downto 0);
    mul_ln658_14_fu_2268_p0 <= sext_ln1584_reg_3914(25 - 1 downto 0);
    mul_ln658_fu_1505_p0 <= sext_ln2948_reg_3688(25 - 1 downto 0);
    mul_ln659_5_fu_2283_p0 <= sext_ln1584_reg_3914(25 - 1 downto 0);
    mul_ln659_fu_1520_p0 <= sext_ln2948_reg_3688(25 - 1 downto 0);
    n_fu_920_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1),to_integer(unsigned('0' & zext_ln2924_fu_916_p1(31-1 downto 0)))));
    or_ln2967_fu_1839_p2 <= (shl_ln88_fu_1798_p3 or ap_const_lv12_1);
    or_ln2985_fu_2102_p2 <= (shl_ln103_fu_2061_p3 or ap_const_lv12_1);
    or_ln3029_fu_2821_p2 <= (shl_ln92_fu_2780_p3 or ap_const_lv12_1);
    or_ln3043_fu_3287_p2 <= (shl_ln100_fu_3246_p3 or ap_const_lv12_1);
    out_ntt_read_read_fu_200_p2 <= out_ntt;
    p0i_4_fu_2300_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_5_fu_2283_p2));
    p0i_4_fu_2300_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_68_fu_2278_p2));
    p0i_fu_1537_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_fu_1520_p2));
    p0i_fu_1537_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_64_fu_1515_p2));
    p_cast11_cast_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_325_fu_1261_p1),32));
    p_cast12_cast_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_169_reg_3599),64));
    p_cast22_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_165_fu_1299_p3),32));
    p_cast23_fu_1324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_312_reg_3636),4));
    p_cast24_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_168_fu_1244_p3),32));
    p_cast25_fu_1269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_323_reg_3593),4));
    p_cast4_cast_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_164_fu_1388_p4),64));
    p_cast6_cast_fu_1320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_314_fu_1316_p1),32));
    p_cast7_cast_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_reg_3642),64));
    p_cast9_cast_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_167_fu_1198_p4),64));
    r_12_fu_2402_p4 <= add_ln757_fu_2396_p2(31 downto 1);
    select_ln1602_1_fu_2982_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_183_fu_2974_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln1602_fu_2530_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_180_fu_2522_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_10_fu_3024_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_184_fu_3016_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_8_fu_2340_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_179_fu_2332_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_9_fu_2572_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_181_fu_2564_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_fu_1582_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_178_fu_1574_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln697_2_fu_3164_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_185_fu_3156_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln697_fu_2684_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_182_fu_2676_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln757_4_fu_1709_p3 <= 
        ap_const_lv25_1FFFFFF when (trunc_ln757_fu_1705_p1(0) = '1') else 
        ap_const_lv25_0;
    select_ln757_fu_2374_p3 <= 
        ap_const_lv25_1FFFFFF when (trunc_ln735_fu_2370_p1(0) = '1') else 
        ap_const_lv25_0;
    sext_ln1584_fu_2218_p0 <= PRIMES_p_q0;
        sext_ln1584_fu_2218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1584_fu_2218_p0),31));

        sext_ln1598_1_fu_2996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln1602_1_fu_2990_p2),31));

        sext_ln1598_fu_2544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln1602_fu_2538_p2),31));

        sext_ln1601_1_fu_2463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(u_reg_662),12));

        sext_ln1601_fu_2915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(u_205_reg_738),12));

        sext_ln1621_1_fu_3141_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1621_1_fu_3135_p2),32));

        sext_ln1621_fu_2661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1621_fu_2655_p2),32));

    sext_ln2948_fu_1455_p0 <= PRIMES_p_q0;
        sext_ln2948_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln2948_fu_1455_p0),31));

        sext_ln2957_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln757_4_fu_1717_p2),31));

        sext_ln685_6_fu_2354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_6_fu_2348_p2),31));

        sext_ln685_7_fu_2586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_7_fu_2580_p2),31));

        sext_ln685_8_fu_3038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_8_fu_3032_p2),31));

        sext_ln685_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_fu_1590_p2),31));

        sext_ln697_1_fu_3178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln697_1_fu_3172_p2),31));

        sext_ln697_fu_2698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln697_fu_2692_p2),31));

        sext_ln757_fu_2388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln757_fu_2382_p2),31));

    shl_ln100_fu_3246_p3 <= (trunc_ln3042_fu_3242_p1 & ap_const_lv1_0);
    shl_ln101_fu_3298_p3 <= (add_ln3043_fu_3293_p2 & ap_const_lv2_0);
    shl_ln102_fu_3098_p3 <= (add_ln3035_fu_3093_p2 & ap_const_lv2_0);
    shl_ln103_fu_2061_p3 <= (trunc_ln2984_fu_2057_p1 & ap_const_lv1_0);
    shl_ln104_fu_2113_p3 <= (add_ln2985_fu_2108_p2 & ap_const_lv2_0);
    shl_ln1601_1_fu_2929_p3 <= (add_ln1601_6_fu_2924_p2 & ap_const_lv2_0);
    shl_ln1621_1_fu_3061_p3 <= (add_ln1621_4_fu_3056_p2 & ap_const_lv2_0);
    shl_ln2936_1_fu_1050_p3 <= (add_ln2936_1_fu_1044_p2 & ap_const_lv2_0);
    shl_ln2936_2_fu_1014_p3 <= (mul_ln2935_fu_966_p2 & ap_const_lv1_0);
    shl_ln2936_fu_1008_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1587_fu_946_p1),to_integer(unsigned('0' & zext_ln2924_fu_916_p1(31-1 downto 0)))));
    shl_ln2940_fu_1140_p2 <= std_logic_vector(shift_left(unsigned(shl_ln2936_fu_1008_p2),to_integer(unsigned('0' & ap_const_lv64_3(31-1 downto 0)))));
    shl_ln2949_1_fu_1887_p3 <= (add_ln2949_3_fu_1883_p2 & ap_const_lv2_0);
    shl_ln2949_2_fu_1939_p3 <= (add_ln2949_6_fu_1934_p2 & ap_const_lv2_0);
    shl_ln2949_3_fu_2146_p3 <= (add_ln2949_8_reg_3844 & ap_const_lv2_0);
    shl_ln2966_1_fu_1811_p3 <= (add_ln2966_fu_1806_p2 & ap_const_lv2_0);
    shl_ln2984_1_fu_2074_p3 <= (add_ln2984_fu_2069_p2 & ap_const_lv2_0);
    shl_ln3012_1_fu_3229_p3 <= (add_ln3012_2_fu_3224_p2 & ap_const_lv2_0);
    shl_ln3028_1_fu_2793_p3 <= (add_ln3028_fu_2788_p2 & ap_const_lv2_0);
    shl_ln3042_1_fu_3259_p3 <= (add_ln3042_fu_3254_p2 & ap_const_lv2_0);
    shl_ln685_fu_2320_p2 <= std_logic_vector(shift_left(unsigned(z_101_fu_2314_p2),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln779_fu_2416_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & i_reg_586(31-1 downto 0)))));
    shl_ln79_fu_1070_p3 <= (add_ln2937_fu_1064_p2 & ap_const_lv2_0);
    shl_ln80_fu_1098_p3 <= (add_ln2938_fu_1092_p2 & ap_const_lv2_0);
    shl_ln81_fu_1118_p3 <= (add_ln2939_fu_1112_p2 & ap_const_lv2_0);
    shl_ln82_fu_1556_p3 <= (sub_ln685_5_fu_1551_p2 & ap_const_lv1_0);
    shl_ln83_fu_1731_p3 <= (add_ln2949_reg_3720 & ap_const_lv2_0);
    shl_ln84_fu_1636_p3 <= (add_ln2949_1_fu_1631_p2 & ap_const_lv2_0);
    shl_ln85_fu_1677_p3 <= (add_ln2958_fu_1673_p2 & ap_const_lv2_0);
    shl_ln86_fu_1763_p3 <= (u_132_fu_186 & ap_const_lv2_0);
    shl_ln87_fu_2745_p3 <= (u_133_fu_190 & ap_const_lv2_0);
    shl_ln88_fu_1798_p3 <= (trunc_ln2966_fu_1794_p1 & ap_const_lv1_0);
    shl_ln89_fu_1850_p3 <= (add_ln2967_fu_1845_p2 & ap_const_lv2_0);
    shl_ln90_fu_2477_p3 <= (add_ln160131_fu_2472_p2 & ap_const_lv2_0);
    shl_ln91_fu_2869_p3 <= (add_ln3012_reg_4074 & ap_const_lv2_0);
    shl_ln92_fu_2780_p3 <= (trunc_ln3028_fu_2776_p1 & ap_const_lv1_0);
    shl_ln93_fu_2832_p3 <= (add_ln3029_fu_2827_p2 & ap_const_lv2_0);
    shl_ln94_fu_2609_p3 <= (add_ln1621_fu_2604_p2 & ap_const_lv2_0);
    shl_ln95_fu_2717_p3 <= (add_ln3021_fu_2713_p2 & ap_const_lv2_0);
    shl_ln96_fu_1976_p3 <= (add_ln2949_5_reg_3792 & ap_const_lv2_0);
    shl_ln97_fu_1992_p3 <= (add_ln2976_fu_1988_p2 & ap_const_lv2_0);
    shl_ln98_fu_3197_p3 <= (add_ln3012_3_reg_4092 & ap_const_lv2_0);
    shl_ln99_fu_2024_p3 <= (add_ln2949_9_fu_2020_p2 & ap_const_lv2_0);
    shl_ln_fu_976_p3 <= (mul_ln2935_fu_966_p2 & ap_const_lv3_0);
    sub_fu_1356_p2 <= std_logic_vector(unsigned(logn) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_ln1621_1_fu_3135_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln1621_6_fu_3131_p1));
    sub_ln1621_fu_2655_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln1621_4_fu_2651_p1));
    sub_ln685_4_fu_2326_p2 <= std_logic_vector(unsigned(shl_ln685_fu_2320_p2) - unsigned(zext_ln1584_fu_2306_p1));
    sub_ln685_5_fu_1551_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(trunc_ln2948_reg_3683));
    sub_ln685_fu_1568_p2 <= std_logic_vector(unsigned(zext_ln685_fu_1564_p1) - unsigned(zext_ln2948_fu_1543_p1));
    sub_ln697_2_fu_3151_p2 <= std_logic_vector(unsigned(x_61_reg_4112) - unsigned(and_ln1621_1_fu_3145_p2));
    sub_ln697_fu_2671_p2 <= std_logic_vector(unsigned(x_60_reg_4015) - unsigned(and_ln1621_fu_2665_p2));
    t1_fu_1126_p2 <= std_logic_vector(unsigned(shl_ln81_fu_1118_p3) + unsigned(empty_fu_912_p1));
    tmp1_fu_1171_p2 <= std_logic_vector(unsigned(empty_308_fu_1167_p1) + unsigned(ap_const_lv2_3));
    tmp_164_fu_1388_p4 <= empty_311_fu_1383_p2(13 downto 2);
    tmp_165_fu_1299_p3 <= (empty_312_reg_3636 & ap_const_lv3_0);
    tmp_167_fu_1198_p4 <= empty_322_fu_1193_p2(13 downto 2);
    tmp_168_fu_1244_p3 <= (empty_323_reg_3593 & ap_const_lv3_0);
    tmp_178_fu_1574_p3 <= sub_ln685_fu_1568_p2(31 downto 31);
    tmp_179_fu_2332_p3 <= sub_ln685_4_fu_2326_p2(31 downto 31);
    tmp_180_fu_2522_p3 <= w_fu_2517_p2(31 downto 31);
    tmp_181_fu_2564_p3 <= add_ln685_14_fu_2558_p2(31 downto 31);
    tmp_182_fu_2676_p3 <= sub_ln697_fu_2671_p2(31 downto 31);
    tmp_183_fu_2974_p3 <= w_60_fu_2969_p2(31 downto 31);
    tmp_184_fu_3016_p3 <= add_ln685_17_fu_3010_p2(31 downto 31);
    tmp_185_fu_3156_p3 <= sub_ln697_2_fu_3151_p2(31 downto 31);
    trunc_ln1584_fu_2214_p0 <= PRIMES_p_q0;
    trunc_ln1584_fu_2214_p1 <= trunc_ln1584_fu_2214_p0(24 - 1 downto 0);
    trunc_ln2935_1_fu_988_p3 <= (trunc_ln2935_2_fu_984_p1 & ap_const_lv3_0);
    trunc_ln2935_2_fu_984_p1 <= mul_ln2935_fu_966_p2(11 - 1 downto 0);
    trunc_ln2935_fu_972_p1 <= mul_ln2935_fu_966_p2(12 - 1 downto 0);
    trunc_ln2936_1_fu_1022_p3 <= (trunc_ln2935_2_fu_984_p1 & ap_const_lv1_0);
    trunc_ln2936_2_fu_1034_p1 <= shl_ln2936_fu_1008_p2(12 - 1 downto 0);
    trunc_ln2936_fu_1030_p1 <= shl_ln2936_fu_1008_p2(62 - 1 downto 0);
    trunc_ln2938_fu_1088_p1 <= n_fu_920_p2(12 - 1 downto 0);
    trunc_ln2940_fu_1136_p1 <= shl_ln2936_fu_1008_p2(61 - 1 downto 0);
    trunc_ln2948_fu_1451_p0 <= PRIMES_p_q0;
    trunc_ln2948_fu_1451_p1 <= trunc_ln2948_fu_1451_p0(24 - 1 downto 0);
    trunc_ln2949_1_fu_1790_p1 <= idx177_reg_531(12 - 1 downto 0);
    trunc_ln2949_2_fu_1930_p1 <= idx179_reg_553(12 - 1 downto 0);
    trunc_ln2949_3_fu_2048_p1 <= idx181_reg_575(12 - 1 downto 0);
    trunc_ln2949_fu_1627_p1 <= idx_reg_509(12 - 1 downto 0);
    trunc_ln2958_fu_1664_p1 <= v_reg_498(12 - 1 downto 0);
    trunc_ln2966_fu_1794_p1 <= v_34_reg_520(11 - 1 downto 0);
    trunc_ln2976_fu_1967_p1 <= v_38_reg_542(12 - 1 downto 0);
    trunc_ln2984_fu_2057_p1 <= v_44_reg_564(11 - 1 downto 0);
    trunc_ln3012_1_fu_2772_p1 <= idx185_reg_693(12 - 1 downto 0);
    trunc_ln3012_2_fu_2907_p1 <= idx187_reg_726(12 - 1 downto 0);
    trunc_ln3012_3_fu_3220_p1 <= idx189_reg_769(12 - 1 downto 0);
    trunc_ln3012_fu_2459_p1 <= idx183_reg_650(12 - 1 downto 0);
    trunc_ln3020_fu_2600_p1 <= indvars_iv62_reg_628(12 - 1 downto 0);
    trunc_ln3021_fu_2637_p1 <= v_33_reg_638(12 - 1 downto 0);
    trunc_ln3028_fu_2776_p1 <= v_36_reg_682(11 - 1 downto 0);
    trunc_ln3033_fu_3052_p1 <= indvars_iv_reg_704(12 - 1 downto 0);
    trunc_ln3035_fu_3089_p1 <= v_40_reg_714(12 - 1 downto 0);
    trunc_ln3042_fu_3242_p1 <= v_42_reg_758(11 - 1 downto 0);
    trunc_ln735_fu_2370_p1 <= grp_modp_montymul_fu_289_p_dout0(1 - 1 downto 0);
    trunc_ln757_fu_1705_p1 <= grp_modp_montymul_fu_289_p_dout0(1 - 1 downto 0);
    trunc_ln779_fu_2422_p1 <= shl_ln779_fu_2416_p2(8 - 1 downto 0);
    u_131_fu_2177_p2 <= std_logic_vector(unsigned(u_201_reg_3432) + unsigned(ap_const_lv8_FF));
    u_204_fu_2505_p2 <= std_logic_vector(signed(u_reg_662) + signed(ap_const_lv9_1FF));
    u_206_fu_2957_p2 <= std_logic_vector(signed(u_205_reg_738) + signed(ap_const_lv9_1FF));
    u_207_fu_3345_p2 <= std_logic_vector(unsigned(u_133_fu_190) + unsigned(ap_const_lv8_1));
    u_208_fu_1441_p2 <= std_logic_vector(unsigned(u_132_fu_186) + unsigned(ap_const_lv8_1));
    v_35_fu_1621_p2 <= std_logic_vector(unsigned(v_reg_498) + unsigned(ap_const_lv64_1));
    v_37_fu_1784_p2 <= std_logic_vector(unsigned(v_34_reg_520) + unsigned(ap_const_lv63_1));
    v_39_fu_2766_p2 <= std_logic_vector(unsigned(v_36_reg_682) + unsigned(ap_const_lv63_1));
    v_41_fu_2453_p2 <= std_logic_vector(unsigned(v_33_reg_638) + unsigned(ap_const_lv64_1));
    v_43_fu_1924_p2 <= std_logic_vector(unsigned(v_38_reg_542) + unsigned(ap_const_lv64_1));
    v_45_fu_3214_p2 <= std_logic_vector(unsigned(v_42_reg_758) + unsigned(ap_const_lv63_1));
    v_46_fu_2901_p2 <= std_logic_vector(unsigned(v_40_reg_714) + unsigned(ap_const_lv64_1));
    v_47_fu_2042_p2 <= std_logic_vector(unsigned(v_44_reg_564) + unsigned(ap_const_lv63_1));

    vla1_address0_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state10, ap_CS_fsm_state12, compare_src_dst_reg_3556, compare_n_to_0_reg_3560, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state16, icmp_ln2963_fu_1779_p2, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state23, icmp_ln2981_fu_2037_p2, ap_CS_fsm_state33, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state55, ap_CS_fsm_state58, ap_CS_fsm_state59, icmp_ln3038_fu_3209_p2, grp_zint_rebuild_CRT_1_fu_780_vla1_address0, grp_modp_mkgm2_1_fu_824_vla1_address0, grp_modp_NTT2_ext_1_fu_839_vla1_address0, grp_modp_iNTT2_ext_1_fu_852_vla1_address0, ap_CS_fsm_state13, ap_CS_fsm_state49, ap_CS_fsm_state45, ap_CS_fsm_state57, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64, p_cast9_cast_fu_1208_p1, p_cast12_cast_fu_1286_p1, p_cast7_cast_fu_1341_p1, p_cast4_cast_fu_1398_p1, zext_ln2958_fu_1659_p1, zext_ln2958_1_fu_1700_p1, zext_ln2967_fu_1873_p1, zext_ln2984_fu_2097_p1, zext_ln3021_fu_2740_p1, zext_ln3028_fu_2816_p1, zext_ln1601_1_fu_2952_p1, zext_ln3035_fu_3193_p1, zext_ln3042_fu_3282_p1)
    begin
        if (((icmp_ln3038_fu_3209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            vla1_address0 <= zext_ln3042_fu_3282_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            vla1_address0 <= zext_ln3035_fu_3193_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            vla1_address0 <= zext_ln1601_1_fu_2952_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            vla1_address0 <= zext_ln3028_fu_2816_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            vla1_address0 <= zext_ln3021_fu_2740_p1(12 - 1 downto 0);
        elsif (((icmp_ln2981_fu_2037_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            vla1_address0 <= zext_ln2984_fu_2097_p1(12 - 1 downto 0);
        elsif (((icmp_ln2963_fu_1779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            vla1_address0 <= zext_ln2967_fu_1873_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            vla1_address0 <= zext_ln2958_1_fu_1700_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vla1_address0 <= zext_ln2958_fu_1659_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            vla1_address0 <= p_cast4_cast_fu_1398_p1(12 - 1 downto 0);
        elsif (((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla1_address0 <= p_cast7_cast_fu_1341_p1(12 - 1 downto 0);
        elsif (((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla1_address0 <= p_cast12_cast_fu_1286_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            vla1_address0 <= p_cast9_cast_fu_1208_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_address0 <= grp_modp_iNTT2_ext_1_fu_852_vla1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_address0 <= grp_modp_NTT2_ext_1_fu_839_vla1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla1_address0 <= grp_modp_mkgm2_1_fu_824_vla1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_address0 <= grp_zint_rebuild_CRT_1_fu_780_vla1_address0;
        else 
            vla1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    vla1_address1_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state15, ap_CS_fsm_state16, icmp_ln2963_fu_1779_p2, ap_CS_fsm_state19, ap_CS_fsm_state20, icmp_ln2975_fu_1919_p2, ap_CS_fsm_state22, ap_CS_fsm_state23, icmp_ln2981_fu_2037_p2, ap_CS_fsm_state33, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state59, icmp_ln3038_fu_3209_p2, grp_zint_rebuild_CRT_1_fu_780_vla1_address1, grp_modp_NTT2_ext_1_fu_839_vla1_address1, grp_modp_iNTT2_ext_1_fu_852_vla1_address1, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state53, ap_CS_fsm_state61, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64, zext_ln2966_fu_1834_p1, zext_ln2968_fu_1910_p1, zext_ln2976_fu_1962_p1, zext_ln2976_1_fu_2015_p1, zext_ln2985_fu_2136_p1, zext_ln2986_fu_2168_p1, zext_ln1601_fu_2500_p1, zext_ln1621_fu_2632_p1, zext_ln3029_fu_2855_p1, zext_ln3030_fu_2891_p1, zext_ln1621_5_fu_3084_p1, zext_ln3043_fu_3321_p1, zext_ln3044_fu_3341_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            vla1_address1 <= zext_ln3044_fu_3341_p1(12 - 1 downto 0);
        elsif (((icmp_ln3038_fu_3209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            vla1_address1 <= zext_ln3043_fu_3321_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            vla1_address1 <= zext_ln1621_5_fu_3084_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            vla1_address1 <= zext_ln3030_fu_2891_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            vla1_address1 <= zext_ln3029_fu_2855_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            vla1_address1 <= zext_ln1621_fu_2632_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            vla1_address1 <= zext_ln1601_fu_2500_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            vla1_address1 <= zext_ln2986_fu_2168_p1(12 - 1 downto 0);
        elsif (((icmp_ln2981_fu_2037_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            vla1_address1 <= zext_ln2985_fu_2136_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            vla1_address1 <= zext_ln2976_1_fu_2015_p1(12 - 1 downto 0);
        elsif (((icmp_ln2975_fu_1919_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            vla1_address1 <= zext_ln2976_fu_1962_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla1_address1 <= zext_ln2968_fu_1910_p1(12 - 1 downto 0);
        elsif (((icmp_ln2963_fu_1779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            vla1_address1 <= zext_ln2966_fu_1834_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_address1 <= grp_modp_iNTT2_ext_1_fu_852_vla1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_address1 <= grp_modp_NTT2_ext_1_fu_839_vla1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_address1 <= grp_zint_rebuild_CRT_1_fu_780_vla1_address1;
        else 
            vla1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    vla1_ce0_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state10, ap_CS_fsm_state12, compare_src_dst_reg_3556, compare_n_to_0_reg_3560, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state16, icmp_ln2963_fu_1779_p2, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state23, icmp_ln2981_fu_2037_p2, ap_CS_fsm_state33, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state55, ap_CS_fsm_state58, ap_CS_fsm_state59, icmp_ln3038_fu_3209_p2, grp_zint_rebuild_CRT_1_fu_780_vla1_ce0, grp_modp_mkgm2_1_fu_824_vla1_ce0, grp_modp_NTT2_ext_1_fu_839_vla1_ce0, grp_modp_iNTT2_ext_1_fu_852_vla1_ce0, ap_CS_fsm_state13, ap_CS_fsm_state49, ap_CS_fsm_state45, ap_CS_fsm_state57, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln3038_fu_3209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59)) or ((icmp_ln2981_fu_2037_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln2963_fu_1779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            vla1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_ce0 <= grp_modp_iNTT2_ext_1_fu_852_vla1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_ce0 <= grp_modp_NTT2_ext_1_fu_839_vla1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla1_ce0 <= grp_modp_mkgm2_1_fu_824_vla1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_ce0 <= grp_zint_rebuild_CRT_1_fu_780_vla1_ce0;
        else 
            vla1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vla1_ce1_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state15, ap_CS_fsm_state16, icmp_ln2963_fu_1779_p2, ap_CS_fsm_state19, ap_CS_fsm_state20, icmp_ln2975_fu_1919_p2, ap_CS_fsm_state22, ap_CS_fsm_state23, icmp_ln2981_fu_2037_p2, ap_CS_fsm_state33, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state59, icmp_ln3038_fu_3209_p2, grp_zint_rebuild_CRT_1_fu_780_vla1_ce1, grp_modp_NTT2_ext_1_fu_839_vla1_ce1, grp_modp_iNTT2_ext_1_fu_852_vla1_ce1, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state53, ap_CS_fsm_state61, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or ((icmp_ln3038_fu_3209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59)) or ((icmp_ln2981_fu_2037_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln2975_fu_1919_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((icmp_ln2963_fu_1779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            vla1_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_ce1 <= grp_modp_iNTT2_ext_1_fu_852_vla1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_ce1 <= grp_modp_NTT2_ext_1_fu_839_vla1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_ce1 <= grp_zint_rebuild_CRT_1_fu_780_vla1_ce1;
        else 
            vla1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vla1_d0_assign_proc : process(vla1_q0, in_ntt, out_ntt, ap_CS_fsm_state10, compare_src_dst_reg_3556, compare_n_to_0_reg_3560, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state33, ap_CS_fsm_state50, ap_CS_fsm_state58, grp_zint_rebuild_CRT_1_fu_780_vla1_d0, grp_modp_mkgm2_1_fu_824_vla1_d0, grp_modp_NTT2_ext_1_fu_839_vla1_d0, grp_modp_iNTT2_ext_1_fu_852_vla1_d0, ap_CS_fsm_state13, ap_CS_fsm_state49, ap_CS_fsm_state45, ap_CS_fsm_state57, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64, empty_328_fu_1279_p2, empty_317_fu_1334_p2, z_112_fu_2706_p2, z_114_fu_3186_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            vla1_d0 <= z_114_fu_3186_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            vla1_d0 <= z_112_fu_2706_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            vla1_d0 <= vla1_q0;
        elsif (((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla1_d0 <= empty_317_fu_1334_p2;
        elsif (((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla1_d0 <= empty_328_fu_1279_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_d0 <= grp_modp_iNTT2_ext_1_fu_852_vla1_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_d0 <= grp_modp_NTT2_ext_1_fu_839_vla1_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla1_d0 <= grp_modp_mkgm2_1_fu_824_vla1_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_d0 <= grp_zint_rebuild_CRT_1_fu_780_vla1_d0;
        else 
            vla1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla1_d1_assign_proc : process(vla1_q1, in_ntt, out_ntt, ap_CS_fsm_state15, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state33, ap_CS_fsm_state50, ap_CS_fsm_state58, grp_zint_rebuild_CRT_1_fu_780_vla1_d1, grp_modp_NTT2_ext_1_fu_839_vla1_d1, grp_modp_iNTT2_ext_1_fu_852_vla1_d1, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state53, ap_CS_fsm_state61, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64, grp_modp_montymul_fu_289_p_dout0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            vla1_d1 <= vla1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            vla1_d1 <= grp_modp_montymul_fu_289_p_dout0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_d1 <= grp_modp_iNTT2_ext_1_fu_852_vla1_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_d1 <= grp_modp_NTT2_ext_1_fu_839_vla1_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_d1 <= grp_zint_rebuild_CRT_1_fu_780_vla1_d1;
        else 
            vla1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla1_we0_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state10, compare_src_dst_reg_3556, compare_n_to_0_reg_3560, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state33, ap_CS_fsm_state50, ap_CS_fsm_state58, grp_zint_rebuild_CRT_1_fu_780_vla1_we0, grp_modp_mkgm2_1_fu_824_vla1_we0, grp_modp_NTT2_ext_1_fu_839_vla1_we0, grp_modp_iNTT2_ext_1_fu_852_vla1_we0, ap_CS_fsm_state13, ap_CS_fsm_state49, ap_CS_fsm_state45, ap_CS_fsm_state57, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64, empty_327_fu_1272_p2, empty_316_fu_1327_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            vla1_we0 <= ap_const_lv4_F;
        elsif (((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla1_we0 <= empty_316_fu_1327_p2;
        elsif (((compare_n_to_0_reg_3560 = ap_const_lv1_0) and (compare_src_dst_reg_3556 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla1_we0 <= empty_327_fu_1272_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_we0 <= grp_modp_iNTT2_ext_1_fu_852_vla1_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_we0 <= grp_modp_NTT2_ext_1_fu_839_vla1_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla1_we0 <= grp_modp_mkgm2_1_fu_824_vla1_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_we0 <= grp_zint_rebuild_CRT_1_fu_780_vla1_we0;
        else 
            vla1_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    vla1_we1_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state15, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state33, ap_CS_fsm_state50, ap_CS_fsm_state58, grp_zint_rebuild_CRT_1_fu_780_vla1_we1, grp_modp_NTT2_ext_1_fu_839_vla1_we1, grp_modp_iNTT2_ext_1_fu_852_vla1_we1, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state53, ap_CS_fsm_state61, ap_CS_fsm_state31, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            vla1_we1 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((out_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vla1_we1 <= grp_modp_iNTT2_ext_1_fu_852_vla1_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla1_we1 <= grp_modp_NTT2_ext_1_fu_839_vla1_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            vla1_we1 <= grp_zint_rebuild_CRT_1_fu_780_vla1_we1;
        else 
            vla1_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    w_60_fu_2969_p2 <= std_logic_vector(unsigned(vla1_q0) - unsigned(zext_ln1584_reg_3934));
    w_fu_2517_p2 <= std_logic_vector(unsigned(vla1_q1) - unsigned(zext_ln1584_reg_3934));
    x_38_fu_1774_p2 <= std_logic_vector(unsigned(zext_ln2963_fu_1770_p1) + unsigned(empty_reg_3381));
    x_42_fu_2756_p2 <= std_logic_vector(unsigned(zext_ln3024_fu_2752_p1) + unsigned(empty_reg_3381));
    x_43_fu_1895_p2 <= std_logic_vector(unsigned(shl_ln2949_1_fu_1887_p3) + unsigned(empty_reg_3381));
    x_49_fu_2876_p2 <= std_logic_vector(unsigned(shl_ln91_fu_2869_p3) + unsigned(empty_reg_3381));
    x_50_fu_1947_p2 <= std_logic_vector(unsigned(shl_ln2949_2_fu_1939_p3) + unsigned(empty_reg_3381));
    x_51_fu_3204_p2 <= std_logic_vector(unsigned(shl_ln98_fu_3197_p3) + unsigned(empty_reg_3381));
    x_54_fu_2032_p2 <= std_logic_vector(unsigned(shl_ln99_fu_2024_p3) + unsigned(empty_reg_3381));
    x_55_fu_3237_p2 <= std_logic_vector(unsigned(shl_ln3012_1_fu_3229_p3) + unsigned(empty_reg_3381));
    x_56_fu_2153_p2 <= std_logic_vector(unsigned(shl_ln2949_3_fu_2146_p3) + unsigned(empty_reg_3381));
    x_57_fu_1058_p2 <= std_logic_vector(unsigned(shl_ln2936_1_fu_1050_p3) + unsigned(empty_fu_912_p1));
    x_58_fu_1738_p2 <= std_logic_vector(unsigned(shl_ln83_fu_1731_p3) + unsigned(empty_reg_3381));
    x_59_fu_1983_p2 <= std_logic_vector(unsigned(shl_ln96_fu_1976_p3) + unsigned(empty_reg_3381));
    x_60_fu_2594_p2 <= std_logic_vector(unsigned(zext_ln685_10_fu_2590_p1) + unsigned(add_ln685_14_fu_2558_p2));
    x_61_fu_3046_p2 <= std_logic_vector(unsigned(zext_ln685_11_fu_3042_p1) + unsigned(add_ln685_17_fu_3010_p2));
    x_assign_93_cast_fu_2182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_131_fu_2177_p2),32));
    x_assign_cast26_fu_2186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_201_reg_3432),62));
    x_fu_1644_p2 <= std_logic_vector(unsigned(shl_ln84_fu_1636_p3) + unsigned(empty_reg_3381));
    y_60_fu_1481_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_fu_1469_p2));
    y_60_fu_1481_p1 <= zext_ln656_fu_1465_p1(24 - 1 downto 0);
    y_63_fu_1499_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_fu_1487_p2));
    y_64_fu_1515_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_fu_1505_p2));
    y_65_fu_2222_p2 <= std_logic_vector(unsigned(ap_const_lv24_2) - unsigned(trunc_ln1584_fu_2214_p1));
    y_66_fu_2244_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_14_fu_2232_p2));
    y_66_fu_2244_p1 <= zext_ln656_4_fu_2228_p1(24 - 1 downto 0);
    y_67_fu_2262_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_14_fu_2250_p2));
    y_68_fu_2278_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_14_fu_2268_p2));
    y_fu_1459_p2 <= std_logic_vector(unsigned(ap_const_lv24_2) - unsigned(trunc_ln2948_fu_1451_p1));
    z_101_fu_2314_p2 <= std_logic_vector(signed(ap_const_lv32_80000000) - signed(zext_ln1584_fu_2306_p1));
    z_104_fu_2362_p2 <= std_logic_vector(unsigned(zext_ln685_9_fu_2358_p1) + unsigned(sub_ln685_4_fu_2326_p2));
    z_112_fu_2706_p2 <= std_logic_vector(unsigned(zext_ln697_fu_2702_p1) + unsigned(sub_ln697_fu_2671_p2));
    z_114_fu_3186_p2 <= std_logic_vector(unsigned(zext_ln697_1_fu_3182_p1) + unsigned(sub_ln697_2_fu_3151_p2));
    z_116_fu_1749_p4 <= add_ln757_4_fu_1743_p2(31 downto 1);
    z_fu_1604_p2 <= std_logic_vector(unsigned(zext_ln685_8_fu_1600_p1) + unsigned(sub_ln685_fu_1568_p2));
    zext_ln1584_2_fu_2310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p0i_4_reg_3927),32));
    zext_ln1584_fu_2306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1584_reg_3914),32));
    zext_ln1587_1_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q1),9));
    zext_ln1587_2_fu_2189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_131_fu_2177_p2),9));
    zext_ln1587_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q1),64));
    zext_ln1598_1_fu_3000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1598_1_fu_2996_p1),32));
    zext_ln1598_fu_2548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1598_fu_2544_p1),32));
    zext_ln1601_1_fu_2952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1601_1_fu_2942_p4),64));
    zext_ln1601_fu_2500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln43_fu_2490_p4),64));
    zext_ln1621_4_fu_2651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_869_p4),3));
    zext_ln1621_5_fu_3084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1621_4_fu_3074_p4),64));
    zext_ln1621_6_fu_3131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_869_p4),3));
    zext_ln1621_fu_2632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1621_3_fu_2622_p4),64));
    zext_ln2917_1_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q0),9));
    zext_ln2917_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q0),64));
    zext_ln2918_1_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t1_fu_1126_p2),64));
    zext_ln2918_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gm_fu_1078_p2),64));
    zext_ln2924_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),64));
    zext_ln2926_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(depth),64));
    zext_ln2927_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2927_fu_901_p2),64));
    zext_ln2946_1_fu_1432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_132_fu_186),12));
    zext_ln2946_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_132_fu_186),64));
    zext_ln2948_1_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p0i_reg_3701),32));
    zext_ln2948_fu_1543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2948_reg_3688),32));
    zext_ln2957_fu_1727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2957_fu_1723_p1),32));
    zext_ln2958_1_fu_1700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2958_1_fu_1690_p4),64));
    zext_ln2958_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1649_p4),64));
    zext_ln2963_fu_1770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln86_fu_1763_p3),14));
    zext_ln2966_fu_1834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln40_fu_1824_p4),64));
    zext_ln2967_fu_1873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln41_fu_1863_p4),64));
    zext_ln2968_fu_1910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln42_fu_1900_p4),64));
    zext_ln2976_1_fu_2015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2976_1_fu_2005_p4),64));
    zext_ln2976_fu_1962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln48_fu_1952_p4),64));
    zext_ln2984_fu_2097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln53_fu_2087_p4),64));
    zext_ln2985_fu_2136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln54_fu_2126_p4),64));
    zext_ln2986_fu_2168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln55_fu_2158_p4),64));
    zext_ln3009_1_fu_2200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_133_fu_190),64));
    zext_ln3009_2_fu_2205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_133_fu_190),12));
    zext_ln3009_fu_2193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_131_fu_2177_p2),12));
    zext_ln3021_fu_2740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln47_fu_2730_p4),64));
    zext_ln3024_fu_2752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln87_fu_2745_p3),14));
    zext_ln3028_fu_2816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln44_fu_2806_p4),64));
    zext_ln3029_fu_2855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln45_fu_2845_p4),64));
    zext_ln3030_fu_2891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln46_fu_2881_p4),64));
    zext_ln3035_fu_3193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln52_reg_4123),64));
    zext_ln3042_fu_3282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln49_fu_3272_p4),64));
    zext_ln3043_fu_3321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln50_fu_3311_p4),64));
    zext_ln3044_fu_3341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln51_reg_4161),64));
    zext_ln656_4_fu_2228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_65_fu_2222_p2),31));
    zext_ln656_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_fu_1459_p2),31));
    zext_ln685_10_fu_2590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_7_fu_2586_p1),32));
    zext_ln685_11_fu_3042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_8_fu_3038_p1),32));
    zext_ln685_8_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_fu_1596_p1),32));
    zext_ln685_9_fu_2358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_6_fu_2354_p1),32));
    zext_ln685_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln82_fu_1556_p3),32));
    zext_ln697_1_fu_3182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln697_1_fu_3178_p1),32));
    zext_ln697_fu_2702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln697_fu_2698_p1),32));
    zext_ln757_11_fu_2412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_12_fu_2402_p4),32));
    zext_ln757_12_fu_1759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z_116_fu_1749_p4),32));
    zext_ln757_fu_2392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln757_fu_2388_p1),32));
end behav;
